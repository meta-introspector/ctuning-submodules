['YAD2K', 'The_model_is_currently_cloned_into_=${INSTALL_DIR}=,_which', 'Run_YAD2K_demo', 'Preprocess_the_calibration_dataset', 'Calibrate_the_model', 'Download_the_COCO_training_dataset', 'Select_the_calibration_dataset', 'Detect_a_pregenerated_profile', 'Describe_how_the_=--env.CK_ENABLE_BATCH=_flag_enables_the_choice', '=ck_custom_preprocess=,_=ck_custom_preprocess_batch=', 'Input_Parameters*', '=custom_tensorRT.py=', 'Describe_how_the_=--env.CK_ENABLE_TENSORRT=_flag_enables_the', '=load_graph_tensorrt_custom=_', 'Hint_install_prebuilt_TensorFlow_via_pip_to_check_all_suitable', 'This_package_is_deprecated_by_=1.15.0=,_which_includes_additional', 'Unresolved_issues', 'Cannot_build_for_Android_(hence_removed_patches)', 'Resolved_issues', 'To_use_machine-specific_build_options_(very_important_on_Raspberry', 'Cannot_build_for_Android']```css
@prefix : <http://ctuning.org/ml-benchmark-ontology#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
<http://ctuning.org/ml-benchmark-ontology> a owl:Ontology .

:AutomatedDesignSpaceExploration a owl:Class ;
    rdfs:subClassOf :Exploration .

:Standardization a owl:Class ;
    rdfs:subClassOf :Process .

:Workflow a owl:Class ;
    rdfs:subClassOf :Process .

:hasBenchmark a owl:ObjectProperty ;
    rdfs:domain :Model ;
    rdfs:range :Benchmark .

:mlperfInferencev1.0 a :MLPerfInference,
        owl:NamedIndividual .

:reproducibilityReportMLPerfInferencev1.1 a :ReproducibilityReport,
        owl:NamedIndividual .

:Exploration a owl:Class ;
    rdfs:subClassOf :Analysis .

:MLPerfInference a owl:Class ;
    rdfs:subClassOf :Benchmark .

:Report a owl:Class ;
    rdfs:subClassOf :Documentation .

:ReproducibilityReport a owl:Class ;
    rdfs:subClassOf :Report .

:Benchmark a owl:Class ;
    rdfs:subClassOf :Evaluation .

# Model
:YAD2K a :Model, owl:NamedIndividual ;
    hasBenchmark mlperfInferencev1.0.

:YAD2K_InstallationDir a :InstalledModel ;
    hasInstallationDir ${INSTALL_DIR} ;

# Demo
:Run_YAD2K_demo a :Workflow, owl:NamedIndividual ;
    hasInputParameters InputParameters* .

# Calibration
:Preprocess_the_calibration_dataset a :Standardization, owl:NamedIndividual ;
    hasInputParameters InputParameters*.

:Calibrate_the_model a :MLPerfInference, owl:NamedIndividual ;
    requiresPreprocessing.

# Data
:Download_the_COCO_training_dataset a :Standardization, owl:NamedIndividual ;
    hasInputParameters InputParameters*.

:Select_the_calibration_dataset a :Exploration, owl:NamedIndividual ;
    requiresPreprocessing.

# Profiles
:Detect_a_pregenerated_profile a :Standardization, owl:NamedIndividual ;
    hasInputParameters InputParameters*.

:Describe_how_the=--env.CK_ENABLE_BATCH=_flag_enables_the_choice a :Standardization, owl:NamedIndividual ;
    hasInputParameters InputParameters*.

:=ck_custom_preprocess=,_=ck_custom_preprocess_batch= a :Standardization, owl:NamedIndividual ;
    requiresPreprocessing.

# TensorRT
:Input_Parameters* a :InputParameters, owl:NamedIndividual ;
    hasFlag tensorRT.py.

:=load_graph_tensorrt_custom= a :Standardization, owl:NamedIndividual ;
    requiresPreprocessing.

# Build Options
:Hint_install_prebuilt_TensorFlow_via_pip_to_check_all_suitable a :Standardization, owl:NamedIndividual ;
    hasInputParameters InputParameters*.
```