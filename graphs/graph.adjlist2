#./parse_structure.py
# GMT Wed Nov  1 17:21:49 2023
# test
we_have_moved_the_main_AE_pages 1
Description {'weight': 1}
Description 5
Managing_the_configuration_files {'weight': 2}
Setup_for_Google_Cloud_Instances {'weight': 2}
System_dependencies {'weight': 2}
Set_up {'weight': 2}
Download_the_needed_files {'weight': 2}
Packed_data 1
Running_the_model {'weight': 32}
Running_the_model 0
Example_2 1
Description_of_how_the_=results_text.tar.gz=_file_was_prepared {'weight': 37}
Description_of_how_the_=results_text.tar.gz=_file_was_prepared 0
Requirements 3
2._Directions {'weight': 128}
Quick_Start_Guide {'weight': 1}
Steps_to_download_data {'weight': 2}
2._Directions 0
Steps_to_download_data 2
=dev-clean-wav/=_*_=dev-other-wav/=_*_=test-clean-wav/=_* {'weight': 39}
Steps_to_launch_training {'weight': 3}
=dev-clean-wav/=_*_=dev-other-wav/=_*_=test-clean-wav/=_* 0
NVIDIA_DGX_A100_(single_node) 1
Alternative_launch_with_nvidia-docker {'weight': 33}
Alternative_launch_with_nvidia-docker 2
Steps_to_launch_training_on_multiple_nodes {'weight': 26}
3._Dataset/Environment {'weight': 32}
Hyperparameter_settings 3
3._Dataset/Environment {'weight': 39}
3._Quality {'weight': 27}
Dataset/Environment {'weight': 38}
3._Dataset/Environment 0
Test_data_order 2
4._Model {'weight': 46}
3._Model {'weight': 2}
4._Model 0
Loss_function 2
5._Quality {'weight': 37}
Submission_functions {'weight': 1}
5._Quality 0
Publication/Attribution 3
2._Directions {'weight': 29}
Quality {'weight': 38}
5._Quality {'weight': 6}
Steps_to_launch_training_on_multiple_nodes 0
3._Quality 0
Dataset/Environment 0
The_MLPerf_Subset 1
Model {'weight': 38}
Model 0
Quality 0
=--opt-level=_=O1=_and_=O2=_both_use_dynamic_loss_scaling_by 1
Summary {'weight': 11}
Summary 8
=generate_final_report.py= {'weight': 4}
=pack_submission.sh=_(Deprecated) {'weight': 4}
=repository_checks.sh= {'weight': 4}
MLPerf_inference_-_Python_-_ResNet50_FP32_-_ImageNet_-_TVM_-_CPU_- {'weight': 2}
The_next_steps {'weight': 4}
MLPerf_inference_-_Python_-_RetinaNet_FP32_-_Open_Images_-_ONNX_- {'weight': 2}
MLPerf_inference_-_C++_-_RetinaNet_FP32_-_Open_Images_-_ONNX_-_GPU_- {'weight': 2}
MLPerf_inference_-_Python_-_RetinaNet_FP32_-_Open_Images_-_PyTorch_- {'weight': 2}
training*_below_for_more_detail) 1
=--opt-level_O2=_("Almost_FP16"_mixed_precision._More_dangerous {'weight': 11}
=--opt-level_O2=_("Almost_FP16"_mixed_precision._More_dangerous 1
Distributed_training {'weight': 11}
Distributed_training 1
Expected_Output(s) {'weight': 1}
 47
Currently,_the_non-=-devel=_images_on_Pytorch_Dockerhub_do {'weight': 11}
 {'weight': 200}
Fixing_INVALID_results {'weight': 6}
Tuning_parameters_for_better_performance {'weight': 31}
you_run_into_issues,_invalid_results,_or_would_like_to_improve_your {'weight': 31}
Model {'weight': 3}
Steps_to_do_calibration_for_RNNT {'weight': 1}
Steps_to_run_RNNT {'weight': 5}
(optional)_>=_8.4_GA {'weight': 1}
License {'weight': 1}
FileSet {'weight': 1}
RecordSet {'weight': 1}
Field {'weight': 1}
DataSource {'weight': 1}
extract {'weight': 1}
fileProperty {'weight': 1}
JSON_Text_that_matches_the_fields_of_the_=RecordSet=. {'weight': 1}
Speed*__(0.37s_step-time,_15.3K_wps)_on_/K40m/_&_(0.17s {'weight': 1}
Speed*__(2.1s_step-time,_3.4K_wps)_on_/Nvidia_K40m/_&_(0.7s {'weight': 1}
CK_based_object_detection_DSE {'weight': 2}
Notes {'weight': 2}
Recap {'weight': 2}
Rules {'weight': 1}
Known_Issues {'weight': 1}
stopping*__under_the_new_rules,_/min_query_count/_is_no_longer_a {'weight': 75}
Steps_to_run_RNN-T_with_three_options {'weight': 32}
Steps_to_run_GPT-J {'weight': 1}
Steps_to_calibrate_GPT-J {'weight': 1}
Download_the_COCO_training_dataset {'weight': 1}
Unit-tests {'weight': 2}
ImageNet_validation_dataset_(required_for_calibration) {'weight': 1}
Data_ {'weight': 2}
logger* {'weight': 2}
Customize_the_Training {'weight': 1}
Running_multiple_experiments_(optional) {'weight': 1}
Pose_estimation {'weight': 2}
Image_segmentation {'weight': 2}
Smart_reply {'weight': 2}
is_an {'weight': 2}
Known_problems {'weight': 2}
on_model_validation* {'weight': 1}
Build_the_markdown_documentation {'weight': 1}
POC_2_-_Pancreas_Segmentation {'weight': 1}
POC_3_-_Surgical_Workflow_Phase_Recognition {'weight': 1}
POC_4_-_Cloud_Experiments {'weight': 1}
How_to_Use_MedPerf {'weight': 1}
Dependency {'weight': 1}
Currently,_the_non-=-devel=_images_on_Pytorch_Dockerhub_do 1
Running_your_Apex_container {'weight': 11}
Running_your_Apex_container 1
Option_2__Install_Apex_in_a_running_container {'weight': 11}
Option_2__Install_Apex_in_a_running_container 0
and_*run.sh*_show_an_example_using_Amp 1
is_intended_purely_as_an_instructional_example,_not_a_performance {'weight': 11}
is_intended_purely_as_an_instructional_example,_not_a_performance 0
[[https_//github.com/mcarilli/mixed_precision_references/tree/master/GTC_2019][GTC 1
Contents {'weight': 11}
Contents 2
Requirements {'weight': 4}
Walkthrough {'weight': 4}
Use_[[https_//pytorch.org/docs/stable/amp.html][PyTorch 1
2._Distributed_Training {'weight': 11}
2._Distributed_Training 0
is_deprecated._Use 1
Synchronized_Batch_Normalization {'weight': 11}
Synchronized_Batch_Normalization 0
Use 1
Checkpointing {'weight': 11}
Checkpointing 1
Installation {'weight': 11}
Installation 3
Part_1._Concurrent_inference_and_dynamic_batching {'weight': 1}
Guidelines_(alpha_version) {'weight': 1}
MLCube_execution {'weight': 1}
[Experimental]_Windows 1
Custom_C++/CUDA_Extensions_and_Install_Options {'weight': 11}
Custom_C++/CUDA_Extensions_and_Install_Options 0
[[https_//github.com/NVIDIA/apex/tree/master/examples/FP16_Optimizer_simple/distributed_apex][Simple 1
Synchronized_Batch_Normalization {'weight': 11}
CPU_path 1
Important_arguments {'weight': 11}
Important_arguments 0
Transform_unstructured_sparsity_to_structured_sparsity_(as_in_Figure 1
References {'weight': 11}
References 1
Appendix {'weight': 2}
Test_your_own_range! 1
Performance_Comparisons {'weight': 11}
Performance_Comparisons 0
Build_and_deploy_HabanaLabs_MLPERF_training_3.0_container_in_the 1
Resnet50 {'weight': 1}
Resnet50 0
Run_and_time_PyTorch_Resnet50 1
Bert_TF {'weight': 2}
Bert_TF 0
to_download_Dataset_and_Checkpoint_* 2
Preparation_*_In_order_to_use_dataset_one_needs_to_preprocess {'weight': 2}
Training_data_packing {'weight': 1}
Preparation_*_In_order_to_use_dataset_one_needs_to_preprocess 1
Run_and_time {'weight': 2}
Run_and_time 1
Bert_PT {'weight': 2}
Bert_PT 0
Scaling_out_the_training_to_64_Gaudi2 1
GPT3-175B_PT {'weight': 1}
GPT3-175B_PT 0
Installing_requirements 1
Prepare_checkpoint {'weight': 1}
Prepare_checkpoint 0
Run_GPT3_on_HLS-Gaudi2-N48-PT_system 1
UNet3D {'weight': 1}
UNet3D 0
do_not_report_security_vulnerabilities_through_public_GitHub 1
Preferred_Languages {'weight': 2}
Preferred_Languages 0
Model_Tests 1
Contributor_License_Agreement {'weight': 2}
Contributor_License_Agreement 0
DeepSpeed-Compression 1
DeepSpeed_Software_Suite {'weight': 2}
DeepSpeed_Software_Suite 0
DeepSpeed_on_Azure 1
DeepSpeed_Adoption {'weight': 2}
DeepSpeed_Adoption 0
Code_of_Conduct 1
Publications {'weight': 2}
Publications 0
this_step_frequently_hangs_when_connected_to_a_VPN_(including 1
Update_the_Readthedocs.io_API_documentation {'weight': 1}
Update_the_Readthedocs.io_API_documentation 0
all_processes_must_call_this_method_and_not_just_the 1
DeepSpeed_Configuration {'weight': 1}
DeepSpeed_Configuration 1
Launching_DeepSpeed_Training {'weight': 1}
Launching_DeepSpeed_Training 0
MPI_and_AzureML_Compatibility 1
Resource_Configuration_(single-node) {'weight': 1}
Resource_Configuration_(single-node) 0
Running_BingBertSquad 1
DeepSpeed_Integration {'weight': 1}
DeepSpeed_Integration 0
Weight_updates 1
Evaluation {'weight': 1}
Evaluation 1
Recipe {'weight': 1}
Fine-tuning_Results 1
Enabling_DeepSpeed's_Transformer_Kernel_for_better_Throughput {'weight': 1}
Enabling_DeepSpeed's_Transformer_Kernel_for_better_Throughput 0
out!*_1)_The_NCCL-based_implementation_requires_PyTorch_>=_1.8 1
1._Overview {'weight': 3}
1._Overview 0
out!*_This_NCCL-based_implementation_requires_PyTorch_>=_1.8._It 1
1.2.2_MPI-based_implementation {'weight': 3}
1.2.2_MPI-based_implementation 3
1.3_0/1_Adam_Algorithm {'weight': 1}
1.3_1-bit_LAMB_Algorithm {'weight': 1}
1.3_1-bit_Algorithm {'weight': 1}
1.3_0/1_Adam_Algorithm 0
out!*_0/1_Adam_relies_on_an_compression_error_compensation 1
2._BERT_Pre-training_with_0/1_Adam {'weight': 1}
2._BERT_Pre-training_with_0/1_Adam 0
is_DeepSpeed_Compression_*_DeepSpeed_Compression_is_a_library 1
use_DeepSpeed_Compression_*_DeepSpeed_Compression_offers_novel {'weight': 1}
use_DeepSpeed_Compression_*_DeepSpeed_Compression_offers_novel 0
to_use_DeepSpeed_Compression_*_The_first_section_General_Tutorial 1
1._General_Tutorial {'weight': 1}
1._General_Tutorial 0
to_use_layer_reduction* 2
to_use_layer_reduction* {'weight': 1}
1.2_Weight_Quantization {'weight': 1}
1.2_Weight_Quantization 0
to_use_weight_quantization* 2
to_use_weight_quantization* {'weight': 1}
1.3_Activation_Quantization {'weight': 1}
1.3_Activation_Quantization 0
to_use_activation_quantization* 2
to_use_activation_quantization* {'weight': 1}
1.4_Pruning {'weight': 1}
1.4_Pruning 0
is_pruning* 1
1.4.1_Sparse_Pruning {'weight': 1}
1.4.1_Sparse_Pruning 0
to_use_sparse_pruning* 1
to_use_sparse_pruning* {'weight': 1}
to_use_row_pruning* 1
to_use_row_pruning* {'weight': 1}
to_use_head_pruning* 1
to_use_head_pruning* {'weight': 1}
to_use_channel_pruning* 2
to_use_channel_pruning* {'weight': 1}
2._Tutorial_for_ZeroQuant__efficient_and_affordable_post-training {'weight': 1}
2._Tutorial_for_ZeroQuant__efficient_and_affordable_post-training 0
to_use_ZeroQuant* 2
to_use_ZeroQuant* {'weight': 1}
3._Tutorial_for_XTC__simple_yet_effective_compression_pipeline_for {'weight': 1}
3._Tutorial_for_XTC__simple_yet_effective_compression_pipeline_for 0
to_use_XTC* 1
to_use_XTC* {'weight': 1}
of_XTC_methods_*_To_accommodate_users_who_do_not_have_a 1
3.1_One-bit_or_Two-bit_BERT-base_(12-layer)_with_8-bit_activation {'weight': 1}
3.1_One-bit_or_Two-bit_BERT-base_(12-layer)_with_8-bit_activation 0
Currently_DeepSpeed_Transformer_Kernels_do_not_support_Sparse 2
*Integrate_Transformer_Kernel* {'weight': 1}
How_to_use_sparse_attention_with_DeepSpeed_launcher {'weight': 1}
*Integrate_Transformer_Kernel* 0
DeepSpeed_MoE_requires_Pytorch_1.8_or_above._{__.notice--info} 1
Expert_groups_initialization {'weight': 1}
Expert_groups_initialization 0
Combining_ZeRO-Offload_and_DeepSpeed_MoE_for_very_large_models 1
Random_Token_Selection {'weight': 1}
Random_Token_Selection 0
Currently,_DeepSpeed_Sparse_Attention_can_be_used_only_on_NVIDIA 1
Sparse_attention_modules {'weight': 1}
Sparse_attention_modules 0
How_to_use_sparse_attention_with_DeepSpeed_launcher 0
For_large_model_training,_see 1
AlexNet {'weight': 1}
AlexNet 0
the_=lambda=_in_the_middle_of_=layers=_above_is_not_a 1
Inputs_and_Outputs {'weight': 1}
Inputs_and_Outputs 0
The_pipeline_engine_expects_data_loaders_to_return_a_=tuple=_of 1
out!*_The_pipeline_engine_/pulls/_data_from_an_iterator_instead {'weight': 1}
out!*_The_pipeline_engine_/pulls/_data_from_an_iterator_instead 1
Advanced_Topics {'weight': 1}
Advanced_Topics 0
DeepSpeed_now_supports_PreLayerNorm_as_the_default_way_for 1
Fine-tuning_with_DeepSpeed_on_GLUE_Tasks {'weight': 1}
Fine-tuning_with_DeepSpeed_on_GLUE_Tasks 0
On_08/15/2022_we_have_added_another_BERT 1
Pre-training_Bing_BERT_without_DeepSpeed {'weight': 1}
Pre-training_Bing_BERT_without_DeepSpeed 0
/Downloading_and_pre-processing_instructions_are_coming_soon./ 1
Running_the_Bing_BERT_model {'weight': 1}
Running_the_Bing_BERT_model 1
Enabling_DeepSpeed {'weight': 1}
Enabling_DeepSpeed 0
Training 1
Checkpoints_Saving_&_Loading {'weight': 1}
Checkpoints_Saving_&_Loading 0
Start_Training 1
Reproducing_Fastest_BERT_Training_Results_with_DeepSpeed {'weight': 1}
Reproducing_Fastest_BERT_Training_Results_with_DeepSpeed 0
Custom_Monitoring 1
Note_-_Some_Monitor_backends_don't_support_mixed_sample_values._Be {'weight': 1}
Note_-_Some_Monitor_backends_don't_support_mixed_sample_values._Be 0
[[https_//pytorch.org/][PyTorch]]_must_be_installed_/before/ 1
Install_DeepSpeed_from_source {'weight': 1}
Install_DeepSpeed_from_source 0
PyTorch 1
Example__Tuning_for_Large_Batch_Sizes {'weight': 1}
Example__Tuning_for_Large_Batch_Sizes 0
In_the_case_where_we_use_gradient_accumulation,_backward_on_the 1
Configuration {'weight': 1}
Configuration 0
Run_DCGAN_Model_with_DeepSpeed_Enabled 1
Performance_Comparison {'weight': 1}
Performance_Comparison 0
key_to_the_DeepSpeed_JSON_configuration._A_full 1
Training_a_1.5B_Parameter_GPT-2_model {'weight': 1}
Training_a_1.5B_Parameter_GPT-2_model 0
vs_ZeRO-Offload_*_DeepSpeed_first_included_offloading 1
Allocating_Massive_Megatron-LM_Models {'weight': 1}
Allocating_Massive_Megatron-LM_Models 0
DeepSpeed_version_=0.3.15=_introduced_automatic_external 1
Extracting_weights {'weight': 1}
Extracting_weights 0
gains/*,_and_*/memory_footprint_reduction/*_from_using 1
Training_GPT-2_with_the_Original_Megatron-LM {'weight': 1}
Training_GPT-2_with_the_Original_Megatron-LM 0
Running_Unmodified_Megatron-LM_GPT2_model 1
Enabling_DeepSpeed {'weight': 1}
Loss_Scaling 1
Checkpoint_Saving_&_Loading {'weight': 1}
Checkpoint_Saving_&_Loading 0
Train_scripts 1
DeepSpeed_Evaluation_using_GPT-2 {'weight': 1}
DeepSpeed_Evaluation_using_GPT-2 0
1.3_1-bit_LAMB_Algorithm 0
out!*_1-bit_LAMB_relies_on_an_compression_error_compensation 1
2._BERT_Pre-training_with_1-bit_LAMB {'weight': 1}
2._BERT_Pre-training_with_1-bit_LAMB 0
1._=cycle_min_mom=__minimum_momentum_in_cycle_phase_2. 1
Required_Model_Configuration_Changes {'weight': 1}
Required_Model_Configuration_Changes 0
*PyTorch_model* 1
Batch_Scaling_Example {'weight': 1}
Batch_Scaling_Example 0
This_tutorial_is_updated_on_03/04/2021_to_reflect_the_1-bit_Adam 1
out!*_1)_The_NCCL-based_implementation_requires_PyTorch_>=_1.8 {'weight': 1}
1.3_1-bit_Algorithm 0
out!*_1-bit_Adam_relies_on_an_compression_error_compensation 1
2._BingBertSQuAD_Fine-tuning_with_1-bit_Adam {'weight': 1}
2._BingBertSQuAD_Fine-tuning_with_1-bit_Adam 0
For_details_about_loading_checkpoint,_argument_parsing, 1
2.1_Running_BingBertSQuAD_with_DeepSpeed_and_1-bit_Adam {'weight': 1}
2.1_Running_BingBertSQuAD_with_DeepSpeed_and_1-bit_Adam 0
The_results_are_summarized_in_the_table_below._The_total 1
Speed_and_Scalability_/* {'weight': 1}
Speed_and_Scalability_/* 1
3._BERT_Pre-training_with_1-bit_Adam {'weight': 1}
3._BERT_Pre-training_with_1-bit_Adam 0
based_technologies*__In_simple_terms,_ZeRO_is_a_memory_efficient 1
Parallelism_based_technologies*__3D_Parallelism_refers_to_a {'weight': 1}
Parallelism_based_technologies*__3D_Parallelism_refers_to_a 1
Deciding_which_technology_to_use {'weight': 1}
Deciding_which_technology_to_use 0
based_technologies*__For_most_training_scenarios,_ZeRO_offer 1
Understanding_performance_tradeoff_between_ZeRO_and_3D_Parallelism {'weight': 1}
Understanding_performance_tradeoff_between_ZeRO_and_3D_Parallelism 0
Eigenvalue_Parameters 1
How_to_Use_MoQ_for_GLUE_Training_Tasks {'weight': 1}
How_to_Use_MoQ_for_GLUE_Training_Tasks 0
Example__Megatron-LM 1
Usage_Outside_the_DeepSpeed_Runtime {'weight': 2}
Usage_Outside_the_DeepSpeed_Runtime 0
Example__Bert 1
In_Model_Training_Workflow {'weight': 2}
In_Model_Training_Workflow 0
This_tutorial_was_updated_on_10/29/2021._Changes_include__1)_A 1
1._Configurations_and_tuning_strategy {'weight': 1}
1._Configurations_and_tuning_strategy 0
1.3_fixed_discrete_schedule 1
2._Curriculum_learning_for_Megatron-LM_GPT-2_pre-training {'weight': 1}
2._Curriculum_learning_for_Megatron-LM_GPT-2_pre-training 0
out!*_After_the_update_on_10/29/2021,_now_there_are_two 1
2.1_Training_data_truncation {'weight': 1}
2.1_Training_data_truncation 0
that_CUDA_profiling_incurs_non-negligible_overhead. 1
Profile_memory_consumption {'weight': 1}
Profile_memory_consumption 0
1.2_Challenges_in_applying_error-compensation_to_Adam 1
2._Compressing_communication_with_1-bit_Adam {'weight': 1}
2._Compressing_communication_with_1-bit_Adam 0
2.2_Addressing_system_challenges_for_1-bit_Adam 1
3._Benefits_of_1-bit_Adam_on_communication-constrained_systems {'weight': 1}
3._Benefits_of_1-bit_Adam_on_communication-constrained_systems 0
in_model_size*_as_well_as_*increase_in_number_of_GPUs*._As 1
Experimental_Setup {'weight': 1}
Experimental_Setup 0
Training_setup_using_Azure_VMSS 1
Performance_Evaluation_on_Various_Model_Configurations {'weight': 1}
Performance_Evaluation_on_Various_Model_Configurations 0
TFLOPs/GPU*_on_128_NDm_A100_v4-series_A100_systems_(i.e.,_1024 1
Scaling_the_1T_and_2T_models {'weight': 1}
Scaling_the_1T_and_2T_models 1
How_to_run_training_experiments_on_Azure? {'weight': 1}
How_to_run_training_experiments_on_Azure? 0
Customized_Inference_Kernels_for_Boosted_Compute_Efficiency_of 1
Kernel-Fusion {'weight': 1}
Kernel-Fusion 0
for_Transformers_*_For_transformer-based_models_such_as 1
Inference_with_Tensor-Slicing_*_For_massive_models_such_as {'weight': 1}
Inference_with_Tensor-Slicing_*_For_massive_models_such_as 1
Inference_with_ZeroQuant_*_For_massive_models_with_tens_or {'weight': 1}
Inference_with_ZeroQuant_*_For_massive_models_with_tens_or 0
for_Resource_Constrained_Systems_*_Models_such_as_Bloom 1
Optimizations_*_When_applicable,_MII_automatically_applies {'weight': 1}
Optimizations_*_When_applicable,_MII_automatically_applies 1
MII-Public_and_MII-Azure {'weight': 1}
MII-Public_and_MII-Azure 0
Cost_Sensitive_Scenarios 1
Deployment_Options {'weight': 1}
Deployment_Options 0
MII-Azure_Deployment 1
Concluding_Remarks {'weight': 1}
Concluding_Remarks 0
rematerialization.*_When_fusing_kernels_of_the_different 1
(b)_Invertible_operators_to_save_memory_and_run_large_batches {'weight': 1}
(b)_Invertible_operators_to_save_memory_and_run_large_batches 1
Overlapping_I/O_with_Computation_through_Asynchronous_Prefetching {'weight': 1}
Overlapping_I/O_with_Computation_through_Asynchronous_Prefetching 0
Alternative_approach__Host_some_model_weights_in_GPU_memory 1
Model_Scaling_on_1_GPU {'weight': 1}
Model_Scaling_on_1_GPU 0
Impact_of_generation_output_length 1
Using_ZeRO-Inference {'weight': 1}
Using_ZeRO-Inference 0
and_allow_*large_batch_sizes*._Alternative 1
How_to_use_ZeRO-Inference {'weight': 1}
How_to_use_ZeRO-Inference 1
Conclusion {'weight': 1}
Conclusion 0
*_*gradient_accumulation*_*_number_of 1
[integer] {'weight': 1}
[integer] 8
[integer] {'weight': 11}
Optimizer_Parameters {'weight': 1}
BFLOAT16_training_options {'weight': 1}
[boolean] {'weight': 4}
Optimizer_offloading {'weight': 1}
[string] {'weight': 2}
Flops_Profiler {'weight': 1}
[list_of_integer] {'weight': 1}
Optimizer_Parameters 0
[dictionary] 14
Scheduler_Parameters {'weight': 1}
Communication_options {'weight': 1}
[integer] {'weight': 1}
Curriculum_Learning {'weight': 1}
[dictionary] {'weight': 7}
Elastic_Training_Config_(V0.1_and_V0.2) {'weight': 1}
Compression {'weight': 1}
Weight_Quantization {'weight': 1}
Activation_Quantization {'weight': 1}
Sparse_Pruning {'weight': 1}
Row_Pruning {'weight': 1}
Head_Pruning {'weight': 1}
Channel_Pruning {'weight': 1}
Checkpoint_options {'weight': 1}
Scheduler_Parameters 0
Communication_options 0
[boolean] 13
[boolean] {'weight': 7}
FP16_training_options {'weight': 1}
Automatic_mixed_precision_(AMP)_training_options {'weight': 1}
params/*__[various] {'weight': 1}
[dictionary] {'weight': 1}
*cpu_offload*_is_deprecated_and_will_be_removed_in_future, {'weight': 1}
Asynchronous_I/O {'weight': 1}
Logging {'weight': 1}
Autotuning {'weight': 1}
[string] {'weight': 1}
[integer] {'weight': 1}
Sparse_Attention {'weight': 1}
Data_Type_options {'weight': 1}
[float] 2
[boolean] {'weight': 1}
ZeRO_Optimizations_for_FP16_Training {'weight': 1}
FP16_training_options 0
BFLOAT16_training_options 0
Automatic_mixed_precision_(AMP)_training_options 0
this_mode_cannot_be_combined_with_the_=fp16=_mode_described 1
[dictionary] {'weight': 1}
params/*__[various] 1
Gradient_Clipping {'weight': 1}
Gradient_Clipping 0
ZeRO_Optimizations_for_FP16_Training 0
*cpu_offload*_is_deprecated_and_will_be_removed_in_future, 1
Parameter_offloading {'weight': 1}
Parameter_offloading 0
Optimizer_offloading 0
Asynchronous_I/O 0
Logging 0
Autotuning 0
[string] 3
[string] {'weight': 1}
Activation_Checkpointing {'weight': 1}
[integer] {'weight': 1}
[int] 1
[int] {'weight': 1}
Flops_Profiler 0
Activation_Checkpointing 0
Sparse_Attention 0
Curriculum_Learning 0
[list_of_integer] 2
[list_of_integer] {'weight': 1}
Monitoring_Module_(TensorBoard,_WandB,_CSV) {'weight': 1}
Monitoring_Module_(TensorBoard,_WandB,_CSV) 0
Elastic_Training_Config_(V0.1_and_V0.2) 0
Compression 1
GRPC_Options {'weight': 1}
*Compression*_has_seven_different_components,_including_layer 1
Layer_Reduction {'weight': 1}
Layer_Reduction 0
Weight_Quantization 0
Activation_Quantization 0
Sparse_Pruning 0
Row_Pruning 0
Head_Pruning 0
Channel_Pruning 0
Checkpoint_options 0
Data_Type_options 0
Single-GPU,_Multi-GPU,_and_Multi-Node_Training 1
Pipeline_Parallelism {'weight': 1}
Pipeline_Parallelism 0
Integration_with_Megatron-LM 1
The_Zero_Redundancy_Optimizer {'weight': 1}
The_Zero_Redundancy_Optimizer 0
Contiguous_Memory_Optimization_(CMO) 1
ZeRO-Offload {'weight': 1}
ZeRO-Offload 0
Communication_Overlapping 1
Training_Features {'weight': 1}
Training_Features 0
Automatic_loss_scaling_with_mixed_precision 1
Training_Optimizers {'weight': 1}
Training_Optimizers 0
Memory-Efficient_Training_with_ZeRO_Optimizer 1
Training_Agnostic_Checkpointing {'weight': 1}
Training_Agnostic_Checkpointing 0
1Cycle_Learning_Rate_Schedule 1
Simplified_Data_Loader {'weight': 1}
Simplified_Data_Loader 0
Communication_Logging 1
Sparse_Attention {'weight': 1}
Latest_News 1
Extreme_Speed_and_Scale_for_DL_Training_and_Inference {'weight': 1}
Extreme_Speed_and_Scale_for_DL_Training_and_Inference 0
Windows 4
Features {'weight': 1}
CM_CLI_testing {'weight': 2}
Run_a_container_and_record_experiments_locally {'weight': 2}
DCO {'weight': 1}
Features 2
Dependencies {'weight': 1}
Configure_Contributor_License_Agreement_within_two_minutes {'weight': 1}
Learning_rate_scaling_when_the_effective_batch_size_changes 1
Configuring_ZeRO_configurations {'weight': 1}
Configuring_ZeRO_configurations 1
Autotuning_Output {'weight': 1}
Autotuning_Output 0
Autotuning_Metric 1
"throughput"__training_samples_per_second_(calculated_as {'weight': 1}
"throughput"__training_samples_per_second_(calculated_as 0
Max_Train_Batch_Size 1
Model_Parallelism_Size {'weight': 1}
Model_Parallelism_Size 0
Megatron-DeepSpeed_on_AzureML 1
Workspace_Setup {'weight': 1}
Workspace_Setup 0
End-to-end_Faster_and_Mask_R-CNN_baselines 1
Comparison_with_Detectron_and_mmdetection {'weight': 27}
Comparison_with_Detectron_and_mmdetection 0
PASCAL_VOC_Annotations_in_COCO_Format 1
Creating_Symlinks_for_Cityscapes_ {'weight': 27}
Creating_Symlinks_for_Cityscapes_ 0
Training_and_test_data_separation 1
4._Model {'weight': 34}
Optimizer 2
5._Quality {'weight': 38}
4._Quality {'weight': 18}
If_the_repository_is_not_in_the_PYTHONPATH,_make_sure_to_update 1
Build_and_Deploy_HabanaLabs_MLPerf_Training_2.1_Container {'weight': 2}
Build_and_Deploy_HabanaLabs_MLPerf_Training_2.1_Container 0
Training_Data_Packing 1
Training_Data_for_ResNet50 {'weight': 2}
Training_Data_for_ResNet50 0
TTT_(Time_to_Train)_Calculation_for_BERT 1
Training_ResNet50 {'weight': 2}
Training_ResNet50 0
TTT_(Time_to_Train)_Calculation_for_ResNet50 1
Supported_Configurations {'weight': 2}
Supported_Configurations 0
Convert_NumPy_dataset_to_raw_format. 1
Specify_the_preprocessed_data_paths_in_the_training_script. {'weight': 6}
Specify_the_preprocessed_data_paths_in_the_training_script. 0
the_Bug* 1
Steps/Code_to_Reproduce_the_Bug* {'weight': 1}
Steps/Code_to_Reproduce_the_Bug* 0
Model_checkpoint 1
5._Quality {'weight': 2}
Evaluation_thoroughness 5
6._Additional_notes {'weight': 2}
6._Other {'weight': 2}
MLCommons_Inference {'weight': 2}
5._Steps_to_run_the_model {'weight': 2}
Reference_runs {'weight': 2}
6._Additional_notes 0
NF5**8_(single_node) 1
Alternative_launch_with_nvidia-docker {'weight': 1}
Checkpoint 2
Prepare_enviroment {'weight': 1}
Running_the_model {'weight': 1}
Prepare_enviroment 0
Dataset 1
Prepare_environment {'weight': 1}
Prepare_environment 0
Setup_Conda_Environment_and_Build_Dependencies 1
Run_Benchmark {'weight': 2}
Run_Benchmark 1
Setup_with_Docker {'weight': 6}
Pretrained_backbone 1
Running_the_model {'weight': 1}
NVIDIA_DGX_H100_(single_node) 1
Alternative_launch_with_nvidia-docker {'weight': 1}
Build_the_container_and_push_to_a_docker_registry. 1
Running_training {'weight': 1}
Running_training 0
Alternative_launch_with_docker 1
Steps_to_launch_training_on_multiple_nodes {'weight': 1}
Clean_up 2
Running_the_model {'weight': 6}
Librispeech {'weight': 1}
Decide_benchmark_name*_|_name_|_framework_|_acc._|_AUC_|_dataset 1
Disclaimer {'weight': 2}
Disclaimer 2
Prerequisites_and_Installation {'weight': 7}
2._Directions {'weight': 2}
Prerequisites_and_Installation 0
Calibration_set 1
Running_the_benchmark {'weight': 7}
Running_the_benchmark 0
GPU 1
Examples_for_testing {'weight': 7}
Examples_for_testing 0
Usage 2
License {'weight': 12}
Contact_us {'weight': 6}
License 1
Credits {'weight': 1}
Take_into_account_that_we_only_update_the_published_wheels_after 1
Testing_your_Installation {'weight': 2}
Testing_your_Installation 0
Installation_-_C++ 1
Quick_start__Loadgen_Over_the_Network {'weight': 2}
Quick_start__Loadgen_Over_the_Network 0
The_MLPerf_spec_is_/always/_right._Please_file_a_LoadGen_bug_so_it 1
Q__How_can_I_file_a_bug? {'weight': 5}
Q__How_can_I_file_a_bug? 0
On_GitHub__https_//github.com/mlcommons/inference/issues/new 1
Q__Can_I_make_local_modifications_to_the_LoadGen_for_submission? {'weight': 5}
Q__Can_I_make_local_modifications_to_the_LoadGen_for_submission? 0
No. To_keep_the_playing_field_level,_please_upstream_any_local 1
Q__Where_can_I_find_the_results_of_a_test? {'weight': 5}
Q__Where_can_I_find_the_results_of_a_test? 0
By_default,_the_loadgen_will_output_an_/mlperf_log_summary.txt/ 1
Q__The_reference_implementation_for_</some_model/>_prints_out_results {'weight': 5}
Q__The_reference_implementation_for_</some_model/>_prints_out_results 0
They_are_not._The_LoadGen_results_are_the_ground_truth_for 1
Q__I'm_getting_linker_errors_for_LoadgenVersion_definitions._Where_is {'weight': 5}
Q__I'm_getting_linker_errors_for_LoadgenVersion_definitions._Where_is 0
If_you_have_a_custom_build_setup,_make_sure_you_run_the 1
Q__What_is_this_/version_generator.py/_script? {'weight': 5}
Q__What_is_this_/version_generator.py/_script? 0
The_LoadGen_records_git_stats_(if_available)_and_the_SHA1_of_all 1
Q__How_do_I_view_the_/mlperf_log_trace.json/_file? {'weight': 5}
Q__How_do_I_view_the_/mlperf_log_trace.json/_file? 0
This_file_uses_the_[Trace_Event_Format] 2
Q__Why_is_the_code_littered_with_so_many_lambdas?_My_eyes_hurt. {'weight': 4}
Q__What_is_the_difference_between_the_MultiStream_and_MultiStreamFree {'weight': 1}
Q__Why_is_the_code_littered_with_so_many_lambdas?_My_eyes_hurt. 0
Lambdas_are_a_convenient_and_efficient_way_to_ship_arbitrary_data_+ 1
Q__What_C++_version_does_the_LoadGen_target? {'weight': 5}
Q__What_C++_version_does_the_LoadGen_target? 0
It_currently_targets_and_requires_C++14._It_should_compile_with 1
Q__What_dependencies_does_the_LoadGen_code_have? {'weight': 5}
Q__What_dependencies_does_the_LoadGen_code_have? 0
aware_of_how_to_score_the_accuracy_of_a_model's_outputs._*_*NOT* 1
Submission_Considerations {'weight': 5}
Submission_Considerations 0
Choose_your_TestSettings_carefully! 1
Responsibilities_of_a_LoadGen_User {'weight': 5}
Responsibilities_of_a_LoadGen_User 0
Assess_Accuracy 1
LoadGen_over_the_Network {'weight': 4}
LoadGen_over_the_Network 0
QDL_Additional_Methods 1
Example {'weight': 4}
Example 7
META_is_config_valid() {'weight': 37}
META_search_callback() {'weight': 37}
Reusable_automation_actions {'weight': 2}
Interaction_with_custom_artifact_stores {'weight': 1}
In-Process_Triton_Server_API {'weight': 1}
Extract {'weight': 1}
Model_versioning {'weight': 1}
Setup 7
RNNT {'weight': 2}
3d-unet {'weight': 2}
Resnet50 {'weight': 2}
Retinanet {'weight': 2}
Bert {'weight': 2}
GPT-J {'weight': 2}
GCS_for_simple_task_signaling {'weight': 8}
RNNT 0
One_liner_to_do_an_end-to-end_submission_using_the_reference 2
Please_adjust_the_=target_qps=_value_as_per_your_system_performance {'weight': 10}
Please_modify_the_=--adr.gptj-model.checkpoint=_value_to_the_path {'weight': 2}
Please_adjust_the_=target_qps=_value_as_per_your_system_performance 0
Below_we_give_an_/essential/_sequence_of_steps_that_should_result 1
Table_of_Contents {'weight': 6}
Table_of_Contents 3
Description {'weight': 1}
Getting_Started {'weight': 2}
[[https_//github.com/d3/d3-array/blob/master/README.md][Arrays {'weight': 1}
CK_can_normally_detect_available_Python_interpreters 1
Install_implicit_dependencies_via_pip {'weight': 6}
Install_implicit_dependencies_via_pip 0
These_dependencies_are_/implicit/,_i.e. CK_will_not_try_to_satisfy 1
Install_explicit_dependencies_via_CK_(also_via_=pip=,_but_register {'weight': 13}
Install_explicit_dependencies_via_CK_(also_via_=pip=,_but_register 0
3d-unet 0
Retinanet 0
Validate_accuracy_for_ssd-mobilenet_and_ssd-resnet34_benchmarks 1
Datasets {'weight': 5}
Datasets 1
Running {'weight': 1}
This_part_is_only_necessary_if_the_accuracy_check_in_Part_II 2
each_target_accuracy_metric,_the_delta_between_the_two_accuracy {'weight': 2}
delta_between_the_two_accuracy_metrics_should_be_within_1%_for_the {'weight': 3}
each_target_accuracy_metric,_the_delta_between_the_two_accuracy 0
=generate_final_report.py= 0
Path_to_.csv_output_file_of_the 1
Outputs {'weight': 4}
Outputs 7
=log_parser.py= {'weight': 4}
=submission_checker.py= {'weight': 4}
=truncate_accuracy_log.py= {'weight': 4}
=preprocess_submission.py= {'weight': 2}
Parameters {'weight': 2}
Calibration {'weight': 1}
Load_and_run_a_model_in_Python {'weight': 2}
=log_parser.py= 0
=pack_submission.sh=_(Deprecated) 0
=repository_checks.sh= 0
=submission_checker.py= 0
Flag_to_avoid_checking_if_mandatory 1
Summary {'weight': 2}
=truncate_accuracy_log.py= 0
Path_to_directory_containing_your_submission_*output*__Path_to 1
Outputs {'weight': 4}
=preprocess_submission.py= 0
Running_other_datasets_ 1
3._Dataset {'weight': 5}
3._Dataset 0
Bert 0
GPT-J 0
Please_modify_the_=--adr.gptj-model.checkpoint=_value_to_the_path 0
Expected_time_to_do_benchmark_runs 1
Validity_of_the_submission {'weight': 2}
Validity_of_the_submission 0
Reviewing_other_submissions 1
Changes_from_MLCommons_Inference_3.0 {'weight': 2}
Changes_from_MLCommons_Inference_3.0 0
This_document_is_autogenerated_from_internal_documentation._If 9
Make_Targets {'weight': 31}
HPE-NVIDIA_MLPerf_Quantization {'weight': 1}
What_if_I_have_permission_issues_when_I_attempt_to_write_to_the {'weight': 31}
Before_you_continue {'weight': 29}
MLPerf_Inference_Policies_and_Terminology {'weight': 30}
Heterogeneous_MIG_Workloads_for_Multi-MIG_Systems {'weight': 28}
NVIDIA_MLPerf_Quantization {'weight': 37}
NVIDIA_Submissions {'weight': 3}
MLPerf_Quantization {'weight': 1}
Make_Targets 0
HPE-NVIDIA_MLPerf_Quantization 0
Make_sure_your_performance_tuning_changes_(i.e. any_change 1
Difference_system_configurations_that_use_the_same_GPU_configuration {'weight': 31}
Difference_system_configurations_that_use_the_same_GPU_configuration 0
that_this_flag_is_only_supported_/_allowed_on_the_following 1
you_wish_to_use_both_start_from_device_and_end_on_device,_you_must {'weight': 31}
you_wish_to_use_both_start_from_device_and_end_on_device,_you_must 0
in_order_to_use_start_from_device_or_end_on_device_in_a 1
Using_NUMA_configurations {'weight': 31}
Using_NUMA_configurations 0
Fixing_INVALID_results 0
Tuning_parameters_for_better_performance 0
What_if_I_have_permission_issues_when_I_attempt_to_write_to_the 0
Before_you_continue 0
an_eye_out_for_this_announcement,_as_it_will_also_include_a 1
submission_that_does_not_use_one_of_these_commit_hashes_will_not_be {'weight': 30}
submission_that_does_not_use_one_of_these_commit_hashes_will_not_be 1
Minimal_Query_Count {'weight': 30}
Minimal_Query_Count 0
The_way_audit_tests_function_is_by_placing_an_=audit.conf= 1
Truncating_the_Accuracy_Logs {'weight': 30}
Truncating_the_Accuracy_Logs 0
Make_sure_that_no_files_and_directories_exist_in_the_project 2
The {'weight': 30}
Encrypting_your_project_for_submission {'weight': 1}
The 1
Packaging_your_project_for_submission {'weight': 30}
Packaging_your_project_for_submission 0
MLPerf_Inference_Policies_and_Terminology 0
that_once_the_scratch_space_is_setup_and_all_the_data,_models,_and 3
Download_the_Datasets {'weight': 25}
Download_the_datasets {'weight': 6}
Download_the_dataset_and_the_model {'weight': 1}
Download_the_Datasets 0
that_you_do_not_need_to_download_the_datasets_or_models_for 2
Downloading_the_Model_files {'weight': 25}
Downloading_the_model_files {'weight': 6}
Downloading_the_Model_files 0
proceeding,_double_check_that_you_have_downloaded_both_the 1
Preprocessing_the_datasets_for_inference {'weight': 31}
Preprocessing_the_datasets_for_inference 1
Running_NEUCHIPS_DLRM_benchmark {'weight': 1}
your_system_is_not_listed_above,_you_must_add_your_system_to_our 1
Running_your_first_benchmark {'weight': 30}
Running_your_first_benchmark 0
enter_closed/HPE*._From_now_on,_all_of_the_commands_detailed_in 1
Launching_the_environment {'weight': 1}
Launching_the_environment 0
notes_/* 6
Building_the_binaries {'weight': 1}
Launching_the_environment_on_a_MIG_(Multi-Instance_GPU)_instance {'weight': 8}
Launching_the_environment_on_Jetson_Orin_systems {'weight': 6}
Launching_the_environment_on_Jetson_Orin_AGX/NX {'weight': 14}
Further_reading {'weight': 1}
Adding_a_New_or_Custom_System {'weight': 2}
Building_the_binaries 0
This_command_does_not_need_to_be_run_every_time_you_enter_the 1
Running_the_actual_benchmark {'weight': 31}
Running_the_actual_benchmark 0
you_run_into_issues,_invalid_results,_or_would_like_to_improve_your 0
engines_is_only_required_if* 1
Building_and_running_engines_for_the_"High_Accuracy_Target" {'weight': 31}
Building_and_running_engines_for_the_"High_Accuracy_Target" 0
META_is_config_valid() 0
META_search_callback() 0
Preprocessing_the_dataset_for_use 1
Model {'weight': 57}
Downloading_/_obtaining_the_model 2
Optimizations {'weight': 197}
Dataset {'weight': 70}
Optimizations 0
Embedding_Table_Sorting_and_Splitting 1
Instructions_for_Auditors {'weight': 57}
Instructions_for_Auditors 0
Preprocessing_the_dataset_for_usage 2
Model {'weight': 177}
Optimizations {'weight': 70}
Soft_Dropping 1
Instructions_for_Auditors {'weight': 87}
Goal_of_this_Benchmark 1
Dataset {'weight': 151}
Preprocessing_the_dataset 1
Model {'weight': 140}
Generating_model_binaries_and_running_INT8_calibration 2
Instructions_for_Auditors {'weight': 102}
Instructions_for_Audits {'weight': 49}
Sequence_Splitting 1
Instructions_for_Audits {'weight': 37}
Instructions_for_Audits 0
Model_Source 1
Optimizations {'weight': 23}
Lower_Precision 2
Instructions_for_Audits {'weight': 11}
Calibration {'weight': 2}
Preprocessing_data 1
Model {'weight': 11}
Replace_ReLU6_with_ReLU 1
Instructions_for_Audits {'weight': 12}
Removal_of_Softmax 1
Calibration {'weight': 38}
Calibration 1
Instructions_for_Audits {'weight': 40}
TransposedConvolution_->_Convolution_+_PixelShuffle_Conversion 1
Instructions_for_Auditors {'weight': 83}
Training_(MobileNetV1-SSD)** 1
Quantization_(ResNet50)** {'weight': 1}
Quantization_(ResNet50)** 0
enter_closed/NVIDIA*._From_now_on,_all_of_the_commands_detailed 2
Launching_the_environment {'weight': 20}
Launching_the_environment_on_datacenter/desktop_systems {'weight': 5}
Launching_the_environment_on_a_MIG_(Multi-Instance_GPU)_instance 0
=g292_z43_q16= 2
Performance {'weight': 8}
Power_(full) {'weight': 1}
Performance 4
Benchmark_via_the_"neoclassical"_CK_interface {'weight': 190}
SingleStream_scenario {'weight': 8}
Prepare_your_submission {'weight': 42}
Run_experiments_(via_cmdgen) {'weight': 2}
=g292_z43_q16=_[optional] 1
Power {'weight': 7}
Power 0
=r282_z93_q5= 1
Performance {'weight': 8}
=r282_z93_q5=_[optional] 1
Power {'weight': 8}
precision_fp16 8
=g292_z43_q16= {'weight': 20}
Performance {'weight': 10}
=g292_z43_q16=_[optional] {'weight': 10}
Power {'weight': 10}
=r282_z93_q5= {'weight': 12}
=r282_z93_q8= {'weight': 12}
=r282_z93_q5=_[optional] {'weight': 6}
=r282_z93_q8=_[optional] {'weight': 6}
=r282_z93_q8= 0
=r282_z93_q8=_[optional] 0
Fixed_SOC_Pstate_=_P0 1
DF_Common_Options {'weight': 3}
DF_Common_Options 0
ACPI_SRAT_L3_Cche_As_NUMA_Domain_=_Disabled 1
CPU_Common_Options {'weight': 3}
CPU_Common_Options 0
L2_Up/Down_Prefetcher_=_Auto 1
Management_Firmware_Settings {'weight': 3}
Management_Firmware_Settings 0
Power_(full) 0
Run_the_below_commands_with_=sudo=_or_as_superuser. 1
Generic {'weight': 7}
Generic 0
=g++= 1
=r282_z93_q5=__use_QAIC_settings_(ECC_on) {'weight': 7}
=r282_z93_q5=__use_QAIC_settings_(ECC_on) 0
Please_detect_only_one_Python_interpreter._We_recommend_Python 1
Python_v3.8 {'weight': 2}
Python_v3.8 0
CK_can_normally_detect_compilers_automatically,_but_we_are_playing 1
Install_implicit_dependencies_via_pip {'weight': 7}
These_dependencies_are_/explicit/,_i.e. CK_will_try_to_satisfy 2
Compile_the_Server/Offline_model_for_the_PCIe_server_cards {'weight': 2}
Hint {'weight': 2}
Compile_the_Server/Offline_model_for_the_PCIe_server_cards 0
SingleStream 3
Compile_and_install_the_models_to_the_16_NSP_AEDK {'weight': 5}
Info {'weight': 5}
Compile_and_install_the_models_to_the_20W_AEDK {'weight': 4}
Compile_and_install_the_models_to_the_16_NSP_AEDK 0
Info 0
Please_detect_only_one_Python_interpreter._Python_3.6,_the_default 1
Python_v3.6_(default) {'weight': 5}
Python_v3.6_(default) 0
Hint 2
Select_the_calibration_dataset {'weight': 1}
Detect_a_pregenerated_profile {'weight': 1}
Since_the_preprocessed_=1200x1200=_COCO_dataset_takes_up_21G,_you 2
Calibrate_on_your_own {'weight': 2}
Use_precalibrated_profiles {'weight': 4}
Calibrate_on_your_own 0
For_more_information,_please_see_the 2
Use_precalibrated_profiles {'weight': 2}
Compilation_for_15w_AEDKs_(edge_category) {'weight': 4}
Use_precalibrated_profiles 0
Compile_and_install_the_models_to_the_20W_AEDK 0
Offline 1
SingleStream {'weight': 4}
Since_the_preprocessed_ImageNet_dataset_takes_up_7.1G,_you_may 1
Download_the_MLPerf_TensorFlow_model {'weight': 2}
Download_the_MLPerf_TensorFlow_model 0
The_input_tensor's_shape_gets_updated_("fixed")_from_=?x224x224x3= 1
Obtain_a_profile_using {'weight': 2}
Obtain_a_profile_using 0
1_sample_per_batch_(for_the_Single_Stream_scenario) 1
Calibrate_on_your_own {'weight': 2}
1_sample_per_batch_(for_the_SingleStream_scenario) 2
Compile_the_Server/Offline_model_for_the_PCIe_server_cards {'weight': 2}
Prerequisites {'weight': 1}
Accuracy_benchmark 1
Quantization_and_calibration {'weight': 2}
Quantization_and_calibration 0
Q__What_is_the_difference_between_the_MultiStream_and_MultiStreamFree 0
MultiStream_corresponds_to_the_official_MLPerf_scenario_for 1
Q__Why_is_the_code_littered_with_so_many_lambdas?_My_eyes_hurt. {'weight': 1}
This_excludes_"uber"_packages_which_can_be_used_to_install_all 1
Run_the_TensorFlow_(Python)_Image_Classification_client {'weight': 3}
Run_the_TensorFlow_(Python)_Image_Classification_client 0
When_using_the_batch_count_of_*N*,_the_program_classifies_*N* 2
Benchmark_the_accuracy {'weight': 6}
ResNet {'weight': 6}
Benchmark_the_accuracy 0
For_the_=imagenet-2012-val-min=_dataset,_change 2
Using_Collective_Knowledge {'weight': 6}
ResNet {'weight': 6}
Using_Collective_Knowledge 0
Please_[[file_info@dividiti.com][let_us_know]]_if_you_would_like 1
Install_the_models_for_TFLite {'weight': 3}
Install_the_models_for_TFLite 0
MobileNet_quantized 4
Bonus__other_MobileNets_models {'weight': 3}
Benchmark_the_accuracy {'weight': 6}
Example__OpenCV_preprocessing_(default),_MobileNet_non-quantized {'weight': 3}
Example__universal_OpenCV_preprocessing_(default),_MobileNet {'weight': 3}
Bonus__other_MobileNets_models 2
Compile_the_TFLite_Image_Classification_client {'weight': 3}
Compile_the_TensorFlow_(C++)_Image_Classification_client {'weight': 3}
Compile_the_TFLite_Image_Classification_client 0
OpenCV_preprocessing 2
MobileNet_non-quantized {'weight': 3}
MobileNet_quantized {'weight': 3}
MobileNet_non-quantized 0
The_prediction_from_=tflite=_differs_from_that_from_=tf-cpp=. 1
Benchmark_the_performance {'weight': 3}
Benchmark_the_performance 0
ResNet 0
Example__OpenCV_preprocessing_(default),_MobileNet_non-quantized 0
If_you_would_like_to_get_a_feel_of_CK_workflows,_you_can_skip 1
Install_common_tools_and_libraries {'weight': 6}
Install_common_tools_and_libraries 0
Care_must_be_taken_not_to_mix_Python_3_and_Python_2_packages._If 1
Install_required_Python_3_packages {'weight': 6}
Install_required_Python_3_packages 0
Option_3__User-space_installation_via_CK_(under_=$HOME=_and 1
[Optional]_Install_Android_SDK_and_NDK {'weight': 3}
[Optional]_Install_Android_SDK_and_NDK 0
On_Ubuntu_18.04,_NDK_r13b_gets_installed._On_Ubuntu_16.04, 1
Pull_CK_repositories {'weight': 3}
Pull_CK_repositories 0
Transitive_dependencies_include 2
Install_a_small_dataset_(500_images) {'weight': 3}
Install_the_COCO_2017_validation_dataset_(5,000_images) {'weight': 3}
Install_a_small_dataset_(500_images) 0
ImageNet_dataset_descriptions_are_in 1
Install_the_full_dataset_(50,000_images) {'weight': 3}
Install_the_full_dataset_(50,000_images) 0
If_you_already_have_the_ImageNet_validation_dataset_downloaded_in 1
Preprocess_datasets {'weight': 3}
Preprocess_datasets 0
The_TFLite_weights_are_in_the_=mobilenet_v1_1.0_224*.tflite=_file. 1
Inspecting_recorded_experimental_results {'weight': 3}
Inspecting_recorded_experimental_results 0
Image_cropping 1
Visualizing_experimental_results {'weight': 3}
Visualizing_experimental_results 0
The_ResNet_model_has_a 1
Install_models_for_TensorFlow_(C++) {'weight': 3}
Install_models_for_TensorFlow_(C++) 0
Compile_the_TensorFlow_(C++)_Image_Classification_client 0
TensorFlow_preprocessing 1
MobileNet_non-quantized {'weight': 3}
TensorFlow_preprocessing_(*NOT_APPLICABLE!*) 2
MobileNet_quantized {'weight': 3}
Benchmark_the_performance {'weight': 3}
Example__universal_OpenCV_preprocessing_(default),_MobileNet 0
Install_the_ResNet_model 1
Run_the_ONNX_Image_Classification_client {'weight': 3}
Run_the_ONNX_Image_Classification_client 0
MobileNet,_NCHW 1
Benchmark_the_performance {'weight': 3}
Install_the_quantized_finetuned_model_(courtesy_of 1
Run_the_TensorFlow_(Python)_Object_Detection_client_on_50_images {'weight': 3}
Run_the_TensorFlow_(Python)_Object_Detection_client_on_50_images 0
When_using_the_batch_count_of_*N*,_the_program_runs_object 1
Benchmark_the_accuracy {'weight': 6}
Currently_we_have_no_TFLite_1.13.1_prebuilt_packages._Please 1
Install_the_SSD-MobileNet_models_for_TFLite {'weight': 3}
Install_the_SSD-MobileNet_models_for_TFLite 0
This_TFLite_model_has_been 1
Compile_the_TFLite_Object_Detection_client {'weight': 3}
Compile_the_TFLite_Object_Detection_client 0
We_are_working_on_resolving_the_difference_in_mAP_between_the_TF 2
Benchmark_the_performance {'weight': 3}
Using_Collective_Knowledge {'weight': 3}
Option_3__user-space_installation_via_CK_(under_=$HOME=_and 1
Pull_CK_repositories {'weight': 3}
Install_the_COCO_2017_validation_dataset_(5,000_images) 0
If_you_have_previously_installed_the_COCO_2017_validation_dataset 1
Preprocess_the_COCO_2017_validation_dataset_(first_50_images) {'weight': 3}
Preprocess_the_COCO_2017_validation_dataset_(first_50_images) 0
COCO_2017_validation_dataset 1
Prerequisites_and_Installation {'weight': 1}
delta_between_the_two_accuracy_metrics_should_be_within_1%_for_the 0
Part_III___Compare_performance_of_TEST04-A_with_TEST04-B 1
Help {'weight': 1}
Help 0
SSD_ResNet34_int8 1
ONNXRuntime_PTQ {'weight': 1}
ONNXRuntime_PTQ 0
[[https_//github.com/krai/ck-mlperf/tree/master/program/generate-target-latency][Estimate 4
Accuracy {'weight': 1788}
OpenCL {'weight': 7641}
"All-in-one" {'weight': 7914}
Note_that_unlike_[[#mobilenet_v1][MobileNet-v1]], {'weight': 2532}
Accuracy 9
Known_issues {'weight': 1}
=llvm_-mcpu=cortex-a72_-mfloat-abi=hard= {'weight': 8}
Setup_with_docker_image {'weight': 21}
Get_the_Results {'weight': 7}
CPU {'weight': 2}
MobileNet-v2 {'weight': 1}
MobileNet-v3 {'weight': 1}
EfficientNet {'weight': 1}
Direct_usage {'weight': 2}
OpenCL 6
Performance {'weight': 12735}
Compliance {'weight': 2548}
Accuracy {'weight': 12676}
Benchmark_via_the_"neoclassical"_CK_interface {'weight': 96}
MobileNet-v1 {'weight': 1}
"All-in-one" {'weight': 2532}
Compliance 1
Notes {'weight': 2}
Use_a_uniform_target_latency 1
[[https_//github.com/krai/ck-mlperf/tree/master/program/generate-target-latency][Estimate {'weight': 2547}
Benchmark_via_the_"neoclassical"_CK_interface 0
=model-tflite-mlperf-efficientnet-lite4= 1
[[https_//github.com/arm-software/armnn-mlperf#preprocess-on-an-x86-machine-and-detect-on-an-arm-dev-board][Detect {'weight': 192}
[[https_//github.com/arm-software/armnn-mlperf#preprocess-on-an-x86-machine-and-detect-on-an-arm-dev-board][Detect 2
Benchmark_performance_via_the_"classical"_CK_interface {'weight': 190}
Run_once_(classical_CK_interface) {'weight': 2}
Benchmark_performance_via_the_"classical"_CK_interface 0
AutoSinian 1
Benchmarks {'weight': 1}
Benchmarks 0
Inside_the_Docker_container,_[[file_closed/Alibaba]]_will_be 1
Prerequisites {'weight': 1}
Prerequisites 0
Run_harness_on_engines 1
Notes_on_runtime_and_performance {'weight': 2}
Notes_on_runtime_and_performance 0
Run_Calibration 1
Instructions_for_Auditors {'weight': 1}
Steps_to_do_calibration_for_RNNT 0
Install_Python_and_IPex 1
Download_Model {'weight': 7}
Download_Model 0
2._SW_requirements 2
Steps_to_run_DLRM {'weight': 19}
Run_DLRM {'weight': 1}
Steps_to_run_DLRM 0
Run_command 1
Setup_with_docker {'weight': 31}
Setup_with_docker 0
Setup_with_Docker 0
dataset_ 2
2.Start_a_container {'weight': 3}
2.load_images {'weight': 3}
2.Start_a_container 0
2._into_container 1
3.Run_SSD-Resnet34 {'weight': 3}
3.Run_SSD-Resnet34 0
4._Run_command_for_server_and_offline_mode 1
Setup_with_Docker {'weight': 5}
model_ 1
2.Start_and_log_into_a_container {'weight': 5}
2.Start_and_log_into_a_container 0
(2)_into_container 2
3.Run_DLRM {'weight': 5}
4.Run_Resnet50 {'weight': 3}
3.Run_DLRM 0
Install_Dependencies_for_Resnet50 1
Download_Model {'weight': 3}
2.load_images 0
4.Run_Resnet50 0
Steps_to_run_RNNT 0
Note_on_Server_scenario 1
Setup_with_Docker {'weight': 5}
To_verify_accuracy_of_your_workload,_run_your_command_with 1
Code_Diagram {'weight': 11}
Code_Diagram 0
Known_issues 0
Heterogeneous_MIG_Workloads_for_Multi-MIG_Systems 0
for_short). 1
How_the_HeteroMIG_harness_is_designed {'weight': 29}
How_the_HeteroMIG_harness_is_designed 0
NVIDIA_MLPerf_Quantization 0
refer_to_Intel's_readme_under_/closed/Intel_for_detailed 1
Dell_Submission_Systems {'weight': 1}
Dell_Submission_Systems 1
GPU_Implementations {'weight': 1}
GPU_Implementations 0
refer_to_/closed/NVIDIA_for_detailed_instructions,_including 1
Dell_Submission_Systems {'weight': 2}
Inside_the_Docker_container,_[[file_closed/Fujitsu]]_will_be 2
Before_you_run_commands {'weight': 1}
Prerequisites {'weight': 1}
Before_you_run_commands 0
Run_Compliance_Tests_and_Update_Compliance_Logs 1
Instructions_for_Auditors {'weight': 5}
Triton_Harness 1
NVIDIA_Submissions {'weight': 1}
NVIDIA_Submissions 0
Inside_the_Docker_container,_[[file_closed/NVIDIA]]_will_be 1
Prerequisites {'weight': 3}
Run_Triton_Harness 1
Multi-MIG_Harness {'weight': 1}
Multi-MIG_Harness 0
*(DOCKER)*_Run_the_benchmark_ 5
SSD-Resnet34 {'weight': 1}
Run_the_BERT_benchmark {'weight': 1}
Run_the_DLRM_benchmark {'weight': 1}
Run_the_3D_U-Net_benchmark {'weight': 1}
Limitations_and_Best_Practices_for_Running_MLPerf {'weight': 1}
SSD-Resnet34 0
Run_the_BERT_benchmark 0
Run_the_DLRM_benchmark 0
Run_the_3D_U-Net_benchmark 0
Limitations_and_Best_Practices_for_Running_MLPerf 0
you_add_your_entry_into_config.json*,_you_will_have_to_add_your 1
Different_system_configurations_that_use_the_same_GPU_configuration {'weight': 1}
Different_system_configurations_that_use_the_same_GPU_configuration 1
NUMA_configuration {'weight': 1}
NUMA_configuration 0
MultiStream 3
Fix_INVALID_results {'weight': 1}
Tune_parameters_for_better_performance {'weight': 1}
Other_performance_tips {'weight': 1}
Fix_INVALID_results 0
Tune_parameters_for_better_performance 0
Other_performance_tips 0
permission_issue_when_container_tries_to_write_to_local 1
get_=useradd__user_'root'_already_exists=_when_running {'weight': 1}
get_=useradd__user_'root'_already_exists=_when_running 0
do_I_install_programs_like_valgrind_in_the_container?* 1
get_=nvcc_fatal_____Unsupported_gpu_architecture_'compute_80'=_error {'weight': 1}
get_=nvcc_fatal_____Unsupported_gpu_architecture_'compute_80'=_error 0
sure_you_run_the_below_commands_after_=results/=_is_populated_with 1
Truncate_Accuracy_Logs {'weight': 1}
Truncate_Accuracy_Logs 0
Encrypting_your_project_for_submission 0
The_current_MLPerf_Inference_Results_Chair_is_Guenther 1
Common_issues {'weight': 1}
Common_issues 0
Run_harness 1
Notes_on_runtime_and_performance {'weight': 2}
enter_closed/Inspur*._From_now_on,_all_of_the_commands_detailed 1
Launching_the_environment {'weight': 1}
=llvm_-mcpu=cortex-a72_-mfloat-abi=hard= 0
SingleStream_scenario 0
Prepare_your_submission 1
Visualize_MLPerf_results {'weight': 26}
See_all_installed_packages_and_detected_components 6
Resources {'weight': 8}
Reproducibility_report__design_space_exploration {'weight': 4}
Reproducibility_report__benchmarking {'weight': 16}
Install_TFLite_model_(MobileNet_v2__Large__Minimalistic__224__1.0_ {'weight': 2}
Install_PyTorch_model_(Resnet50__int8__quantized) {'weight': 2}
Install_CK_workflow_Python_dependencies {'weight': 2}
Resources 0
WIP__DEFINE_PROD_AWS_ACCOUNT_OWNER_ID_=_{prod_aws_account_owner_id} 1
Task_Owner_Setup {'weight': 1}
Task_Owner_Setup 0
Filling_in_the_rest_of_the_config 1
Filling_in_=eval_config= {'weight': 1}
Filling_in_=eval_config= 0
2_*_Install_mlsphere_utility_and_download_the_image. 1
Run {'weight': 1}
Run 1
Open_discussions_and_developments {'weight': 2}
[NOTICE]_POSSIBLY_OUTDATED 1
Web_Interface {'weight': 1}
Web_Interface 0
Running_the_API_server 1
Frontend {'weight': 1}
Frontend 0
Concrete_example_that_illustrates_the_different_components_ 1
Table_of_Contents {'weight': 1}
to_inform_their_work_or_research._The_way_a_given_task_is 1
Codebase {'weight': 1}
Codebase 0
If_any_linter_doesn't_pass,_your_pull_request_is_not_going_to_be 1
Migrations {'weight': 1}
Migrations 0
docker* 1
virtualenv* {'weight': 1}
virtualenv* 0
your_model* 1
Run_select_task {'weight': 2}
Run_select_task 0
The_cost_of_this_service_depends_on_the_instance_you_choose_and 1
Creating_EC2_instance {'weight': 1}
Creating_EC2_instance 0
Open_EC2_ports_to_receive_requests 1
Setting_up_AWS_environment {'weight': 1}
Setting_up_AWS_environment 0
This_service_is_free. 3
Creating_user {'weight': 1}
Creating_S3_bucket {'weight': 1}
Creating_ECS_cluster {'weight': 1}
Creating_user 0
Creating_S3_bucket 0
The_cost_for_this_service_depends_on_the_size_of_the_files_that 1
Creating_ECS_execution_role {'weight': 1}
Creating_ECS_execution_role 0
Creating_ECS_cluster 0
Create_SQS_queue 1
Starting_the_app {'weight': 1}
Starting_the_app 0
Foldes_contents 1
Resources_folder {'weight': 1}
Resources_folder 0
Checking_output_format 1
Requirements {'weight': 1}
Run_Fast_api_swagger 1
Test_your_endpoints {'weight': 1}
Test_your_endpoints 0
Removed 34
[[https_//docs.nvidia.com/deeplearning/tensorrt/release-notes/#rel-8-5-1][8.5.1 {'weight': 1}
[[https_//github.com/NVIDIA/TensorRT/releases/tag/22.07][22.07]]_- {'weight': 1}
[[https_//docs.nvidia.com/deeplearning/tensorrt/release-notes/#rel-8-4-1][8.4.1 {'weight': 1}
[[https_//github.com/NVIDIA/TensorRT/releases/tag/22.05][22.05]]_- {'weight': 1}
[[https_//github.com/NVIDIA/TensorRT/releases/tag/22.04][22.04]]_- {'weight': 1}
[[https_//github.com/NVIDIA/TensorRT/releases/tag/22.03][22.03]]_- {'weight': 1}
[[https_//docs.nvidia.com/deeplearning/tensorrt/release-notes/#rel-8-2-1][8.2.1 {'weight': 1}
[[https_//github.com/NVIDIA/TensorRT/releases/tag/21.10][21.10]]_- {'weight': 1}
[[https_//github.com/NVIDIA/TensorRT/releases/tag/21.09][21.09]]_- {'weight': 1}
[[https_//github.com/NVIDIA/TensorRT/releases/tag/21.08][21.08]]_- {'weight': 1}
[[https_//github.com/NVIDIA/TensorRT/releases/tag/21.07][21.07]]_- {'weight': 1}
[[https_//github.com/NVIDIA/TensorRT/releases/tag/21.05][21.05]]_- {'weight': 1}
[[https_//github.com/NVIDIA/TensorRT/releases/tag/21.03][21.03]]_- {'weight': 1}
[[https_//github.com/NVIDIA/TensorRT/releases/tag/21.02][21.02]]_- {'weight': 1}
[[https_//github.com/NVIDIA/TensorRT/releases/tag/20.12][20.12]]_- {'weight': 1}
[[https_//github.com/NVIDIA/TensorRT/releases/tag/20.11][20.11]]_- {'weight': 1}
[[https_//github.com/NVIDIA/TensorRT/releases/tag/20.10][20.10]]_- {'weight': 1}
[[https_//docs.nvidia.com/deeplearning/tensorrt/release-notes/tensorrt-7.html#rel_7-2-1][7.2.1]]_- {'weight': 1}
21.02_Container_Release_-_2021-01-18 {'weight': 1}
20.12_Container_Release_-_2020-12-17 {'weight': 1}
v0.41.1_(2022-08-25) {'weight': 1}
v0.40.4_(2022-08-17) {'weight': 1}
v0.39.0_(2022-07-01) {'weight': 1}
v0.37.3_(2022-05-04) {'weight': 1}
v0.34.2_(2021-11-29) {'weight': 1}
v0.33.2_(2021-10-21) {'weight': 1}
v0.31.1_(2021-07-16) {'weight': 1}
v0.27.0_(2021-04-06) {'weight': 1}
v0.25.1_(2021-03-15) {'weight': 1}
v0.23.1_(2021-02-05) {'weight': 1}
v0.13.4_(2020-03-25) {'weight': 1}
v0.7.1_(2019-08-29) {'weight': 1}
v0.3.0_(2021-02-12) {'weight': 1}
v0.2.2_(2020-06-17) {'weight': 1}
[[https_//docs.nvidia.com/deeplearning/tensorrt/release-notes/#rel-8-5-1][8.5.1 0
[[https_//github.com/NVIDIA/TensorRT/releases/tag/22.07][22.07]]_- 0
[[https_//docs.nvidia.com/deeplearning/tensorrt/release-notes/#rel-8-4-1][8.4.1 0
[[https_//github.com/NVIDIA/TensorRT/releases/tag/22.05][22.05]]_- 0
[[https_//github.com/NVIDIA/TensorRT/releases/tag/22.04][22.04]]_- 0
[[https_//github.com/NVIDIA/TensorRT/releases/tag/22.03][22.03]]_- 0
Changed 50
[[https_//github.com/NVIDIA/TensorRT/releases/tag/22.02][22.02]]_- {'weight': 1}
[[https_//github.com/NVIDIA/TensorRT/releases/tag/21.04][21.04]]_- {'weight': 1}
TensorRT_8.5_GA_Release_-_2022-11-2 {'weight': 1}
Removed {'weight': 1}
v0.47.0_(2023-03-28) {'weight': 1}
v0.46.0_(2023-02-10) {'weight': 1}
v0.45.2_(2023-01-25) {'weight': 1}
v0.45.1_(2023-01-19) {'weight': 1}
v0.40.2_(2022-08-12) {'weight': 1}
v0.40.0_(2022-07-29) {'weight': 1}
v0.37.2_(2022-04-20) {'weight': 1}
v0.37.1_(2022-04-18) {'weight': 1}
v0.36.4_(2022-04-12) {'weight': 1}
v0.36.2_(2022-03-31) {'weight': 1}
v0.35.0_(2022-01-06) {'weight': 1}
v0.33.0_(2021-09-16) {'weight': 1}
v0.31.0_(2021-07-02) {'weight': 1}
v0.29.0_(2021-04-28) {'weight': 1}
v0.28.3_(2021-04-22) {'weight': 1}
v0.23.3_(2021-02-13) {'weight': 1}
v0.23.2_(2021-02-11) {'weight': 1}
v0.20.6_(2020-09-18) {'weight': 1}
v0.14.1_(2020-04-17) {'weight': 1}
v0.14.0_(2020-04-09) {'weight': 1}
v0.13.3_(2020-03-20) {'weight': 1}
v0.12.0_(2020-03-06) {'weight': 1}
v0.11.2_(2020-02-11) {'weight': 1}
v0.10.3_(2019-11-18) {'weight': 1}
v0.10.1_(2019-10-31) {'weight': 1}
v0.9.8_(2019-10-24) {'weight': 1}
v0.9.6_(2019-10-15) {'weight': 1}
v0.9.5_(2019-10-9) {'weight': 1}
v0.9.3_(2019-10-1) {'weight': 1}
v0.9.1_(2019-10-1) {'weight': 1}
v0.9.0_(2019-09-30) {'weight': 1}
v0.8.1_(2019-09-26) {'weight': 1}
v0.8.0_(2019-09-18) {'weight': 1}
v0.6.0_(2019-07-17) {'weight': 1}
v0.3.21_(2022-08-19) {'weight': 1}
v0.3.8_(2021-04-15) {'weight': 1}
v0.3.1_(2021-02-12) {'weight': 1}
v0.2.8_(2020-10-08) {'weight': 1}
v0.2.6_(2020-09-25) {'weight': 1}
v0.2.5_(2020-09-21) {'weight': 1}
v0.1.3_(2020-02-26) {'weight': 1}
v0.1.0_(2020-02-11) {'weight': 1}
v0.0.7_(2022-08-10) {'weight': 1}
v0.0.5_(2020-07-21) {'weight': 1}
v0.0.4_(2020-07-18) {'weight': 1}
v0.0.2_(2020-07-05) {'weight': 1}
[[https_//github.com/NVIDIA/TensorRT/releases/tag/22.02][22.02]]_- 0
[[https_//docs.nvidia.com/deeplearning/tensorrt/release-notes/#rel-8-2-1][8.2.1 0
[[https_//github.com/NVIDIA/TensorRT/releases/tag/21.10][21.10]]_- 0
[[https_//github.com/NVIDIA/TensorRT/releases/tag/21.09][21.09]]_- 0
[[https_//github.com/NVIDIA/TensorRT/releases/tag/21.08][21.08]]_- 0
[[https_//github.com/NVIDIA/TensorRT/releases/tag/21.07][21.07]]_- 0
Notes 1
[[https_//github.com/NVIDIA/TensorRT/releases/tag/21.06][21.06]]_- {'weight': 1}
[[https_//github.com/NVIDIA/TensorRT/releases/tag/21.06][21.06]]_- 0
[[https_//github.com/NVIDIA/TensorRT/releases/tag/21.05][21.05]]_- 0
[[https_//github.com/NVIDIA/TensorRT/releases/tag/21.04][21.04]]_- 0
[[https_//github.com/NVIDIA/TensorRT/releases/tag/21.03][21.03]]_- 0
[[https_//github.com/NVIDIA/TensorRT/releases/tag/21.02][21.02]]_- 0
[[https_//github.com/NVIDIA/TensorRT/releases/tag/20.12][20.12]]_- 0
[[https_//github.com/NVIDIA/TensorRT/releases/tag/20.11][20.11]]_- 0
[[https_//github.com/NVIDIA/TensorRT/releases/tag/20.10][20.10]]_- 0
[[https_//docs.nvidia.com/deeplearning/tensorrt/release-notes/tensorrt-7.html#rel_7-2-1][7.2.1]]_- 0
Version*_ 2
GPU*_ {'weight': 1}
Relevant_Files {'weight': 1}
GPU*_ 0
Driver_Version*_ 1
Version*_ {'weight': 1}
Relevant_Files 0
link*_ 1
Steps_To_Reproduce {'weight': 1}
Steps_To_Reproduce 0
or_scripts*_ 1
you_tried_[[https_//developer.nvidia.com/tensorrt][the_latest {'weight': 1}
you_tried_[[https_//developer.nvidia.com/tensorrt][the_latest 1
this_model_run_on_other_frameworks?*_For_example_run_ONNX_model {'weight': 1}
this_model_run_on_other_frameworks?*_For_example_run_ONNX_model 0
Version_Info 1
Setup {'weight': 1}
Quick_Start_Guide 0
Since_the_datasets_and_checkpoints_are_stored_in_the_directory 1
(Optional)_Trying_a_different_configuration {'weight': 1}
(Optional)_Trying_a_different_configuration 1
Advanced {'weight': 1}
Advanced 0
TensorRT_inference_process 1
Accuracy {'weight': 1}
the_TensorRT_engine*_ 1
a_question*_ {'weight': 1}
a_question*_ 0
F1_score*_ 1
Performance {'weight': 1}
The_time_measurements_do_not_include_the_time_required_to_copy 1
Results {'weight': 1}
Results 1
 {'weight': 2}
Megatron_Large_with_Sparsity 1
Inference_performance__NVIDIA_A30 {'weight': 1}
Inference_performance__NVIDIA_A30 0
Software_Versions 1
Quick_Start_Guide {'weight': 1}
TensorRT_inference_benchmark 1
Results {'weight': 1}
Types_of_changes 1
[1.3.4]_-_2023-02-02 {'weight': 1}
[1.3.4]_-_2023-02-02 0
note_that_due_to_end-of-life,_Python_<=_3.6_is_no_longer 1
File_Structure {'weight': 1}
File_Structure 0
Ubuntu_20.04_on_x86-64_with_cuda-11.6.2_(default)* 1
Step_1__PyTorch_model_to_ONNX_model {'weight': 1}
Step_1__PyTorch_model_to_ONNX_model 0
Install_required_packages 1
Running_demoDiffusion {'weight': 1}
Running_demoDiffusion 0
=getPluginCreator()_could_not_find_Plugin_<operator_name>_version_1= 1
Custom_Layer_Support {'weight': 1}
Custom_Layer_Support 0
TensorRT_8.5_GA_Release_-_2022-11-2 0
Deprecated 1
TensorRT_8.4_GA_Release_-_2022-6-6 {'weight': 1}
TensorRT_8.4_GA_Release_-_2022-6-6 0
Fixes 4
TensorRT_8.2_GA_Release_-_2021-11-23 {'weight': 1}
TensorRT_8.2_EA_Release_-_2021-10-04 {'weight': 1}
21.03_Container_Release_-_2021-03-09 {'weight': 1}
TensorRT_7.2.1_Release_-_2020-10-20 {'weight': 1}
TensorRT_8.2_GA_Release_-_2021-11-23 0
TensorRT_8.2_EA_Release_-_2021-10-04 0
Updated 2
TensorRT_8.0_Release_-_2021-07-02 {'weight': 1}
21.05_Container_Release_-_2021-05-17 {'weight': 1}
TensorRT_8.0_Release_-_2021-07-02 0
21.05_Container_Release_-_2021-05-17 0
21.03_Container_Release_-_2021-03-09 0
21.02_Container_Release_-_2021-01-18 0
20.12_Container_Release_-_2020-12-17 0
TensorRT_7.2.1_Release_-_2020-10-20 0
Version*__*ONNX-TensorRT_Version_/_Branch*__*GPU_Type*_ 1
Driver_Version*__*CUDA_Version*__*CUDNN_Version*__*Operating {'weight': 1}
Driver_Version*__*CUDA_Version*__*CUDNN_Version*__*Operating 0
or_Container_(if_container_which_image_+_tag)*_ 1
Relevant_Files {'weight': 1}
Full_Dimensions_+_Dynamic_Shapes 1
 {'weight': 1}
Supported_Operators 1
Installation {'weight': 1}
InstanceNormalizaiton_Performance 1
Executable_Usage {'weight': 1}
Executable_Usage 0
Python_Modules 1
ONNX-TensorRT_Python_Backend_Usage {'weight': 1}
ONNX-TensorRT_Python_Backend_Usage 0
Tests 1
Pre-trained_Models {'weight': 1}
Pre-trained_Models 0
Add_PyConfig.h 1
Build_Python_bindings {'weight': 1}
Build_Python_bindings 0
GA_build*_* 1
Packages*_*_[[https_//developer.nvidia.com/cuda-toolkit][CUDA]] {'weight': 1}
Packages*_*_[[https_//developer.nvidia.com/cuda-toolkit][CUDA]] 1
Recommended_versions__*_cuda-12.2.0_+_cuDNN-8.8_*_cuda-11.8.0_+ {'weight': 1}
Recommended_versions__*_cuda-12.2.0_+_cuDNN-8.8_*_cuda-11.8.0_+ 0
Packages*_*_Containerized_build_* 1
Downloading_TensorRT_Build {'weight': 1}
Downloading_TensorRT_Build 0
Building_TensorRT-OSS 1
References {'weight': 1}
Common_Pitfalls 1
Appendix {'weight': 1}
Appendix 0
Terminology 2
NVIDIA_Copyright {'weight': 1}
Pretraining_on_the_source_dataset {'weight': 1}
NVIDIA_Copyright 0
Yapf 1
Test {'weight': 1}
Test 0
Quantization_mode 1
Misc {'weight': 1}
Misc 0
NGC_Container 1
Resources {'weight': 1}
A_Possible_Solution 1
Running_The_Example {'weight': 1}
Running_The_Example 0
/This_example_requires_TensorRT_8.4_or_later./ 1
Using_The_=--layer-precisions=_Option {'weight': 1}
Using_The_=--layer-precisions=_Option 0
Run_the_network_script_but_allow_TensorRT_to_ignore 1
See_Also {'weight': 1}
See_Also 0
Comparing_Different_Models 1
Further_Reading {'weight': 1}
Further_Reading 0
TIP__Generating_Script_Templates_Automatically 1
Running_The_Example {'weight': 1}
Comparing_Per-Layer_Outputs_Between_ONNX-Runtime_And_TensorRT 1
Further_Reading {'weight': 1}
v0.47.0_(2023-03-28) 0
Fixed 92
v0.46.2_(2023-02-28) {'weight': 1}
v0.46.1_(2023-02-27) {'weight': 1}
v0.45.3_(2023-01-25) {'weight': 1}
Removed {'weight': 1}
v0.44.1_(2022-12-06) {'weight': 1}
v0.44.0_(2022-11-30) {'weight': 1}
v0.43.1_(2022-10-12) {'weight': 1}
v0.43.0_(2022-10-06) {'weight': 1}
0.42.2_(2022-09-22) {'weight': 1}
v0.42.1_(2022-09-07) {'weight': 1}
v0.42.0_(2022-09-01) {'weight': 1}
v0.41.0_(2022-08-24) {'weight': 1}
v0.40.3_(2022-08-17) {'weight': 1}
v0.40.1_(2022-08-08) {'weight': 1}
v0.38.0_(2022-05-24) {'weight': 1}
v0.36.3_(2022-04-07) {'weight': 1}
v0.36.1_(2022-03-25) {'weight': 1}
v0.36.0_(2022-02-24) {'weight': 1}
v0.35.2_(2022-02-03) {'weight': 1}
v0.35.1_(2022-01-14) {'weight': 1}
v0.33.1_(2021-10-08) {'weight': 1}
v0.32.0_(2021-08-10) {'weight': 1}
v0.30.3_(2021-06-25) {'weight': 1}
v0.30.2_(2021-06-15) {'weight': 1}
v0.30.1_(2021-06-07) {'weight': 1}
v0.30.0_(2021-05-26) {'weight': 1}
v0.29.2_(2021-04-30) {'weight': 1}
v0.28.7_(2021-04-26) {'weight': 1}
v0.28.6_(2021-04-23) {'weight': 1}
v0.28.5_(2021-04-23) {'weight': 1}
v0.28.2_(2021-04-22) {'weight': 1}
v0.28.1_(2021-04-22) {'weight': 1}
v0.28.0_(2021-04-20) {'weight': 1}
v0.26.1_(2021-04-01) {'weight': 1}
v0.26.0_(2021-03-30) {'weight': 1}
v0.25.0_(2021-03-01) {'weight': 1}
v0.24.2_(2021-02-25) {'weight': 1}
v0.24.1_(2021-02-22) {'weight': 1}
v0.24.0_(2021-02-19) {'weight': 1}
v0.23.4_(2021-02-15) {'weight': 1}
v0.23.0_(2021-02-02) {'weight': 1}
v0.22.0_(2021-01-20) {'weight': 1}
v0.21.1_(2021-01-12) {'weight': 1}
v0.20.13_(2020-10-08) {'weight': 1}
v0.20.12_(2020-10-01) {'weight': 1}
v0.20.10_(2020-09-23) {'weight': 1}
v0.20.9_(2020-09-22) {'weight': 1}
v0.20.8_(2020-09-22) {'weight': 1}
v0.20.7_(2020-09-22) {'weight': 1}
v0.20.4_(2020-09-14) {'weight': 1}
v0.20.3_(2020-09-11) {'weight': 1}
v0.20.2_(2020-09-11) {'weight': 1}
v0.20.1_(2020-09-09) {'weight': 1}
v0.20.0_(2020-09-08) {'weight': 1}
v0.17.0_(2020-07-20) {'weight': 1}
v0.16.0_(2020-06-11) {'weight': 1}
v0.15.0_(2020-05-05) {'weight': 1}
v0.13.1_(2020-03-17) {'weight': 1}
v0.13.0_(2020-03-17) {'weight': 1}
v0.11.3_(2020-02-25) {'weight': 1}
v0.11.0_(2020-01-28) {'weight': 1}
v0.10.6_(2019-12-11) {'weight': 1}
v0.10.5_(2019-12-9) {'weight': 1}
v0.10.4_(2019-12-4) {'weight': 1}
v0.10.2_(2019-11-11) {'weight': 1}
v0.9.7_(2019-10-18) {'weight': 1}
v0.9.4_(2019-10-7) {'weight': 1}
v0.7.0_(2019-07-30) {'weight': 1}
v0.3.25_(2022-10-14) {'weight': 1}
v0.3.24_(2022-08-31) {'weight': 1}
v0.3.23_(2022-08-24) {'weight': 1}
v0.3.22_(2022-08-22) {'weight': 1}
v0.3.19_(2022-04-13) {'weight': 1}
v0.3.17_(2022-03-18) {'weight': 1}
v0.3.15_(2022-01-18) {'weight': 1}
v0.3.14_(2021-10-14) {'weight': 1}
v0.3.13_(2021-09-21) {'weight': 1}
v0.3.10_(2021-05-20) {'weight': 1}
v0.3.7_(2021-03-31) {'weight': 1}
v0.3.6_(2021-03-27) {'weight': 1}
v0.3.5_(2021-03-24) {'weight': 1}
v0.3.4_(2021-03-10) {'weight': 1}
v0.3.3_(2021-03-04) {'weight': 1}
v0.3.2_(2021-02-13) {'weight': 1}
v0.2.9_(2021-02-01) {'weight': 1}
v0.2.7_(2020-09-29) {'weight': 1}
v0.2.4_(2020-09-14) {'weight': 1}
v0.2.3_(2020-06-17) {'weight': 1}
v0.2.1_(2020-06-10) {'weight': 1}
v0.1.2_(2020-02-19) {'weight': 1}
v0.0.6_(2020-07-21) {'weight': 1}
v0.0.1_(2022-06-23) {'weight': 1}
v0.46.2_(2023-02-28) 0
v0.46.1_(2023-02-27) 0
v0.46.0_(2023-02-10) 0
v0.45.3_(2023-01-25) 0
v0.45.2_(2023-01-25) 0
v0.45.1_(2023-01-19) 0
Added 24
v0.45.0_(2023-01-12) {'weight': 1}
v0.38.1_(2022-06-22) {'weight': 1}
v0.37.0_(2022-04-18) {'weight': 1}
v0.34.1_(2021-11-24) {'weight': 1}
v0.34.0_(2021-11-22) {'weight': 1}
v0.29.1_(2021-04-28) {'weight': 1}
v0.28.4_(2021-04-23) {'weight': 1}
v0.21.0_(2020-11-30) {'weight': 1}
v0.20.11_(2020-09-25) {'weight': 1}
v0.20.5_(2020-09-16) {'weight': 1}
v0.13.2_(2020-03-20) {'weight': 1}
v0.11.1_(2020-02-11) {'weight': 1}
v0.10.0_(2019-10-28) {'weight': 1}
v0.9.2_(2019-10-1) {'weight': 1}
Changed {'weight': 1}
v0.3.20_(2022-07-12) {'weight': 1}
v0.3.18_(2022-03-31) {'weight': 1}
v0.3.16_(2022-02-23) {'weight': 1}
v0.3.12_(2021-08-24) {'weight': 1}
v0.3.11_(2021-07-14) {'weight': 1}
v0.3.9_(2021-04-20) {'weight': 1}
v0.2.0_(2020-04-15) {'weight': 1}
v0.1.1_(2020-02-11) {'weight': 1}
v0.0.3_(2020-07-15) {'weight': 1}
v0.45.0_(2023-01-12) 0
v0.44.1_(2022-12-06) 0
v0.44.0_(2022-11-30) 0
v0.43.1_(2022-10-12) 0
v0.43.0_(2022-10-06) 0
0.42.2_(2022-09-22) 0
v0.42.1_(2022-09-07) 0
v0.42.0_(2022-09-01) 0
v0.41.1_(2022-08-25) 0
v0.41.0_(2022-08-24) 0
v0.40.4_(2022-08-17) 0
v0.40.3_(2022-08-17) 0
v0.40.2_(2022-08-12) 0
v0.40.1_(2022-08-08) 0
v0.40.0_(2022-07-29) 0
v0.39.0_(2022-07-01) 0
v0.38.1_(2022-06-22) 0
v0.38.0_(2022-05-24) 0
v0.37.3_(2022-05-04) 0
v0.37.2_(2022-04-20) 0
v0.37.1_(2022-04-18) 0
v0.37.0_(2022-04-18) 0
v0.36.4_(2022-04-12) 0
v0.36.3_(2022-04-07) 0
v0.36.2_(2022-03-31) 0
v0.36.1_(2022-03-25) 0
v0.36.0_(2022-02-24) 0
v0.35.2_(2022-02-03) 0
v0.35.1_(2022-01-14) 0
v0.35.0_(2022-01-06) 0
v0.34.2_(2021-11-29) 0
v0.34.1_(2021-11-24) 0
v0.34.0_(2021-11-22) 0
v0.33.2_(2021-10-21) 0
v0.33.1_(2021-10-08) 0
v0.33.0_(2021-09-16) 0
v0.32.0_(2021-08-10) 0
v0.31.1_(2021-07-16) 0
v0.31.0_(2021-07-02) 0
v0.30.3_(2021-06-25) 0
v0.30.2_(2021-06-15) 0
v0.30.1_(2021-06-07) 0
v0.30.0_(2021-05-26) 0
v0.29.2_(2021-04-30) 0
v0.29.1_(2021-04-28) 0
v0.29.0_(2021-04-28) 0
v0.28.7_(2021-04-26) 0
v0.28.6_(2021-04-23) 0
v0.28.5_(2021-04-23) 0
v0.28.4_(2021-04-23) 0
v0.28.3_(2021-04-22) 0
v0.28.2_(2021-04-22) 0
v0.28.1_(2021-04-22) 0
v0.28.0_(2021-04-20) 0
v0.27.0_(2021-04-06) 0
v0.26.1_(2021-04-01) 0
v0.26.0_(2021-03-30) 0
v0.25.1_(2021-03-15) 0
v0.25.0_(2021-03-01) 0
v0.24.2_(2021-02-25) 0
v0.24.1_(2021-02-22) 0
v0.24.0_(2021-02-19) 0
v0.23.4_(2021-02-15) 0
v0.23.3_(2021-02-13) 0
v0.23.2_(2021-02-11) 0
v0.23.1_(2021-02-05) 0
v0.23.0_(2021-02-02) 0
v0.22.0_(2021-01-20) 0
v0.21.1_(2021-01-12) 0
v0.21.0_(2020-11-30) 0
v0.20.13_(2020-10-08) 0
v0.20.12_(2020-10-01) 0
v0.20.11_(2020-09-25) 0
v0.20.10_(2020-09-23) 0
v0.20.9_(2020-09-22) 0
v0.20.8_(2020-09-22) 0
v0.20.7_(2020-09-22) 0
v0.20.6_(2020-09-18) 0
v0.20.5_(2020-09-16) 0
v0.20.4_(2020-09-14) 0
v0.20.3_(2020-09-11) 0
v0.20.2_(2020-09-11) 0
v0.20.1_(2020-09-09) 0
v0.20.0_(2020-09-08) 0
v0.17.0_(2020-07-20) 0
v0.16.0_(2020-06-11) 0
v0.15.0_(2020-05-05) 0
v0.14.1_(2020-04-17) 0
v0.14.0_(2020-04-09) 0
v0.13.4_(2020-03-25) 0
v0.13.3_(2020-03-20) 0
v0.13.2_(2020-03-20) 0
v0.13.1_(2020-03-17) 0
v0.13.0_(2020-03-17) 0
v0.12.0_(2020-03-06) 0
v0.11.3_(2020-02-25) 0
v0.11.2_(2020-02-11) 0
v0.11.1_(2020-02-11) 0
v0.11.0_(2020-01-28) 0
v0.10.6_(2019-12-11) 0
v0.10.5_(2019-12-9) 0
v0.10.4_(2019-12-4) 0
v0.10.3_(2019-11-18) 0
v0.10.2_(2019-11-11) 0
v0.10.1_(2019-10-31) 0
v0.10.0_(2019-10-28) 0
v0.9.8_(2019-10-24) 0
v0.9.7_(2019-10-18) 0
v0.9.6_(2019-10-15) 0
v0.9.5_(2019-10-9) 0
v0.9.4_(2019-10-7) 0
v0.9.3_(2019-10-1) 0
v0.9.2_(2019-10-1) 0
v0.9.1_(2019-10-1) 0
v0.9.0_(2019-09-30) 0
v0.8.1_(2019-09-26) 0
v0.8.0_(2019-09-18) 0
v0.7.1_(2019-08-29) 0
v0.7.0_(2019-07-30) 0
v0.6.0_(2019-07-17) 0
Adding_Tests 1
Design_Principles {'weight': 1}
Design_Principles 0
Generating_Golden_Values 1
Tips_And_Tricks {'weight': 1}
Tips_And_Tricks 0
Reduction_Modes 1
Further_Reading {'weight': 1}
Sanity-checking_for_FP16_limitations 1
Debugging_accuracy_failures {'weight': 1}
Debugging_accuracy_failures 0
*Polygraphy_supports_only_Python_3.6_and_later.*_*Before 1
Installing_Prebuilt_Wheels {'weight': 1}
Installing_Prebuilt_Wheels 0
/On_Linux,_the_command-line_toolkit_is_usually_installed_to 1
Building_From_Source {'weight': 1}
Building_From_Source 0
Building_Manually 2
Installing_Dependencies {'weight': 1}
Examples {'weight': 1}
Installing_Dependencies 0
/By_default,_dependencies_will_be_installed_using_the_current 1
Installing_Manually {'weight': 1}
Installing_Manually 1
Command-line_Toolkit {'weight': 1}
Command-line_Toolkit 0
Python_API 1
Examples {'weight': 1}
Examples 184
Raw_Binary_Request {'weight': 1}
Unload {'weight': 1}
Reference {'weight': 2}
Determinism_when_scanning {'weight': 2}
*ai.onnx.ml.Binarizer* {'weight': 1}
*ai.onnx.ml.CastMap* {'weight': 1}
*ai.onnx.ml.LinearClassifier* {'weight': 1}
*Acosh* {'weight': 1}
*Add* {'weight': 1}
*AffineGrid* {'weight': 1}
*And* {'weight': 1}
*ArgMax* {'weight': 1}
*ArgMin* {'weight': 1}
*Asin* {'weight': 1}
*Asinh* {'weight': 1}
*Atan* {'weight': 1}
*Atanh* {'weight': 1}
*AveragePool* {'weight': 1}
*BatchNormalization* {'weight': 1}
*Bernoulli* {'weight': 1}
*BitShift* {'weight': 1}
*BitwiseAnd* {'weight': 1}
*BitwiseNot* {'weight': 1}
*BitwiseOr* {'weight': 1}
*BitwiseXor* {'weight': 1}
*BlackmanWindow* {'weight': 1}
*Cast* {'weight': 1}
*CastLike* {'weight': 1}
*Ceil* {'weight': 1}
*Celu* {'weight': 1}
*CenterCropPad* {'weight': 1}
*Clip* {'weight': 1}
*Col2Im* {'weight': 1}
*Compress* {'weight': 1}
*Concat* {'weight': 1}
*ConcatFromSequence* {'weight': 1}
*ConstantOfShape* {'weight': 1}
*Conv* {'weight': 1}
*ConvInteger* {'weight': 1}
*ConvTranspose* {'weight': 1}
*Cos* {'weight': 1}
*Cosh* {'weight': 1}
*CumSum* {'weight': 1}
*DFT* {'weight': 1}
*DeformConv* {'weight': 1}
*DepthToSpace* {'weight': 1}
*DequantizeLinear* {'weight': 1}
*Det* {'weight': 1}
*Div* {'weight': 1}
*Dropout* {'weight': 1}
*DynamicQuantizeLinear* {'weight': 1}
*Einsum* {'weight': 1}
*Elu* {'weight': 1}
*Equal* {'weight': 1}
*Erf* {'weight': 1}
*Exp* {'weight': 1}
*Expand* {'weight': 1}
*EyeLike* {'weight': 1}
*Flatten* {'weight': 1}
*Floor* {'weight': 1}
*GRU* {'weight': 1}
*Gather* {'weight': 1}
*GatherElements* {'weight': 1}
*GatherND* {'weight': 1}
*Gelu* {'weight': 1}
*Gemm* {'weight': 1}
*GlobalAveragePool* {'weight': 1}
*GlobalLpPool* {'weight': 1}
*Greater* {'weight': 1}
*GreaterOrEqual* {'weight': 1}
*GroupNormalization* {'weight': 1}
*HammingWindow* {'weight': 1}
*HannWindow* {'weight': 1}
*HardSigmoid* {'weight': 1}
*HardSwish* {'weight': 1}
*Hardmax* {'weight': 1}
*Identity* {'weight': 1}
*If* {'weight': 1}
*ImageDecoder* {'weight': 1}
*InstanceNormalization* {'weight': 1}
*IsInf* {'weight': 1}
*IsNaN* {'weight': 1}
*LRN* {'weight': 1}
*LSTM* {'weight': 1}
*LayerNormalization* {'weight': 1}
*LeakyRelu* {'weight': 1}
*Less* {'weight': 1}
*LessOrEqual* {'weight': 1}
*LogSoftmax* {'weight': 1}
*Loop* {'weight': 1}
*LpNormalization* {'weight': 1}
*MatMul* {'weight': 1}
*MatMulInteger* {'weight': 1}
*Max* {'weight': 1}
*MaxPool* {'weight': 1}
*MaxRoiPool* {'weight': 1}
*Mean* {'weight': 1}
*MeanVarianceNormalization* {'weight': 1}
*MelWeightMatrix* {'weight': 1}
*Min* {'weight': 1}
*Mish* {'weight': 1}
*Mod* {'weight': 1}
*Mul* {'weight': 1}
*Multinomial* {'weight': 1}
*NegativeLogLikelihoodLoss* {'weight': 1}
*NonMaxSuppression* {'weight': 1}
*NonZero* {'weight': 1}
*Not* {'weight': 1}
*OneHot* {'weight': 1}
*Optional* {'weight': 1}
*Or* {'weight': 1}
*PRelu* {'weight': 1}
*Pad* {'weight': 1}
*Pow* {'weight': 1}
*QLinearConv* {'weight': 1}
*QLinearMatMul* {'weight': 1}
*QuantizeLinear* {'weight': 1}
*RNN* {'weight': 1}
*RandomNormal* {'weight': 1}
*Reciprocal* {'weight': 1}
*ReduceL1* {'weight': 1}
*ReduceL2* {'weight': 1}
*ReduceLogSum* {'weight': 1}
*ReduceLogSumExp* {'weight': 1}
*ReduceMax* {'weight': 1}
*ReduceMean* {'weight': 1}
*ReduceMin* {'weight': 1}
*ReduceProd* {'weight': 1}
*ReduceSum* {'weight': 1}
*ReduceSumSquare* {'weight': 1}
*RegexFullMatch* {'weight': 1}
*Relu* {'weight': 1}
*Reshape* {'weight': 1}
*Resize* {'weight': 1}
*ReverseSequence* {'weight': 1}
*RoiAlign* {'weight': 1}
*Round* {'weight': 1}
*STFT* {'weight': 1}
*Scan* {'weight': 1}
*Scatter*_(deprecated) {'weight': 1}
*ScatterElements* {'weight': 1}
*ScatterND* {'weight': 1}
*Selu* {'weight': 1}
*SequenceAt* {'weight': 1}
*SequenceLength* {'weight': 1}
*Shape* {'weight': 1}
*Shrink* {'weight': 1}
*Sigmoid* {'weight': 1}
*Sign* {'weight': 1}
*Sin* {'weight': 1}
*Sinh* {'weight': 1}
*Size* {'weight': 1}
*Slice* {'weight': 1}
*Softmax* {'weight': 1}
*SoftmaxCrossEntropyLoss* {'weight': 1}
*Softplus* {'weight': 1}
*Softsign* {'weight': 1}
*SpaceToDepth* {'weight': 1}
*Split* {'weight': 1}
*SplitToSequence* {'weight': 1}
*Sqrt* {'weight': 1}
*Squeeze* {'weight': 1}
*StringConcat* {'weight': 1}
*StringNormalizer* {'weight': 1}
*StringSplit* {'weight': 1}
*Sub* {'weight': 1}
*Sum* {'weight': 1}
*Tan* {'weight': 1}
*Tanh* {'weight': 1}
*TfIdfVectorizer* {'weight': 1}
*ThresholdedRelu* {'weight': 1}
*Tile* {'weight': 1}
*TopK* {'weight': 1}
*Transpose* {'weight': 1}
*Trilu* {'weight': 1}
*Unique* {'weight': 1}
*Unsqueeze* {'weight': 1}
*Upsample*_(deprecated) {'weight': 1}
*Where* {'weight': 1}
*Xor* {'weight': 1}
ai.onnx.preview.training {'weight': 1}
*ai.onnx.preview.training.Adam* {'weight': 1}
*ai.onnx.preview.training.Gradient* {'weight': 1}
*ai.onnx.preview.training.Momentum* {'weight': 1}
To_help_you_get_started_with_the_API,_you_can_use_the 1
Backends {'weight': 1}
Backends 0
Runners_may_reuse_their_output_buffers._Thus,_if_you_need 1
Writing_A_Custom_Runner {'weight': 1}
Writing_A_Custom_Runner 1
Comparator {'weight': 1}
Comparator 0
The_Comparator_is_designed_for_scenarios_where_you_need_to 1
Data_Loaders {'weight': 1}
Data_Loaders 0
Polygraphy_provides_a_default_=DataLoader=_class_that_uses_numpy 1
Logger {'weight': 1}
Logger 0
Building_Python_API_Documentation_Locally 1
Deprecation_Policy {'weight': 1}
Deprecation_Policy 0
Modifying_Input_Shapes_In_An_ONNX_Model 1
Advanced_Topics {'weight': 1}
Reducing_Failing_ONNX_Models 1
Examples {'weight': 1}
For_CLI_run,_please_go_to_the_cloned_repository's_root_directory 1
2._Data_preparation {'weight': 1}
2._Data_preparation 0
B._Conversion_to_tfrecord 1
Workflow {'weight': 1}
Workflow 0
2.2._TensorRT_Inference 1
Additional_resources {'weight': 1}
Additional_resources 0
Aware_Training* 1
 {'weight': 1}
Step_4__TensorRT_Deployment 1
Results {'weight': 1}
Step_3__TensorRT_Deployment 1
Results {'weight': 3}
no_residual_connections_exist_in_MobileNet-v1. 1
MobileNet-v2 {'weight': 1}
MobileNet-v2 1
[[https_//github.com/NVIDIA/TensorRT/tree/main/tools/tensorflow-quantization/examples/efficientnet][EfficientNet]] {'weight': 1}
residual_connections_exist_in_MobileNet-v2. 1
Notes {'weight': 1}
QAT 1
Only_accuracy {'weight': 1}
Only_accuracy 0
Layer_Class 1
NVIDIA(R)_vs_TensorFlow_Toolkit {'weight': 1}
NVIDIA(R)_vs_TensorFlow_Toolkit 0
Perform_custom_quantization_on_a_ResNet-like_model._More 1
*Default_Quantization* {'weight': 1}
*Default_Quantization* 0
*Custom_Quantization_with_'Custom_Q/DQ_Insertion_Case'_(optimal)* 1
*Library_provided_custom_Q/DQ_insertion_cases* {'weight': 1}
*Library_provided_custom_Q/DQ_insertion_cases* 0
Layers* 1
Layers*_Other_layers_are_inherited_from_=BaseQuantizeWrapper= {'weight': 1}
Layers*_Other_layers_are_inherited_from_=BaseQuantizeWrapper= 1
*How_to_add_a_new_wrapper?* {'weight': 1}
*How_to_add_a_new_wrapper?* 0
ResNet101-v2 1
[[https_//github.com/NVIDIA/TensorRT/tree/main/tools/tensorflow-quantization/examples/mobilenet][MobileNet]] {'weight': 1}
[[https_//github.com/NVIDIA/TensorRT/tree/main/tools/tensorflow-quantization/examples/mobilenet][MobileNet]] 0
[[https_//github.com/NVIDIA/TensorRT/tree/main/tools/tensorflow-quantization/examples/efficientnet][EfficientNet]] 0
EfficientNet-B3 1
[[https_//github.com/NVIDIA/TensorRT/tree/main/tools/tensorflow-quantization/examples/inception][Inception]] {'weight': 1}
[[https_//github.com/NVIDIA/TensorRT/tree/main/tools/tensorflow-quantization/examples/inception][Inception]] 0
Dependencies 0
>=_2.8\\ 1
>=_1.10.1\\ {'weight': 1}
>=_1.10.1\\ 0
(optional)_>=_8.4_GA 1
Installation {'weight': 1}
Local 1
Documentation {'weight': 1}
Documentation 1
License {'weight': 1}
You_still_need_to_set_=Graph=_inputs_and_outputs_yourself! 1
Running_the_example {'weight': 1}
Running_the_example 0
be_folded_-_=((x_+_c0)_+_c1)_+_c2=_will_*not*_be_folded,_even 1
Prerequisites {'weight': 1}
v0.3.25_(2022-10-14) 0
v0.3.24_(2022-08-31) 0
v0.3.23_(2022-08-24) 0
v0.3.22_(2022-08-22) 0
v0.3.21_(2022-08-19) 0
v0.3.20_(2022-07-12) 0
v0.3.19_(2022-04-13) 0
v0.3.18_(2022-03-31) 0
v0.3.17_(2022-03-18) 0
v0.3.16_(2022-02-23) 0
v0.3.15_(2022-01-18) 0
v0.3.14_(2021-10-14) 0
v0.3.13_(2021-09-21) 0
v0.3.12_(2021-08-24) 0
v0.3.11_(2021-07-14) 0
v0.3.10_(2021-05-20) 0
v0.3.9_(2021-04-20) 0
v0.3.8_(2021-04-15) 0
v0.3.7_(2021-03-31) 0
v0.3.6_(2021-03-27) 0
v0.3.5_(2021-03-24) 0
v0.3.4_(2021-03-10) 0
v0.3.3_(2021-03-04) 0
v0.3.2_(2021-02-13) 0
v0.3.1_(2021-02-12) 0
v0.3.0_(2021-02-12) 0
v0.2.9_(2021-02-01) 0
v0.2.8_(2020-10-08) 0
v0.2.7_(2020-09-29) 0
v0.2.6_(2020-09-25) 0
v0.2.5_(2020-09-21) 0
v0.2.4_(2020-09-14) 0
v0.2.3_(2020-06-17) 0
v0.2.2_(2020-06-17) 0
v0.2.1_(2020-06-10) 0
v0.2.0_(2020-04-15) 0
v0.1.3_(2020-02-26) 0
v0.1.2_(2020-02-19) 0
v0.1.1_(2020-02-11) 0
v0.1.0_(2020-02-11) 0
Tensor 1
example_constant_tensor_from_ResNet50_* {'weight': 1}
example_constant_tensor_from_ResNet50_* 0
Node 1
example_ReLU_node_from_ResNet50_* {'weight': 1}
example_ReLU_node_from_ResNet50_* 0
Graph 1
Exporters {'weight': 1}
Exporters 1
Advanced {'weight': 1}
v0.0.7_(2022-08-10) 0
v0.0.6_(2020-07-21) 0
v0.0.5_(2020-07-21) 0
v0.0.4_(2020-07-18) 0
v0.0.3_(2020-07-15) 0
v0.0.2_(2020-07-05) 0
v0.0.1_(2022-06-23) 0
Of_Contents* 1
Description {'weight': 2}
Setup_the_algorithm_selectors 1
Preparing_sample_data {'weight': 1}
Preparing_sample_data 0
Sample_=--help=_options 2
Additional_resources {'weight': 5}
Models_other_than_ResNet-50_with_custom_configuration {'weight': 1}
- 3
License {'weight': 18}
per-tensor_dynamic_range_*_- {'weight': 1}
- {'weight': 1}
2019*_-_This_=README.md=_file_was_recreated,_updated_and 1
Known_issues {'weight': 1}
Of_Contents*_-_[[#description][Description]]_- 1
Description {'weight': 13}
TensorRT_API_layers_and_ops 3
Preparing_sample_data {'weight': 4}
Prerequisites {'weight': 1}
Running_the_sample {'weight': 1}
2022*_-_Migrated_code_from_parsing_a_=caffe=_model_to_an_=onnx= 1
2021*_-_Change_names_and_topic_from_"reformat-free"_to_"I/O {'weight': 1}
2021*_-_Change_names_and_topic_from_"reformat-free"_to_"I/O 0
2019*_-_This_is_the_first_release_of_the_=README.md=_file_and 1
Known_issues {'weight': 1}
Running_the_sample 1
Additional_resources {'weight': 3}
Benchmark_Engine 1
Inference {'weight': 3}
Inference 1
Plot_the_final_results {'weight': 1}
Sample_Images 1
Evaluate_mAP_Metric {'weight': 1}
Evaluate_mAP_Metric 0
This_sample_is_not_supported_on_Ubuntu_14.04_and_older. 1
Prerequisites {'weight': 1}
2._EfficientNet_V2 1
Create_ONNX_Graph {'weight': 1}
Create_ONNX_Graph 0
INT8_Precision 1
Benchmark_TensorRT_Engine {'weight': 1}
Benchmark_TensorRT_Engine 1
Inference {'weight': 1}
Depending_on_the_saved_model_exporter,_some_EfficientNet_V1 1
Inference_in_Python {'weight': 1}
Inference_in_Python 0
Please_make_sure_that_the_=onnx-graphsurgeon=_module_installed 1
Model_Conversion {'weight': 2}
Model_Conversion 0
TFOD_EfficientDet_models_will_have_a_slightly_reduced_throughput 1
3._TFHub_Models {'weight': 1}
3._TFHub_Models 1
Create_ONNX_Graph {'weight': 1}
Sample_--help_options 1
Additional_resources {'weight': 5}
In_order_to_proceed,_you_need_to_re-export_the_saved_model._If 1
Create_ONNX_Graph {'weight': 1}
If_you_receive_any_error_messages_about_non_sufficient_workspace 1
INT8_Precision {'weight': 1}
Mask_R-CNN 1
Evaluate_mAP_Metric {'weight': 1}
R-CNN*,_default_is_0.5. 1
TF_vs_TRT_Comparison {'weight': 1}
TF_vs_TRT_Comparison 0
onnx_resnet50 1
Prerequisites {'weight': 1}
-_[[https_//arxiv.org/pdf/1512.03385.pdf][Deep_Residual 1
- {'weight': 1}
3._Application_Samples 1
Known_Limitations {'weight': 1}
Known_Limitations 0
Of_Contents*_- 1
Description {'weight': 2}
Additional_preprocessing_needs_to_be_applied_to_the_data_before 1
TensorRT_API_layers_and_ops {'weight': 1}
Layer*_-_[[https_//arxiv.org/abs/1807.03247][Arxiv_paper_by 1
-_[[https_//github.com/onnx/onnx][GitHub__ONNX]]_- {'weight': 1}
-_[[https_//github.com/onnx/onnx][GitHub__ONNX]]_- 0
If_you_wanted_to_train_your_own_model_and_then_perform_inference 1
TensorRT_API_layers_and_ops {'weight': 1}
Of_Contents*_-_[[#tensorrt-command-line-wrapper-trtexec][TensorRT 1
Description {'weight': 1}
network*_-_If_you_have_a_model_saved_as_a_UFF_file,_ONNX 1
engine_generation*_-_If_you_generate_a_saved_serialized {'weight': 1}
engine_generation*_-_If_you_generate_a_saved_serialized 1
Building_=trtexec= {'weight': 1}
Building_=trtexec= 0
Example_6__Tune_throughput_with_multi-streaming 1
Tool_command_line_arguments {'weight': 1}
Tool_command_line_arguments 0
Specifying_the_=--safe=_parameter_turns_the_safety_mode_switch 1
Additional_resources {'weight': 1}
Models_other_than_ResNet-50_with_custom_configuration 0
per-tensor_dynamic_range_*_- 0
It's_important_to_preprocess_the_data_and_convert_it_to_the 1
TensorRT_API_layers_and_ops {'weight': 1}
Enabling_proto2_features 1
Generated_code {'weight': 1}
Generated_code 0
Extensions 1
APIs {'weight': 1}
APIs 0
Serialization_performance 1
The_cpp_performance_can_be_improved_by_using {'weight': 1}
The_cpp_performance_can_be_improved_by_using 0
To_iterate_over_all_oneofs 1
Updating_Reflection {'weight': 1}
Updating_Reflection 0
Programming_Languages 1
C#__https_//silentorbit.com/protobuf/_*_C#/.NET/WCF/VB_ {'weight': 1}
C#__https_//silentorbit.com/protobuf/_*_C#/.NET/WCF/VB_ 0
Presence_in_proto3_APIs 1
Semantic_differences {'weight': 1}
Semantic_differences 0
Considerations_for_change-compatibility 1
How_to_enable_/explicit_presence/_in_proto3 {'weight': 1}
How_to_enable_/explicit_presence/_in_proto3 0
Coding_Style 1
Contributing_Process {'weight': 1}
Contributing_Process 0
Installation_from_PECL 1
PHP_Package {'weight': 1}
PHP_Package 0
Installation_from_composer 1
Protoc {'weight': 1}
Protoc 1
Usage {'weight': 1}
Example_build_invocation 1
Options {'weight': 1}
Options 1
displayInput___default=true_|_false=hide_input._*_displayPrevious__ {'weight': 1}
Windows_build 1
To_push_artifacts_to_Maven_Central {'weight': 1}
To_push_artifacts_to_Maven_Central 0
Use_Java_Protocol_Buffers_with_Bazel 1
Build_from_Source {'weight': 1}
Build_from_Source 0
Build_from_Source_-_Without_Maven 1
Compatibility_Notice {'weight': 1}
Compatibility_Notice 0
dependent_packages* 1
for_Mac_users* {'weight': 1}
for_Mac_users* 0
for_AIX_users* 1
C++_Installation_-_Windows {'weight': 1}
C++_Installation_-_Windows 0
(no_default) 1
Objective_C_Generator_=protoc=_Options {'weight': 1}
Objective_C_Generator_=protoc=_Options 0
C 2
Run_instructions {'weight': 1}
Benchmark_datasets {'weight': 1}
Run_instructions 0
CPP_generated_code_ 2
Go {'weight': 1}
Go_ {'weight': 1}
Go 0
PHP_with_c_extension 1
Node.js {'weight': 2}
Node.js 0
Go_ 0
Benchmark_datasets 0
Unit_Tests 1
Compiling {'weight': 1}
Compiling 0
Of_Contents*_-_[[#description][Description]]_* 1
Description {'weight': 30}
input*_The_scores_input_are_of_shape 1
Parameters {'weight': 1}
Parameters 3
Limitations {'weight': 1}
License {'weight': 1}
Additional_Resources {'weight': 1}
Structure 3
Parameters {'weight': 28}
Additional_resources {'weight': 1}
SIG_-_Special_Interest_Groups {'weight': 1}
-_[[https_//arxiv.org/pdf/1812.05784][PointPillars]] 1
License {'weight': 3}
The_above_settings_are_slightly_different_to_the_original 1
Additional_resources {'weight': 1}
Of_Contents*_-_[[#changelog][Changelog]]_- 1
Changelog {'weight': 1}
Changelog 0
Transformation*__This_flag_primarily_defines_various_offsets 1
Malformed_Boxes_by_+1*__Some_legacy_implementations_of_ROI {'weight': 1}
Malformed_Boxes_by_+1*__Some_legacy_implementations_of_ROI 1
Additional_Resources {'weight': 1}
Additional_Resources 1
 {'weight': 1}
-_[[https_//arxiv.org/abs/1506.04579][ParseNet_Paper]]\\ 1
License {'weight': 1}
Anchors_Input_(Optional) 1
Dynamic_Shape_Support {'weight': 1}
Dynamic_Shape_Support 0
Limitations 0
Using_the_Fused_Box_Decoder 1
Additional_Resources {'weight': 1}
-_[[https_//arxiv.org/abs/1512.02325][SSD__Single_Shot 1
License {'weight': 2}
=t_w=_and_=t_h=_from_the_input_remain_unchanged. 1
Parameters {'weight': 1}
-_[[https_//arxiv.org/abs/1612.08242][YOLOv2_paper]] 1
License {'weight': 1}
-_[[https_//arxiv.org/pdf/2010.04159.pdf][Deformable_DETR]] 1
License {'weight': 1}
-_[[https_//arxiv.org/abs/1504.08083][Original_ROI 1
License {'weight': 1}
-_[[https_//arxiv.org/abs/1504.08083][ROI_Pooling 1
License {'weight': 1}
-_[[https_//arxiv.org/abs/1810.04805][BERT]] 1
License {'weight': 1}
-_[[https_//arxiv.org/abs/1706.03762][Transformer]] 1
License {'weight': 1}
-_[[https_//arxiv.org/abs/1506.01497][Faster_R-CNN]] 1
License {'weight': 1}
This_code_is_almost_the_same_to_=CodeTypeSSD__CENTER_SIZE=_using 1
=inputOrder= {'weight': 1}
=inputOrder= 1
Additional_resources {'weight': 1}
Of_Contents*_-_[[#coordconvacplugin][coordConvACPlugin]]_- 1
Description {'weight': 1}
What_if_the_limit_is_zero? 1
7._Verify_download {'weight': 1}
7._Verify_download 0
Run_Hello_World_MLCube_example 1
Setup_Docker {'weight': 1}
Setup_Docker 0
Workspace 1
MNIST_MLCube_directory_structure_summary {'weight': 1}
MNIST_MLCube_directory_structure_summary 0
docs-site_Action_Development_documentation 1
python-publish_action {'weight': 1}
python-publish_action 0
On_Windows 1
Installation {'weight': 1}
NEW__The_KiTS23_Challenge_is_Underway! 1
KiTS19 {'weight': 1}
KiTS19 0
Labeling_Errors 1
Challenge_Results_and_References {'weight': 1}
Challenge_Results_and_References 0
FileSet 0
RecordSet 0
Field 0
DataSource 0
extract 0
fileProperty 0
[[https_//schema.org/Text][sc_Text]] 4
column {'weight': 1}
jsonPath {'weight': 1}
Reference {'weight': 1}
BoundingBox {'weight': 1}
column 0
jsonPath 0
Reference 0
BoundingBox 1
Properties {'weight': 1}
Properties 0
[[#fileobject][FileObject]],_[[#fileset][FileSet]] 1
includes {'weight': 1}
includes 0
[[#fileset][FileSet]] 2
excludes {'weight': 1}
source {'weight': 1}
excludes 0
source 0
[[#recordset][RecordSet]],_[[#field][Field]] 1
key {'weight': 1}
key 0
[[#recordset][RecordSet]] 3
field {'weight': 1}
subField {'weight': 1}
transform {'weight': 1}
field 0
subField 0
[[#field][Field]] 4
parentField {'weight': 1}
dataType {'weight': 1}
references {'weight': 1}
data {'weight': 1}
parentField 0
dataType 0
references 0
data 0
JSON_Text_that_matches_the_fields_of_the_=RecordSet=. 0
transform 0
[[#datasource][DataSource]] 2
format {'weight': 1}
Open_issues/questions {'weight': 1}
format 0
Open_issues/questions 0
Loading_a_=distribution=_via_HTTP_with_Basic_Auth 1
Programmatically_build_JSON-LD_files {'weight': 1}
Programmatically_build_JSON-LD_files 0
note/*__It's_worth_pointing_out_that_we_divide_the_loss_by 1
Gradient_computation_&_optimization {'weight': 3}
Gradient_computation_&_optimization 1
Hands-on_--_Let's_train_an_NMT_model {'weight': 3}
Hands-on_--_Let's_train_an_NMT_model 0
Inference_--_How_to_generate_translations 1
Intermediate {'weight': 3}
Intermediate 0
matters_in_the_attention_mechanism?/* 1
Attention_Wrapper_API {'weight': 3}
Attention_Wrapper_API 0
Hands-on_--_building_an_attention-based_NMT_model 1
Tips_&_Tricks {'weight': 3}
Tips_&_Tricks 0
Three_models_in_a_single_graph_and_sharing_a_single_Session* 1
Three_models_in_three_graphs,_with_three_Sessions_sharing_the {'weight': 3}
Three_models_in_three_graphs,_with_three_Sessions_sharing_the 1
Data_Input_Pipeline {'weight': 3}
Data_Input_Pipeline 0
module._Data_iterators_are_flexible,_easy_to_reason_about_and 1
Other_details_for_better_NMT_models {'weight': 1}
Other_details_for_better_NMT_models 0
Bahdanau-style_attention_often_requires_bidirectionality 1
Multi-GPU_training {'weight': 3}
Multi-GPU_training 2
Benchmarks {'weight': 3}
Abstractions {'weight': 2}
Speed*__(0.37s_step-time,_15.3K_wps)_on_/K40m/_&_(0.17s 1
WMT_German-English {'weight': 3}
WMT_German-English 0
Speed*__(2.1s_step-time,_3.4K_wps)_on_/Nvidia_K40m/_&_(0.7s 1
WMT_English-German_---_Full_Comparison {'weight': 3}
WMT_English-German_---_Full_Comparison 0
Standard_HParams 1
Other_resources {'weight': 3}
Other_resources 0
Reproduced_papers 1
List_of_all_sorted_CM_scripts {'weight': 2}
List_of_all_sorted_CM_scripts 0
Third_level_files 1
Examples {'weight': 2}
Differentiating_ML_artifacts 1
Environment_variables {'weight': 2}
Environment_variables 0
rename 1
CM_internal_automations {'weight': 2}
CM_internal_automations 0
default,_CM_will_pull_Git_repositories_and_cache_installations_and 1
Ubuntu,_Debian {'weight': 2}
Ubuntu,_Debian 0
that_you_must_set_up_virtual_env_on_Ubuntu_23+_before_using_any 1
Red_Hat {'weight': 2}
Red_Hat 0
CM_CLI_testing 0
Reusable_automation_actions 0
Show/clean_CM_cache_with_all_installations 1
Windows {'weight': 2}
2022 1
Resources {'weight': 2}
2021-2023_[[https_//mlcommons.org][MLCommons]] 1
[[../LICENSE.md][Apache_2.0]] {'weight': 2}
[[../LICENSE.md][Apache_2.0]] 1
Collective_Mind_automation_language_(CM) {'weight': 2}
Collective_Mind_automation_language_(CM) 0
Power_Measurement_Setup 1
Reproducing_the_Nvidia_Jetson_AGX_Orin_Submission {'weight': 6}
Reproducing_the_Nvidia_Jetson_AGX_Orin_Submission 0
Full_run 4
Resnet50 {'weight': 4}
Retinanet {'weight': 4}
RNNT {'weight': 4}
3d-unet {'weight': 4}
Other_backends 1
Run_benchmarks_and_submit_results {'weight': 4}
Run_benchmarks_and_submit_results 0
Measure_power 1
Debug_benchmarks {'weight': 4}
Debug_benchmarks 1
 {'weight': 4}
Add_new_data_set 1
Participate_in_reproducibility_and_optimization_challenges {'weight': 4}
Participate_in_reproducibility_and_optimization_challenges 0
BERT-99.9%__MobileBERT_Offline_-_DeepSparse 1
ResNet50 {'weight': 6}
ResNet50 0
System_requirements_to_run_MLPerf_on_Nvidia_GPU 1
MLCommons_CM_automation_meta-framework {'weight': 2}
MLCommons_CM_automation_meta-framework 0
Compile_MLPerf_loadgen 1
CM_automation_for_the_MLPerf_benchmark {'weight': 6}
CM_automation_for_the_MLPerf_benchmark 0
Prepare_MLPerf_submission 1
Trying_deepsparse_backend {'weight': 4}
Trying_deepsparse_backend 0
Run_Command 1
Run_ResNet50_TFLite_via_CM {'weight': 2}
Run_ResNet50_TFLite_via_CM 0
What_is_the_difference_between_Repeatability,_Reproducibility_and 1
Discussions {'weight': 2}
Discussions 0
Running_the_power_server_inside_a_docker_container 1
Running_a_dummy_workload_with_power_(on_host_machine) {'weight': 2}
Running_a_dummy_workload_with_power_(on_host_machine) 0
Run_a_dummy_workload_with_power_inside_a_docker_container 1
Running_MLPerf_Image_Classification_with_power {'weight': 2}
Running_MLPerf_Image_Classification_with_power 0
Running_MLPerf_Image_Classification_with_power_inside_a_docker 1
Further_questions? {'weight': 2}
Further_questions? 0
in_the_same_repository_(specified_by_/./) 1
Viewing_CM_meta_description {'weight': 2}
Viewing_CM_meta_description 0
Creating_other_types_of_artifacts 1
Reusing_others'_artifacts_in_the_CM_format {'weight': 2}
Reusing_others'_artifacts_in_the_CM_format 0
From_zip_file 1
Adding_reusable_automations_for_related_artifacts {'weight': 2}
Adding_reusable_automations_for_related_artifacts 0
and_a_/module.py*_with_the_automation_actions_implemented_as 1
Extending_meta_descriptions_of_artifacts {'weight': 2}
Extending_meta_descriptions_of_artifacts 0
STMicroelectronics_NUCLEO-L4R5ZI 1
Download_and_run_EEMBC_Energy_Runner {'weight': 2}
Download_and_run_EEMBC_Energy_Runner 0
With_one_CM_command_that_will_install_all_dependencies 2
Use_Python_virtual_environment_with_CM_and_MLPerf {'weight': 2}
The_next_steps {'weight': 2}
Use_Python_virtual_environment_with_CM_and_MLPerf 1
The_next_steps {'weight': 2}
The_next_steps 0
Extra_system_requirements_for_Nvidia_GPU 1
MLCommons_CM_automation_language {'weight': 2}
MLCommons_CM_automation_language 0
Install_ONNX_runtime_for_CPU 1
Download_Bert-large_model_(FP32,_ONNX_format) {'weight': 2}
Download_Bert-large_model_(FP32,_ONNX_format) 0
fp32 1
Acknowledgments {'weight': 2}
Acknowledgments 0
Install_virtual_environment 1
CM_automation_for_the_MLPerf_benchmark {'weight': 2}
MLPerf_inference_-_Python_-_ResNet50_FP32_-_ImageNet_-_TVM_-_CPU_- 0
Stage/*_##_Run_Commands_###_Quick_submission_run_(short_run) 1
Customizations {'weight': 2}
Customizations 0
Run_experiments 3
Second_approach__adding_CM_interface_to_your_research_project {'weight': 2}
Notes {'weight': 3}
Setup_for_RPi4_CPU {'weight': 1}
Second_approach__adding_CM_interface_to_your_research_project 0
Git_project 1
Adding_CM_script_to_prepare_and_run_your_experiment {'weight': 2}
Adding_CM_script_to_prepare_and_run_your_experiment 0
MLPerf_inference_-_Python_-_RetinaNet_FP32_-_Open_Images_-_ONNX_- 0
MLPerf_inference_-_C++_-_RetinaNet_FP32_-_Open_Images_-_ONNX_-_GPU_- 0
MLPerf_inference_-_Python_-_RetinaNet_FP32_-_Open_Images_-_PyTorch_- 0
CUDA 1
Backend_(ML_framework) {'weight': 2}
Backend_(ML_framework) 0
TVM_ONNX_(Python) 1
Datasets {'weight': 2}
Power_measurements 1
Prepare_submission {'weight': 2}
Prepare_submission 1
The_next_steps {'weight': 2}
2023 1
Resources {'weight': 2}
Artifacts_reusable_(pilot_project_with_MLCommons) 1
Distinguished_artifact_award {'weight': 2}
Distinguished_artifact_award 0
can_skip_this_step_if_you_want_to_share_your_artifacts_without_the 1
Making_artifacts_available_to_evaluators {'weight': 2}
Making_artifacts_available_to_evaluators 0
if*_they_have_been_placed_on_any_publicly_accessible_archival 1
Submitting_artifacts {'weight': 2}
Submitting_artifacts 0
Models 1
Installation {'weight': 2}
Please_check_the 1
How_to_deal_with_numerical_accuracy_and_instability? {'weight': 2}
How_to_deal_with_numerical_accuracy_and_instability? 0
V1.0.0 1
Prototyping_phase {'weight': 2}
Prototyping_phase 0
Reproduce_results_from_ACM/IEEE/NeurIPS_papers 1
Project_coordinators {'weight': 4}
Project_coordinators 0
doc 1
Maintainers {'weight': 2}
Maintainers 0
any 1
Maintainers {'weight': 2}
uid 1
Maintainers {'weight': 2}
reindex 1
Maintainers {'weight': 2}
[[../README.md][TOC]]_]* 49
MLPerf™_Inference_v1.0__speech_recognition {'weight': 4}
MLPerf™_Inference_v1.0__recommendation {'weight': 4}
Customize_MLPerf™_inference_benchmark {'weight': 2}
MLPerf™_Inference_v1.0__object_detection {'weight': 4}
MLPerf™_Inference_v1.0__image_classification {'weight': 4}
MLPerf™_Inference_v1.0__NLP {'weight': 4}
MLPerf™_Inference_v1.0__medical_imaging {'weight': 2}
Ideas_to_improve_CK {'weight': 2}
Ideas_to_improve_automation {'weight': 2}
Standardization {'weight': 2}
Preparing_models {'weight': 2}
Adaptive_CK_container_for_MLPerf™_Inference_v1.0_-_Object_Detection_- {'weight': 2}
Reproducibility_reports__MLPerf™_inference_benchmark_v1.1 {'weight': 2}
MLPerf™_Inference_v0.7_-_Image_Classification_-_Nvidia_Jetson_Xavier {'weight': 2}
Adaptive_CK_container_for_MLPerf™_Inference_v1.0_-_Image {'weight': 2}
Common_setup_for_the_MLPerf_inference_benchmark {'weight': 2}
Common_workflow_for_MLPerf_inference {'weight': 2}
Misc_MLPerf™_inference_notes {'weight': 2}
Rapsberry_Pi_4_with_Ubuntu_Server_20.04.2_LTS_64-bit {'weight': 2}
Nvidia-based_generic_platforms_with_Ubuntu {'weight': 2}
Nvidia_Jetson_Nano_board {'weight': 2}
Rapsberry_Pi_4_with_a_standard_port_of_Debian {'weight': 2}
x8664-based_generic_platforms_with_Yocto {'weight': 2}
Rapsberry_Pi_4_with_Ubuntu_Server_20.04.2_LTS_64-bit_with_Coral_Edge {'weight': 2}
x8664-based_generic_platforms_with_Ubuntu {'weight': 2}
Example_of_CK_dashboards_for_ML_Systems_DSE {'weight': 2}
Analyse_MLPerf™_inference_results {'weight': 2}
Automated_design_space_exploration_of_ML/SW/HW_stacks {'weight': 2}
CK_workflows_for_speech_recognition_with_PyTorch {'weight': 2}
CK_workflows_for_medical_imaging_(3d-unet_and_BraTS)_with_PyTorch {'weight': 2}
CK_workflows_for_image_classification_with_TensorFlow {'weight': 2}
CK_workflows_for_object_detection_with_TFLite {'weight': 2}
CK_workflows_for_object_detection_with_ONNX {'weight': 2}
CK_workflows_for_object_detection_with_TensorRT {'weight': 2}
CK_workflows_for_the_MLPerf_inference_benchmark {'weight': 2}
CK_workflows_for_language_(NLP)_with_ONNX {'weight': 2}
CK_workflows_for_medical_imaging_(3d-unet_and_BraTS)_with_ONNX {'weight': 2}
CK_workflows_for_image_classification_with_TVM {'weight': 2}
CK_workflows_for_image_classification_with_OpenVino {'weight': 2}
CK_workflows_for_image_classification_with_PyTorch {'weight': 2}
CK_workflows_for_object_detection_with_TVM {'weight': 2}
CK_workflows_for_image_classification_with_ONNX {'weight': 2}
CK_workflows_for_image_classification_with_TFLite {'weight': 2}
MLPerf™ {'weight': 2}
Upgrade_the_CK_framework {'weight': 2}
Logging_infrastructure {'weight': 2}
MLCube™_project {'weight': 2}
Continuous_integration_for_CK_workflows {'weight': 2}
CK_components_for_ML_Systems_(automation_recipes) {'weight': 2}
MLPerf™_Inference_v1.0__speech_recognition 0
MLPerf™_Inference_v1.0__recommendation 0
Customize_MLPerf™_inference_benchmark 0
MLPerf™_Inference_v1.0__object_detection 0
MLPerf™_Inference_v1.0__image_classification 0
MLPerf™_Inference_v1.0__NLP 0
MLPerf™_Inference_v1.0__medical_imaging 0
Ideas_to_improve_CK 0
Ideas_to_improve_automation 0
Standardization 0
Preparing_models 0
MLPerf_inference_v1.1__Image_Classification__DSE_(Pareto 1
Install_system_dependencies {'weight': 6}
Install_system_dependencies 0
Development_(live)_components_for_MLPerf 1
Activate_virtual_environment {'weight': 16}
Activate_virtual_environment 0
Reproducibility_report__design_space_exploration 0
Visualize_MLPerf_results 0
by_[[https_//cKnowledge.org/gfursin][Grigori_Fursin]]_on 8
MLPerf™_Inference_v1.0_-_Object_Detection_-_TFLite_(with_Coral_EdgeTPU {'weight': 2}
MLPerf™_Inference_v1.0_-_Object_Detection_-_TFLite {'weight': 2}
MLPerf™_Inference_v1.0_-_Image_Classification_-_TFLite_2.5.0_RUY_(x86) {'weight': 2}
MLPerf™_Inference_v0.5_-_Image_Classification_-_OpenVino_2019_R3 {'weight': 2}
MLPerf™_Inference_v1.0_-_Image_Classification_-_TFLite_2.4.1 {'weight': 2}
MLPerf™_Inference_v1.0_-_Object_Detection_-_TFLite_2.4.1_with_RUY {'weight': 2}
MLPerf™_Inference_v1.0_-_Image_Classification_-_TFLite_2.4.1_(x86) {'weight': 2}
System_packages {'weight': 2}
MLPerf™_Inference_v1.0_-_Object_Detection_-_TFLite_(with_Coral_EdgeTPU 0
Install_Collective_Knowledge_(CK) 1
Pull_[[https_//github.com/mlcommons/ck-mlops][CK_MLOps_repository]] {'weight': 4}
Pull_[[https_//github.com/mlcommons/ck-mlops][CK_MLOps_repository]] 0
Install_COCO_2017_val_dataset_(5000_images)_and 2
Setup_for_EdgeTPU_(Host__RPi_4) {'weight': 2}
Setup_for_RPi4_CPU {'weight': 2}
Setup_for_EdgeTPU_(Host__RPi_4) 0
MLPerf_inference_v1.1__Image_Classification__Resnet50__ONNX_(out 1
Install_system_dependencies {'weight': 4}
Reproducibility_report__benchmarking 0
Adaptive_CK_container_for_MLPerf™_Inference_v1.0_-_Object_Detection_- 0
Run_a_container_and_record_experiments_locally 0
MLPerf_inference_v1.1__Image_Classification__Resnet50_ 1
Install_system_dependencies {'weight': 4}
Install_TFLite_model_(MobileNet_v2__Large__Minimalistic__224__1.0_ 0
MLPerf™_Inference_v1.0_-_Object_Detection_-_TFLite 0
Setup_for_RPi4_CPU 0
Run_experiments_(via_cmdgen) 0
MLPerf_inference_v1.1__Image_Classification__Resnet50__TVM__AWS 1
Install_system_dependencies {'weight': 6}
Reproducibility_reports__MLPerf™_inference_benchmark_v1.1 0
by_the 1
Reproducing_MLPerf™_inference_benchmarks_(v0.7_and_v1.0) {'weight': 2}
Reproducing_MLPerf™_inference_benchmarks_(v0.7_and_v1.0) 0
Using_CK_adaptive_containers_(to_be_tested!) 1
Other_reproducibility_studies {'weight': 2}
Other_reproducibility_studies 0
MLPerf™_Inference_v1.0_-_Image_Classification_-_TFLite_2.5.0_RUY_(x86) 0
Preprocess_using_OpenCV_(better_accuracy_but_may_fail_on_some 1
Optional__install_reduced_ImageNet_2012_val_dataset_with_the_first {'weight': 2}
Optional__install_reduced_ImageNet_2012_val_dataset_with_the_first 0
Performance__Single_Stream_(500_samples) 1
note_from_the_community_*_A_valid_SingleStream_performance_run {'weight': 6}
note_from_the_community_*_A_valid_SingleStream_performance_run 0
Performance__Offline_(500_samples) 1
note_from_the_community_*_A_valid_Offline_performance_run {'weight': 6}
note_from_the_community_*_A_valid_Offline_performance_run 0
MLPerf™_Inference_v0.5_-_Image_Classification_-_OpenVino_2019_R3 0
MLPerf_inference_v1.1__Image_Classification__Resnet50__TVM__GCP 1
Install_system_dependencies {'weight': 2}
MLPerf™_Inference_v1.0_-_Image_Classification_-_TFLite_2.4.1 0
Preprocess_using_pillow_(slightly_worse_accuracy_but_works_most_of 2
Install_reduced_ImageNet_2012_val_dataset_with_the_first_500_images {'weight': 4}
Install_framework_TFLite_2.4.1_with_RUY {'weight': 4}
Install_reduced_ImageNet_2012_val_dataset_with_the_first_500_images 0
Install_framework_TFLite_2.4.1_with_RUY 0
ResNet-50_(no-argmax) 1
Run_MLPerf™_benchmark {'weight': 2}
Run_MLPerf™_benchmark 0
MLPerf™_Inference_v1.0_-_Object_Detection_-_TFLite_2.4.1_with_RUY 0
System_packages 1
Install_Collective_Knowledge_(CK)_and_Virtual_Environment {'weight': 2}
Install_Collective_Knowledge_(CK)_and_Virtual_Environment 0
MLPerf™_Inference_v0.7_-_Image_Classification_-_Nvidia_Jetson_Xavier 0
MLPerf™_Inference_v1.0_-_Image_Classification_-_TFLite_2.4.1_(x86) 0
Adaptive_CK_container_for_MLPerf™_Inference_v1.0_-_Image 0
Linux 2
Run_a_container_and_record_experiments_locally {'weight': 2}
Load_and_run_a_model_in_C++ {'weight': 2}
Run_a_container_with_external_ImageNet 1
 {'weight': 2}
MLPerf_inference_v1.1__Image_Classification__Resnet50__TVM_ 1
Install_system_dependencies {'weight': 2}
20210723 1
PyTorch_1.5.0_*_TorchVision_0.6.0_(works_with_PyTorch_1.5.0)_*_ONNX {'weight': 2}
PyTorch_1.5.0_*_TorchVision_0.6.0_(works_with_PyTorch_1.5.0)_*_ONNX 0
Install_any_available_version 4
Install_CK_packages_with_ONNX_(GPU) {'weight': 2}
Notes {'weight': 4}
Install_CK_packages_with_TensorFlow_(GPU) {'weight': 2}
Tested_configurations {'weight': 2}
Install_CK_packages_with_ONNX_(GPU) 0
Common_setup_for_the_MLPerf_inference_benchmark 0
Install_CK_packages_with_TensorFlow_(GPU) 0
Tested_configurations 0
Common_workflow_for_MLPerf_inference 0
Export_all_MLPerf_inference_results 1
Coordinator {'weight': 2}
Coordinator 0
Misc_MLPerf™_inference_notes 0
that_this_CK-MLPerf_documentation_is_discontinued_after_the 1
MLPerf™_inference_benchmark_automation {'weight': 2}
MLPerf™_inference_benchmark_automation 0
Customizable_dashboards 1
Table_of_contents {'weight': 2}
Table_of_contents 0
Rapsberry_Pi_4_with_Ubuntu_Server_20.04.2_LTS_64-bit 0
Nvidia-based_generic_platforms_with_Ubuntu 0
TensorRT 2
Test_CK_automation_(platform_detection) {'weight': 2}
Building_for_JetPack_4.x {'weight': 1}
Test_CK_automation_(platform_detection) 0
Nvidia_Jetson_Nano_board 0
Rapsberry_Pi_4_with_a_standard_port_of_Debian 0
x8664-based_generic_platforms_with_Yocto 0
Rapsberry_Pi_4_with_Ubuntu_Server_20.04.2_LTS_64-bit_with_Coral_Edge 0
x8664-based_generic_platforms_with_Ubuntu 0
Example_of_CK_dashboards_for_ML_Systems_DSE 0
View_CK_dashboard_in_your_browser 1
Demo_of_a_Docker_with_MLPerf™_dashboards_for_ML_Systems_DSE_(Linux {'weight': 2}
Demo_of_a_Docker_with_MLPerf™_dashboards_for_ML_Systems_DSE_(Linux 0
Analyse_MLPerf™_inference_results 0
Download_and_install_MLPerf™_inference_results_via_CK 1
Available_results {'weight': 2}
Available_results 0
v1.0 1
 {'weight': 2}
[[../README.md][Back_to_TOC]]_]* 1
Shortcuts {'weight': 6}
Shortcuts 0
TF_SSD_Mobilenet-v1_non-quantized 1
Convert_COCO_to_1200x1200 {'weight': 2}
Convert_COCO_to_1200x1200 0
Preprocess_using_Pillow_(slightly_worse_accuracy_but_works_most_of 1
Plug_in_full_ImageNet_2012_val_dataset_with_50000_images {'weight': 2}
Plug_in_full_ImageNet_2012_val_dataset_with_50000_images 0
Automated_design_space_exploration_of_ML/SW/HW_stacks 0
CK_based_object_detection_DSE 0
CK_workflows_for_speech_recognition_with_PyTorch 0
CK_workflows_for_medical_imaging_(3d-unet_and_BraTS)_with_PyTorch 0
MLPerf_tasks 1
TBD {'weight': 2}
TBD 1
Notes {'weight': 2}
Use_ONNX 2
Scenario__Accuracy__Single_Stream {'weight': 2}
Scenario__Performance__Single_Stream {'weight': 2}
Scenario__Accuracy__Single_Stream 0
model,image-classification,mlperf,onnx,resnet50,v1.5-opset-11 1
Scenario__Performance__Single_Stream {'weight': 2}
Scenario__Performance__Single_Stream 0
CK_workflows_for_image_classification_with_TensorFlow 0
CK_workflows_for_object_detection_with_TFLite 0
CK_workflows_for_object_detection_with_ONNX 0
CK_workflows_for_object_detection_with_TensorRT 0
CK_workflows_for_the_MLPerf_inference_benchmark 0
CK_workflows_for_language_(NLP)_with_ONNX 0
Install_SSD-ResNet34_1200x1200_non-quantized_fp32_for_ONNX_opset-8 1
Benchmark {'weight': 2}
Benchmark 1
Analyze_experimental_results {'weight': 2}
Record_benchmarking_results_to_the_CK_repository 1
Analyze_experimental_results {'weight': 2}
Analyze_experimental_results 0
Start_Docker_while_mounting_CK_repository_with_experiments_ 1
Integration_with_web_services_and_CI_platforms {'weight': 2}
Integration_with_web_services_and_CI_platforms 1
Questions_and_feedback {'weight': 4}
Questions_and_feedback 0
Record_results_to_the_CK_repository 1
PyTorch-based_models_for_CPU {'weight': 2}
PyTorch-based_models_for_CPU 0
CK_workflows_for_medical_imaging_(3d-unet_and_BraTS)_with_ONNX 0
CK_workflows_for_image_classification_with_TVM 0
CK_workflows_for_image_classification_with_OpenVino 0
CK_workflows_for_image_classification_with_PyTorch 0
CK_workflows_for_object_detection_with_TVM 0
CK_workflows_for_image_classification_with_ONNX 0
CK_workflows_for_image_classification_with_TFLite 0
MLPerf™ 0
Upgrade_the_CK_framework 0
Logging_infrastructure 0
MLCube™_project 0
Run_benchmark 1
CK_automation {'weight': 2}
CK_automation 0
Continuous_integration_for_CK_workflows 0
[[../reproduce/README.md#][Back_to_MLPerf_v1.1_reproducibility 1
MLPerf_inference_v1.1_reproducibility_report_for_the_OctoML {'weight': 2}
MLPerf_inference_v1.1_reproducibility_report_for_the_OctoML 0
Install_PyTorch_model_(Resnet50__int8__quantized) 0
and_simplifying_MLPerf 1
Authors {'weight': 2}
Authors 0
Use_reduced_ImageNet_to_test_the_MLPerf_workflow 1
Install_PyTorch_model_(Resnet50__int8__quantized) {'weight': 2}
Install_CK_workflow_Python_dependencies 0
CK_components_for_ML_Systems_(automation_recipes) 0
Automated_workflows 1
Coordinator {'weight': 2}
Update_program_sources 1
Update_software_dependencies {'weight': 2}
Update_software_dependencies 0
Add_new_CK_packages 1
/PACKAGE_DIR/_-_the_path_to_the_CK_package_entry._This_is_useful_if {'weight': 2}
/PACKAGE_DIR/_-_the_path_to_the_CK_package_entry._This_is_useful_if 0
Using_CK_modules 1
Generate_reproducible_and_interactive_articles {'weight': 2}
Generate_reproducible_and_interactive_articles 0
Add_CK_entries_from_a_zip_file_to_an_existing_CK_repository 1
CLI_to_manage_CK_entries {'weight': 2}
CLI_to_manage_CK_entries 0
Copy_a_given_CK_entry 1
CLI_to_manage_CK_actions {'weight': 2}
CLI_to_manage_CK_actions 0
Android_(Linux_host) 1
CK_installation {'weight': 2}
CK_installation 0
that_on_Windows_you_also_need_to_install_/ctuning@ck-win* 1
Docker {'weight': 2}
Docker 1
Further_info {'weight': 2}
actions/*_are_implemented_using 1
modules/*_are_always_stored_in_*/module_/_<_CK_module_name_>/* {'weight': 2}
modules/*_are_always_stored_in_*/module_/_<_CK_module_name_>/* 0
platform/*_to_help_the_community_share_CK_components,_create_live 1
How_CK_supports_collaborative_and_reproducible_ML&systems_research {'weight': 2}
How_CK_supports_collaborative_and_reproducible_ML&systems_research 0
Further_info 0
Push_data_to_a_dashboard 1
Notes {'weight': 2}
that_the_1st_generation_of_the_CK_framework_was_discontinued_in 1
Collective_Knowledge_framework_(CK) {'weight': 2}
Collective_Knowledge_framework_(CK) 0
Tutorials 1
Releases {'weight': 2}
Releases 0
Stable_versions 1
Current_projects {'weight': 2}
Current_projects 0
Other_use_cases 1
CK_portal {'weight': 2}
CK_portal 0
Organizers 1
Initial_discussion_and_materials {'weight': 4}
Initial_discussion_and_materials 0
Generate_and_upload_MLPerf_submission 1
Questions?_Suggestions? {'weight': 2}
Questions?_Suggestions? 0
Generate_MLPerf_submission 1
Use_=--submitter=<Your_name>=_if_your_organization_is_an_official {'weight': 2}
Use_=--submitter=<Your_name>=_if_your_organization_is_an_official 0
Challenge 1
 {'weight': 2}
Test_CUDA_installation 1
Install_Python_virtual_environment {'weight': 4}
Install_Python_virtual_environment 0
Push_the_results_to_GitHub_repo 3
Try_PyTorch_backend {'weight': 4}
Using_ARMNN_with_NEON {'weight': 4}
Tensorflow_backend {'weight': 4}
Try_PyTorch_backend 1
Test_composable_ML_benchmark_with_other_models,_data_sets,_frameworks {'weight': 4}
Test_composable_ML_benchmark_with_other_models,_data_sets,_frameworks 1
The_next_steps {'weight': 4}
Generate_actual_submission_tree 3
Pytorch_backend {'weight': 4}
Tensorflow_backend {'weight': 6}
Tensorflow_backend_(Reference_implementation) {'weight': 2}
Pytorch_backend 0
Tensorflow_backend 0
Tensorflow_backend_(Reference_implementation) 0
test 1
Maintainers {'weight': 8}
Platform_information 1
List_of_all_sorted_CM_scripts {'weight': 2}
show 1
Maintainers {'weight': 2}
list_files_recursively 1
Maintainers {'weight': 2}
add 1
Maintainers {'weight': 2}
replay 1
Maintainers {'weight': 2}
CM_script_execution_flow 1
If_a_script_is_already_cached,_then_the_=preprocess=,_=run_file=_and {'weight': 2}
If_a_script_is_already_cached,_then_the_=preprocess=,_=run_file=_and 0
Dynamic_variations 1
ENV_flow_during_CM_script_execution {'weight': 2}
ENV_flow_during_CM_script_execution 0
Special_env_keys 1
Script_Meta {'weight': 2}
Script_Meta 0
Special_keys_in_script_meta 1
How_cache_works? {'weight': 2}
How_cache_works? 0
prepare 1
Maintainers {'weight': 2}
Caching_output_of_CM_scripts 1
Assembling_pipeline_to_compile_and_run_image_corner_detection {'weight': 2}
Assembling_pipeline_to_compile_and_run_image_corner_detection 0
Customizing_sub-dependencies_in_a_pipeline 1
Using_Python_virtual_environments {'weight': 2}
Using_Python_virtual_environments 0
CM_script_automation_help 1
CM_CLI {'weight': 406}
CM_CLI 0
CM_modular_Docker_container 1
Customization {'weight': 406}
Customization 0
CLI_flags_can_be_used_in_the_Python_CM_API_as_follows_* 2
Default_environment {'weight': 162}
Script_flags_mapped_to_environment {'weight': 14}
Default_environment 1
Script_workflow,_dependencies_and_native_scripts {'weight': 271}
Script_workflow,_dependencies_and_native_scripts 0
How_to_use 2
=[DOCKER_OS_VERSION]=_is_one_of_=18.04=,_=20.04=,_=22.04=_for_=ubuntu= {'weight': 2}
=[--docker_os,_--docker_os_version,_--cm_repo_and_--script_tags]=_are {'weight': 2}
=[DOCKER_OS_VERSION]=_is_one_of_=18.04=,_=20.04=,_=22.04=_for_=ubuntu= 0
Versions 2
Script_workflow,_dependencies_and_native_scripts {'weight': 17}
Script_output {'weight': 72}
New_environment_keys_(filter) 1
Maintainers {'weight': 66}
Script_flags_mapped_to_environment 0
New_environment_keys_auto-detected_from_customize 1
Maintainers {'weight': 136}
Default_variations 1
Script_workflow,_dependencies_and_native_scripts {'weight': 44}
Script_output 0
Valid_variation_combinations_checked_by_the_community 1
Script_workflow,_dependencies_and_native_scripts {'weight': 2}
Managing_the_configuration_files 0
When_custom_config_files_are_generated_they_override_the 1
Information {'weight': 2}
Information 0
Setup_for_Google_Cloud_Instances 0
System_dependencies 0
Supported_and_Tested_OS 2
Examples {'weight': 2}
CLI {'weight': 4}
Detect_CUDA_on_Windows 1
System_dependencies {'weight': 2}
ONNX,_CPU 1
Run_command {'weight': 2}
Other_Input_Options_ 1
Use_modular_Docker_container_with_the_CM_API {'weight': 2}
Use_modular_Docker_container_with_the_CM_API 0
Open_discussions_and_developments 0
Contact_us 0
=[--docker_os,_--docker_os_version,_--cm_repo_and_--script_tags]=_are 0
Choices_(flags) 1
Example__MLPerf_inference_-_Python_-_RetinaNet_FP32_-_Open_Images_- {'weight': 2}
Example__MLPerf_inference_-_Python_-_RetinaNet_FP32_-_Open_Images_- 0
CLI 0
Detect_llvm_with_non-standard_name 1
Force_new_detection_even_if_llvm_is_already_found_and_cached {'weight': 2}
Force_new_detection_even_if_llvm_is_already_found_and_cached 0
Preprocess_the_dataset_with_=Channel=_component_at_beginning 1
Input_Variables_coming_from_Dependencies {'weight': 2}
Input_Variables_coming_from_Dependencies 0
Set_up 0
Docker_Setup 1
Run_Commands {'weight': 4}
Run_Commands 0
Using_ARMNN_with_NEON 0
Further_analysis_of_results 1
Contact_us {'weight': 2}
Download_the_needed_files 0
New_state 1
CLI {'weight': 2}
Detect_python_with_non-standard_name 1
Force_new_detection_even_if_python_is_already_found_and_cached {'weight': 2}
Force_new_detection_even_if_python_is_already_found_and_cached 0
Using_Docker 1
Future_work {'weight': 2}
Future_work 0
Private_challenges 1
Copyright {'weight': 2}
Copyright 0
CK_components_can_be_found_at 3
Author {'weight': 1}
Status {'weight': 1}
Minimal_CK_installation {'weight': 1}
Author 0
Option_2_-_Execute_the_whole_ML_pipeline_from_a_Python_script_ 1
_dart__Dashboard {'weight': 1}
_dart__Dashboard 0
🗺_Overview 1
🖥_Run_the_example {'weight': 2}
🖥_Run_the_example 0
▶️_Run_the_Code 1
CLI_Commands_for_the_Label_Studio_Integration {'weight': 2}
CLI_Commands_for_the_Label_Studio_Integration 0
🧽_Clean_up 1
📜_Learn_more {'weight': 2}
📜_Learn_more 0
SOON_*_We_also_recommend_you_check_out_our 1
🧰_How_the_example_is_implemented {'weight': 1}
🧰_How_the_example_is_implemented 1
🖥_Run_it_locally {'weight': 1}
🖥_Run_it_locally 0
ZenML_Test_Environments 1
The_ZenML_Test_CLI {'weight': 1}
The_ZenML_Test_CLI 0
2.3_Copyright_license_back_to_You 1
3._Patents {'weight': 1}
3._Patents 0
3.2_Revocation_of_patent_license 1
4._License_obligations_by_Us {'weight': 1}
4._License_obligations_by_Us 0
8.3_In_the_event_of_a_termination_of_this_Agreement_Sections_5., 1
9._Miscellaneous {'weight': 1}
9._Miscellaneous 0
Building_the_API_Docs_locally 1
Contributors {'weight': 1}
Contributors 0
the_server* 1
up_a_local_ZenML_Server* {'weight': 1}
up_a_local_ZenML_Server* 0
to_a_pre-existing_server* 1
your_deployed_server_details* {'weight': 1}
your_deployed_server_details* 1
The_ZenML_Dashboard_is_now_available {'weight': 1}
The_ZenML_Dashboard_is_now_available 0
👣_How_to_migrate_your_Profiles 1
Decoupling_Stack_Component_configuration_from_implementation {'weight': 1}
Decoupling_Stack_Component_configuration_from_implementation 0
to_migrate*__Rename_all_references_to_=Repository=_in_your_code_to 1
The_=BaseStepConfig=_class_is_now_called_=BaseParameters= {'weight': 1}
The_=BaseStepConfig=_class_is_now_called_=BaseParameters= 0
to_migrate*__Rename_all_references_to_=BaseStepConfig=_in_your_code 1
Configuration_Rework {'weight': 1}
Configuration_Rework 0
the_=enable_xxx=_decorators* 1
to_migrate*__Simply_remove_the_decorator_and_pass_something_like {'weight': 1}
to_migrate*__Simply_remove_the_decorator_and_pass_something_like 0
=pipeline.with_config(...)=* 1
to_migrate*__Replaced_with_the_new_=pipeline.run(config_path=...)=. {'weight': 1}
to_migrate*__Replaced_with_the_new_=pipeline.run(config_path=...)=. 0
=step.with_return_materializer(...)=* 1
to_migrate*__Simply_remove_the_=with_return_materializer=_method {'weight': 1}
to_migrate*__Simply_remove_the_=with_return_materializer=_method 0
is_now_renamed_to_=DockerSettings=* 1
to_migrate*__Rename_=DockerConfiguration=_to_=DockerSettings=_and {'weight': 1}
to_migrate*__Rename_=DockerConfiguration=_to_=DockerSettings=_and 0
is_now_renamed_to_=ResourceSettings=* 1
to_migrate*__Rename_=ResourceConfiguration=_to_=ResourceSettings= {'weight': 1}
to_migrate*__Rename_=ResourceConfiguration=_to_=ResourceSettings= 0
the_=requirements=_and_=required_integrations=_parameters* 1
to_migrate*__Simply_remove_the_parameters_and_use_the {'weight': 1}
to_migrate*__Simply_remove_the_parameters_and_use_the 1
new_pipeline_intermediate_representation* {'weight': 1}
new_pipeline_intermediate_representation* 0
to_migrate*__If_you_have_written_a 1
=PipelineSpec=_now_uniquely_defines_pipelines {'weight': 1}
=PipelineSpec=_now_uniquely_defines_pipelines 0
to_migrate*__No_code_changes,_but_rather_keep_in_mind_the_behavior 1
New_post-execution_workflow {'weight': 1}
New_post-execution_workflow 0
to_migrate*__Replace_all_post-execution_workflows_from_the_paradigm 1
📡Future_Changes {'weight': 1}
📡Future_Changes 0
GCR_container_registry 1
Authentication_Methods {'weight': 1}
Authentication_Methods 2
Caveats {'weight': 1}
How_do_you_use_it? {'weight': 5}
GCP_OAuth_2.0_token 1
Auto-configuration {'weight': 1}
Auto-configuration 0
Local_and_remote_availability 1
Register_Service_Connectors {'weight': 1}
Register_Service_Connectors 0
Service_Connector_Verification 1
Configure_local_clients {'weight': 1}
Configure_local_clients 0
ACR_container_registry 1
Authentication_Methods {'weight': 1}
Azure_Access_Token 1
Auto-configuration {'weight': 1}
ECR_container_registry 1
Authentication_Methods {'weight': 1}
AWS_Federation_Token 1
Auto-configuration {'weight': 1}
Base_Abstraction_3__=Flavor= 1
Implementing_a_Custom_Stack_Component_Flavor {'weight': 2}
Implementing_a_Custom_Stack_Component_Flavor 0
Interactive_stack_deployment 1
Displaying_Terraform_outputs_for_stacks_deployed_with_mlstacks {'weight': 1}
Displaying_Terraform_outputs_for_stacks_deployed_with_mlstacks 0
Container_Registry 1
7)_Create_Stack {'weight': 2}
7)_Create_Stack 1
And_you're_already_done! {'weight': 2}
And_you're_already_done! 0
Trackers* 1
Stores* {'weight': 1}
Stores* 0
Registries* 1
Other_configuration {'weight': 1}
Other_configuration 0
Model_Registry_Flavors 1
How_to_use_it {'weight': 2}
How_to_use_it 0
List_of_available_parameters 1
Register_models_via_the_CLI {'weight': 1}
Register_models_via_the_CLI 0
allow_you_to_send_messages_to_chat_services_(like_Slack, 1
Alerter_Flavors {'weight': 2}
Alerter_Flavors 0
DISCORD_TOKEN 1
How_to_Use_the_Discord_Alerter {'weight': 1}
How_to_Use_the_Discord_Alerter 0
Configuring_a_Custom_Seldon_Core_Secret* 1
How_do_you_use_it? {'weight': 1}
How_do_you_use_it? 0
Caveats 0
with_various_tools_for_each_category._Once_code_is 1
Available_integrations {'weight': 1}
Available_integrations 0
In_a_ZenML_Step 1
Secret_Schemas {'weight': 2}
Secret_Schemas 0
Configuration_use-case__GCP_Service_Connector_with_different 1
Configuring_the_stack {'weight': 1}
Configuring_the_stack 0
to_delete_a_scheduled_pipeline* 1
Additional_configuration {'weight': 1}
Additional_configuration 0
Infrastructure_Deployment 2
How_to_use_it {'weight': 7}
How_to_find_the_registry_URI {'weight': 1}
job_->_S3* 1
Enabling_CUDA_for_GPU-backed_hardware {'weight': 1}
Enabling_CUDA_for_GPU-backed_hardware 1
Important_Note_for_Multi-Tenancy_Deployments {'weight': 1}
Important_Note_for_Multi-Tenancy_Deployments 0
Build_your_own_custom_orchestrator 1
Implementation_guide {'weight': 1}
Implementation_guide 0
How_to_find_the_registry_URI 0
repository_instead,_you'll_have_to 1
How_to_find_the_registry_URI {'weight': 1}
container_registry_or_when_using_a_remote_container_registry 1
Local_registry_URI_format {'weight': 1}
Local_registry_URI_format 0
Advanced_Configuration 1
How_do_you_use_it? {'weight': 2}
Artifact_Store_Flavors 1
How_to_use_it {'weight': 2}
effect_on_the_=zenml.io.fileio=* 1
Build_your_own_custom_artifact_store {'weight': 1}
Build_your_own_custom_artifact_store 0
Warning 1
Stack_Component__=KubernetesSparkStepOperator= {'weight': 1}
Stack_Component__=KubernetesSparkStepOperator= 0
Configuring_RBAC 1
How_to_use_it {'weight': 1}
Call_Evidently_directly 1
Visualizing_Evidently_Reports {'weight': 1}
Visualizing_Evidently_Reports 0
Data_Validator_Flavors 1
How_to_use_it {'weight': 2}
Call_whylogs_directly 1
Visualizing_whylogs_Profiles {'weight': 1}
Visualizing_whylogs_Profiles 0
Experiment_Tracker_Flavors 1
How_to_use_it {'weight': 2}
over_*pipeline-level*_defined_hooks._{%_endhint_%} 1
Accessing_step_information_inside_a_hook {'weight': 1}
Accessing_step_information_inside_a_hook 0
Supported_orchestrators 1
Stopping/pausing_a_scheduled_run {'weight': 1}
Stopping/pausing_a_scheduled_run 0
Step_output_names 1
Configure_steps/pipelines {'weight': 1}
Configure_steps/pipelines 0
and_caching* 2
and_caching* {'weight': 1}
Pass_any_kind_of_data_to_your_steps {'weight': 1}
Pass_any_kind_of_data_to_your_steps 0
artifacts*_can_be_used_to_pass_values_to_steps_that_are 1
Using_a_custom_step_invocation_ID {'weight': 1}
Using_a_custom_step_invocation_ID 0
Enable_or_disable_logs_storing 1
Settings_in_ZenML {'weight': 1}
Settings_in_ZenML 0
objects_or_dicts* 1
Utilizing_the_settings {'weight': 1}
Utilizing_the_settings 0
Storing_and_retrieving_the_artifact 1
(Optional)_How_to_Visualize_the_Artifact {'weight': 1}
(Optional)_How_to_Visualize_the_Artifact 0
(Optional)_Which_Metadata_to_Extract_for_the_Artifact 1
Usage {'weight': 1}
Configuring_materializers_at_runtime 1
Basic_example {'weight': 1}
Basic_example 0
Interaction_with_custom_artifact_stores 0
Example_ 1
Visualization_via_Materializers {'weight': 1}
Visualization_via_Materializers 0
Example__Facets_Data_Skew_Visualization 1
Custom_Class*_The {'weight': 1}
Custom_Class*_The 0
Step*_There_are_three_different_steps_in_the_=facets=_integration 1
Disabling_Visualizations {'weight': 1}
Disabling_Visualizations 0
Additional_logs* 1
Client_and_server_logs {'weight': 1}
Client_and_server_logs 0
Updated*__October_17,_2023 1
Suggestions_for_Resolving_Dependency_Conflicts {'weight': 1}
Suggestions_for_Resolving_Dependency_Conflicts 0
Stacks,_Infrastructure,_Authentication 1
Client_Methods {'weight': 1}
Client_Methods 0
Methods* 1
Methods* {'weight': 1}
Update,_and_Delete_Methods* 1
Active_User_and_Active_Stack {'weight': 1}
Active_User_and_Active_Stack 1
Resource_Models {'weight': 1}
Resource_Models 0
Speeding_up_Docker_builds_for_containerized_components 1
Registering_a_code_repository {'weight': 1}
Registering_a_code_repository 0
Tracking_code_version_for_pipeline_runs 1
Available_implementations {'weight': 1}
Available_implementations 0
GitLab 1
Developing_a_custom_code_repository {'weight': 1}
Developing_a_custom_code_repository 0
for_the_GPU_hardware_to_be_properly_utilized._If_you_don't 1
1._*Specify_a_CUDA-enabled_parent_image_in_your_=DockerSettings=* {'weight': 1}
1._*Specify_a_CUDA-enabled_parent_image_in_your_=DockerSettings=* 0
If_I_share_my_email,_will_you_spam_me? 1
Version_mismatch_(downgrading) {'weight': 1}
Version_mismatch_(downgrading) 0
Automate_build_reuse_by_connecting_a_code_repository 1
Customize_the_Docker_building {'weight': 1}
Customize_the_Docker_building 0
files_get_included* 1
Installing_additional_pip_dependencies_or_apt_packages {'weight': 1}
Installing_additional_pip_dependencies_or_apt_packages 0
What_is_already_built_in? 1
How_do_I_use_it? {'weight': 1}
How_do_I_use_it? 0
that_allows_you_to_fetch_or_reference_them_in_your_pipelines_and 1
Centralized_secrets_store {'weight': 2}
Centralized_secrets_store 0
register_missing_secrets_for_your_stack* 1
Set_scope_for_secrets {'weight': 1}
Set_scope_for_secrets 0
Recap 0
Deploying_a_ZenML_Server 1
Using_the_ZenML_CLI_to_connect_to_a_deployed_ZenML_Server {'weight': 1}
Using_the_ZenML_CLI_to_connect_to_a_deployed_ZenML_Server 0
This_simply_means_that_any_pipeline_you_run_will_be_using_the 1
stack*_as_its_environment._{%_endhint_%}_{%_endtab_%}_{%_endtabs {'weight': 1}
stack*_as_its_environment._{%_endhint_%}_{%_endtab_%}_{%_endtabs 1
Components_of_a_stack {'weight': 1}
Components_of_a_stack 0
store*. 1
Orchestrator {'weight': 1}
Orchestrator 0
store*_and_then_loaded_from_there_when_the_next_step_needs 1
Registering_a_stack {'weight': 1}
Registering_a_stack 0
List_Pipelines_via_CLI 1
Runs {'weight': 1}
Runs 0
Component-Specific_Metadata 1
Steps {'weight': 1}
Steps 0
Step_Information 1
Artifacts {'weight': 1}
Artifacts 0
Artifact_Visualizations 1
Code_Example {'weight': 1}
Code_Example 0
set_caching_to_=False=_on_steps_that_depend_on_*external 1
Configuring_caching_behavior_of_your_pipelines {'weight': 1}
Configuring_caching_behavior_of_your_pipelines 0
is_a_Python_package_that_can_be_installed_directly_via_=pip=_ 1
Install_with_the_dashboard {'weight': 1}
Install_with_the_dashboard 0
is_an_extensible,_open-source_MLOps_framework_for_creating 1
1._Development {'weight': 1}
1._Development 0
Parameters_&_Settings 1
2._Execution {'weight': 1}
2._Execution 0
tailored_to_specific_use_cases/tools._With_ZenML_installed, 1
Stack_Switching {'weight': 1}
Stack_Switching 1
3._Management {'weight': 1}
3._Management 0
it_should_use,_the_*default_user_details,*_and_more._The 1
Secret_store_environment_variables {'weight': 1}
Secret_store_environment_variables 0
Advanced_server_configuration_options 1
Run_the_ZenML_server_with_Docker {'weight': 1}
Run_the_ZenML_server_with_Docker 0
ZenML_server_with_=docker-compose= 1
Troubleshooting {'weight': 1}
Troubleshooting 4
Apply_Perf_Optmization_(AGX_and_NX_applicable) {'weight': 6}
Setup_the_Jetson_Orin_NX_System {'weight': 2}
Apply_Perf_Optmization_for_AGX/NX {'weight': 1}
Apply_Perf_Optmization {'weight': 9}
Optional_cluster_services 1
ZenML_Helm_Installation {'weight': 1}
ZenML_Helm_Installation 0
Connect_to_the_deployed_ZenML_server 1
ZenML_Helm_Deployment_Scenarios {'weight': 1}
ZenML_Helm_Deployment_Scenarios 0
Use_a_DNS_service_to_map_a_different_hostname_to_the_Ingress 1
Secret_Backends {'weight': 1}
Secret_Backends 0
Having_an_existing_NGINX_Ingress_Controller 1
Existing_hosted_SQL_database {'weight': 1}
Existing_hosted_SQL_database 1
Configuration_file_templates {'weight': 1}
Configuration_file_templates 0
Cloud-specific_settings 1
Connecting_to_deployed_ZenML {'weight': 1}
Connecting_to_deployed_ZenML 0
🚨_Reporting_a_Vulnerability 1
Coding_Conventions {'weight': 1}
Coding_Conventions 0
A_private,_written_warning_from_community_leaders, 1
2._Warning {'weight': 1}
2._Warning 0
A_warning_with_consequences_for_continued_behavior._No 1
3._Temporary_Ban {'weight': 1}
3._Temporary_Ban 0
A_temporary_ban_from_any_sort_of_interaction_or_public 1
4._Permanent_Ban {'weight': 1}
4._Permanent_Ban 0
A_permanent_ban_from_any_sort_of_public_interaction 1
Attribution {'weight': 1}
Attribution 0
document._-_[_]_If_my_change_requires_a_change_to 1
Types_of_changes {'weight': 1}
Changelog*_ 55
0.45.4 {'weight': 1}
0.45.3 {'weight': 1}
0.45.2 {'weight': 1}
0.44.3 {'weight': 1}
0.44.1 {'weight': 1}
0.43.0 {'weight': 1}
0.42.1 {'weight': 1}
0.42.0 {'weight': 1}
0.41.0 {'weight': 1}
0.40.3 {'weight': 1}
0.40.2 {'weight': 1}
0.40.1 {'weight': 1}
0.40.0 {'weight': 1}
0.39.1 {'weight': 1}
0.39.0 {'weight': 1}
0.38.0 {'weight': 1}
0.37.0 {'weight': 1}
0.36.1 {'weight': 1}
0.36.0 {'weight': 1}
0.35.1 {'weight': 1}
0.35.0_(YANKED) {'weight': 1}
0.34.0 {'weight': 1}
0.33.0 {'weight': 1}
0.32.1 {'weight': 1}
0.32.0 {'weight': 1}
0.31.1 {'weight': 1}
0.31.0 {'weight': 1}
0.30.0 {'weight': 1}
0.23.0 {'weight': 1}
0.22.0 {'weight': 1}
0.21.1 {'weight': 1}
0.21.0 {'weight': 1}
0.20.5 {'weight': 1}
0.20.4 {'weight': 1}
0.20.3 {'weight': 1}
0.20.2 {'weight': 1}
0.20.0_/_0.20.1 {'weight': 1}
0.13.2 {'weight': 1}
0.13.1 {'weight': 1}
0.13.0 {'weight': 1}
0.12.0 {'weight': 1}
0.11.0 {'weight': 1}
0.10.0 {'weight': 1}
0.9.0 {'weight': 1}
0.8.1 {'weight': 1}
0.8.0 {'weight': 1}
0.7.2 {'weight': 1}
0.7.1 {'weight': 1}
0.6.3 {'weight': 1}
New_Features {'weight': 1}
0.5.5 {'weight': 1}
0.5.4 {'weight': 1}
0.5.3 {'weight': 1}
0.5.2 {'weight': 1}
0.5.1 {'weight': 1}
0.45.4 0
If_you_upgraded_to_ZenML_v0.45.2_or_v0.45.3_and_are 1
What's_Changed {'weight': 1}
What's_Changed 3
0.44.0 {'weight': 1}
0.7.0 {'weight': 1}
0.6.1 {'weight': 1}
0.45.3 0
If_you_upgraded_to_ZenML_v0.45.2_and_are_experiencing 1
What's_Changed {'weight': 1}
0.45.2 0
This_change_disrupts_existing_pipeline_schedules._After 1
Performance_enhancements_(#3207) {'weight': 1}
Performance_enhancements_(#3207) 0
0.44.3 0
Changelog*__https_//github.com/zenml-io/zenml/compare/0.44.2...tes 1
0.44.2 {'weight': 1}
0.44.2 0
0.44.1 0
/0.44.0_was_removed_from_pypi_due_to_an_issue_with_the_alembic 1
What's_Changed {'weight': 1}
0.44.0 0
0.43.0 0
0.42.1 0
Disable_Implicit_Auth_Methods_for_Service_Connectors_by_Default 1
What's_Changed {'weight': 1}
0.42.0 0
Dependency_and_Integration_Version_Updates 1
What's_Changed {'weight': 1}
0.41.0 0
0.40.3 0
0.40.2 0
0.40.1 0
0.40.0 0
0.39.1 0
0.39.0 0
0.38.0 0
0.37.0 0
it_is_not_recommended_to_continue_using_MLflow_older_than 1
Breaking_Changes {'weight': 1}
Breaking_Changes 1
Changes_in_D3_5.0 {'weight': 1}
0.36.1 0
0.36.0 0
0.35.1 0
/This_release_replaces_the_previous_0.35.0_release_that_was 1
Breaking_Changes {'weight': 1}
0.35.0_(YANKED) 0
0.34.0 0
0.33.0 0
0.32.1 0
0.32.0 0
0.31.1 0
0.31.0 0
0.30.0 0
0.23.0 0
0.22.0 0
0.21.1 0
0.21.0 0
0.20.5 0
0.20.4 0
0.20.3 0
0.20.2 0
0.20.0_/_0.20.1 0
0.13.2 0
0.13.1 0
0.13.0 0
0.12.0 0
0.11.0 0
0.10.0 0
0.9.0 0
0.8.1 0
0.8.0 0
🙌_Community_Contributions 1
0.7.3 {'weight': 1}
0.7.3 0
0.7.2 0
0.7.1 0
0.7.0 0
0.6.3 0
New_Contributors 1
0.6.2 {'weight': 1}
0.6.2 0
0.6.1 0
What's_changed 1
0.6.0 {'weight': 1}
0.6.0 0
➕_Other_updates,_additions_and_fixes 1
0.5.7 {'weight': 1}
0.5.7 0
New_Features 0
0.5.5 0
0.5.4 0
0.5.3 0
0.5.2 0
0.5.1 0
Overview 1
0.5.0 {'weight': 1}
0.5.0 0
What_to_expect_in_the_next_weeks_and_the_new_ZenML 2
0.5.0rc2 {'weight': 1}
0.3.7.1 {'weight': 1}
0.5.0rc2 0
0.3.7.1 0
Bug_Fixes_+_Refactor 4
0.3.7 {'weight': 1}
0.3.6 {'weight': 1}
0.3.5 {'weight': 1}
0.3.4 {'weight': 1}
0.3.7 0
0.3.6 0
0.3.5 0
0.3.4 0
👭_4._Start_the_Dashboard 1
🗺_Roadmap {'weight': 1}
🗺_Roadmap 0
Install_dependencies 2
CLI {'weight': 1}
Installation {'weight': 2}
Import_in_all_the_right_places 1
Step_4__Create_a_PR_and_celebrate__tada_ {'weight': 1}
Step_4__Create_a_PR_and_celebrate__tada_ 0
Install_the_Chart 1
Configuration {'weight': 1}
Advanced_Options 1
Telemetry {'weight': 1}
Telemetry 0
Authentication_for_Google_Cloud_Container_Registry 1
Installation {'weight': 1}
Trigger_build_and_push_of_images_on_other_branch 1
GCP_Data_and_Experiment_Integration {'weight': 1}
GCP_Data_and_Experiment_Integration 0
Saving_Experiments_to_GCP 1
Getting_Information_from_a_Container {'weight': 1}
Getting_Information_from_a_Container 0
Mounting_Local_Repository 1
Submitting_PRs {'weight': 1}
Submitting_PRs 0
Other_Info 1
ToDo {'weight': 1}
ToDo 0
for_NVIDIA_GPU_set_up*__You_may_have_to_install_the 1
Building_Docker_Image {'weight': 1}
Building_Docker_Image 0
Using_Singularity/Apptainer_instead_of_Docker 1
Getting_Started {'weight': 1}
Getting_Started 0
Rules 0
Shared_data_pipelines_between_JAX_and_PyTorch 1
FAQS {'weight': 1}
FAQS 0
How_do_I_run_this_on_my_SLURM_cluster? 1
Submissions {'weight': 1}
Submissions 0
Can_submission_be_structured_using_multiple_files? 1
Citing_AlgoPerf_Benchmark {'weight': 1}
Citing_AlgoPerf_Benchmark 0
Start_tmux_session_(Recommended) 1
Datasets {'weight': 1}
WMT 1
FastMRI {'weight': 1}
FastMRI 0
Librispeech 0
Coding_your_submission 1
Run_your_submission {'weight': 1}
Run_your_submission 0
to_score_your_submission_on_a_workload,_from_the 1
Pytorch_DDP {'weight': 1}
Pytorch_DDP 1
Run_your_submission_in_a_Docker_container {'weight': 1}
Run_your_submission_in_a_Docker_container 0
Docker_Tips 1
Score_your_submission {'weight': 1}
Score_your_submission 0
0.0.16_/(Last_updated_28_April_2023)/ 1
Introduction {'weight': 1}
Introduction 0
Submission_functions 0
Data_selection 1
Evaluation_during_training {'weight': 1}
Evaluation_during_training 0
Software_dependencies 1
Tuning {'weight': 1}
Tuning 0
To_estimate_the_variance_of_the_results,_this_tuning_will_be 1
Self-tuning_ruleset {'weight': 1}
Self-tuning_ruleset 1
Workloads {'weight': 1}
Workloads 0
Qualification_set 1
Scoring {'weight': 1}
Scoring 0
Alternative_scores 1
Benchmark_Procedure {'weight': 1}
Benchmark_Procedure 0
Requesting_Additional_Baselines 1
Licensing {'weight': 1}
Licensing 0
Awards_and_prize_money 1
Model_Track {'weight': 1}
Model_Track 0
Part_1._Concurrent_inference_and_dynamic_batching 0
Expected_output 1
Demonstration_case_2__Dynamic_batching {'weight': 1}
Demonstration_case_2__Dynamic_batching 0
GRPC_Options 0
In-Process_Triton_Server_API 0
Inference_APIs 1
Java_bindings_for_In-Process_Triton_Server_API {'weight': 1}
Java_bindings_for_In-Process_Triton_Server_API 0
CPU-only_container_composition 1
Build_it_yourself {'weight': 1}
Build_it_yourself 0
CPU-Only_Build 1
Building_Without_Docker {'weight': 1}
Building_Without_Docker 0
Building_for_JetPack_4.x 0
Extract_Build_Artifacts 1
Building_on_Unsupported_Platforms {'weight': 1}
Building_on_Unsupported_Platforms 0
Development_Build_of_Backend_or_Repository_Agent 1
Building_with_Debug_Symbols {'weight': 1}
Building_with_Debug_Symbols 0
The_repository_agent_API_is_beta_quality_and_is_subject_to 1
Using_a_Repository_Agent {'weight': 1}
Using_a_Repository_Agent 0
to_Triton_Inference_Server?*_Make_use_of 2
*Installation* {'weight': 1}
Serve_a_Model_in_3_Easy_Steps {'weight': 1}
*Installation* 0
Inference_Request/Response_Cache 1
Model_Pipeline {'weight': 1}
Model_Pipeline 1
*Resources* {'weight': 1}
*Resources* 0
Example_Request 1
Generate_Response_JSON_Object {'weight': 1}
Generate_Response_JSON_Object 0
Example_Response 1
Generate_Response_JSON_Error_Object {'weight': 1}
Generate_Response_JSON_Error_Object 0
Example_Usage 1
GRPC {'weight': 1}
GRPC 0
Statistics_Response_JSON_Error_Object 1
GRPC {'weight': 1}
Unregister 2
CUDA_Shared_Memory {'weight': 2}
GRPC {'weight': 1}
CUDA_Shared_Memory 0
Trace_Setting_Request_JSON_Object 1
GRPC {'weight': 1}
Raw_Binary_Request 0
Unload 1
GRPC {'weight': 1}
Pending_Request_Count_(Queue_Size)_Per-Model 1
Latencies {'weight': 1}
Latencies 0
Summaries 1
GPU_Metrics {'weight': 1}
GPU_Metrics 0
Triton-reported_Response_Cache_Metrics 1
Custom_Metrics {'weight': 1}
Custom_Metrics 0
this_your_first_time_setting_up_a_model_repository?*_Check_out 1
Repository_Layout {'weight': 1}
Repository_Layout 0
sure,_that_=TRITON_GCS_MOUNT_DIRECTORY=_exists_on_your_local 1
S3 {'weight': 1}
S3 0
sure,_that_=TRITON_AWS_MOUNT_DIRECTORY=_exists_on_your_local 1
Azure_Storage {'weight': 1}
Azure_Storage 0
sure,_that_=TRITON_AZURE_MOUNT_DIRECTORY=_exists_on_your_local 1
Cloud_Storage_with_Credential_file_(Beta) {'weight': 1}
Cloud_Storage_with_Credential_file_(Beta) 0
Caching_of_Cloud_Storage 1
Model_Versions {'weight': 1}
Model_Versions 0
Python_model_using_Python_Backend 1
Deploying_Decoupled_Models {'weight': 1}
Deploying_Decoupled_Models 0
this_your_first_time_writing_a_config_file?*_Check_out 1
Minimal_Model_Configuration {'weight': 1}
Minimal_Model_Configuration 0
Decoupled 1
Maximum_Batch_Size {'weight': 1}
Maximum_Batch_Size 0
of_Tensors_as_Input_/* 1
Auto-Generated_Model_Configuration {'weight': 1}
Auto-Generated_Model_Configuration 0
Default_Max_Batch_Size_and_Dynamic_Batcher 1
Datatypes {'weight': 1}
Datatypes 0
Priority 1
Ensemble_Model_Instance_Groups {'weight': 1}
Ensemble_Model_Instance_Groups 1
CUDA_Compute_Capability {'weight': 1}
CUDA_Compute_Capability 0
Custom_Batching 1
Sequence_Batcher {'weight': 1}
Sequence_Batcher 0
Ensemble_Scheduler 1
Optimization_Policy {'weight': 1}
Optimization_Policy 0
When_building_Triton_on_Jetson,_you_will_require_a_recent 1
Runtime_Dependencies_for_Triton {'weight': 1}
Runtime_Dependencies_for_Triton 0
Model_Instances 1
Framework-Specific_Optimization {'weight': 1}
Framework-Specific_Optimization 0
TensorFlow_Automatic_FP16_Optimization 1
NUMA_Optimization {'weight': 1}
NUMA_Optimization 0
Other_Areas_of_Interest 1
End-to-end_Example {'weight': 1}
End-to-end_Example 0
gRPC_Endpoint 1
Handling_in_Triton_Core {'weight': 1}
Handling_in_Triton_Core 0
Currently,_Triton_core_does_not_detect_cancellation_status_of_a 1
Handling_in_Backend {'weight': 1}
Handling_in_Backend 0
Initializing_State_from_File 1
Scheduling_Strategies {'weight': 1}
Scheduling_Strategies 0
Oldest 1
Ensemble_Models {'weight': 1}
Ensemble_Models 0
the_following_flags_are_*deprecated*_ 1
Supported_Trace_Level_Option {'weight': 1}
Supported_Trace_Level_Option 0
3._Build_with_Debug_Flags* 1
Specific_Issues {'weight': 1}
Specific_Issues 0
Symbols* 1
Server_Issues {'weight': 1}
Server_Issues 0
Deadlock 1
Client_Issues {'weight': 1}
Client_Issues 0
Performance_Profiling 1
Submitting_an_Issue {'weight': 1}
Submitting_an_Issue 0
Custom_Cache 1
Deprecation_Notes {'weight': 1}
Deprecation_Notes 0
There_is_no_synchronization_between_when_Triton_polls_the 1
Modifying_the_Model_Repository {'weight': 1}
Modifying_the_Model_Repository 0
to_Triton_Inference_Server_and_want_do_just_deploy_your_model 1
Create_A_Model_Repository {'weight': 1}
Create_A_Model_Repository 0
Verify_Triton_Is_Running_Correctly 1
Send_an_Inference_Request {'weight': 1}
Send_an_Inference_Request 0
A_clear_and_concise_description_of_what_the_bug_is. 1
Information*_What_version_of_Triton_are_you_using? {'weight': 1}
Information*_What_version_of_Triton_are_you_using? 1
Reproduce*_Steps_to_reproduce_the_behavior. {'weight': 1}
Reproduce*_Steps_to_reproduce_the_behavior. 0
RELEASE__You_are_currently_on_the_main_branch_which_tracks 1
to_Triton_Inference_Server?*_Make_use_of {'weight': 1}
Serve_a_Model_in_3_Easy_Steps 0
Client_Support_and_Examples 1
Extend_Triton {'weight': 1}
Extend_Triton 0
Additional_Documentation 1
Contributing {'weight': 1}
Contributing 0
A_demo_to_query_inception_model 1
Additional_Resources {'weight': 1}
Helm_v3 1
Model_Repository {'weight': 1}
Model_Repository 0
Helm_v2 1
Model_Repository {'weight': 2}
GCS_Permissions 1
Deploy_Prometheus_and_Grafana {'weight': 1}
Deploy_Prometheus_and_Grafana 0
AWS_Model_Repository 2
Deploy_Prometheus_and_Grafana {'weight': 1}
Deploy_the_Triton_Inference_Server {'weight': 1}
Supported_flavors 1
Requirements {'weight': 1}
Triton_flavor 1
Deploy_models_tracked_in_MLflow_to_Triton {'weight': 1}
Deploy_models_tracked_in_MLflow_to_Triton 0
Perform_inference 1
MLflow_Deployments {'weight': 1}
MLflow_Deployments 0
Deploy_the_Triton_Inference_Server 0
Prometheus_ServiceMonitor_Support 1
Using_Triton_Inference_Server {'weight': 1}
Using_Triton_Inference_Server 0
Known_Issues 0
Of_Contents*_-_[[#models][Models]]_- 1
Models {'weight': 1}
Status 0
Only_original_source_code_from_you_and_other_people_that_have 1
Contributing_code {'weight': 6}
Contributing_code 0
Client_side 1
bert-99.9 {'weight': 4}
bert-99.9 0
the_MLPerf_Inference_container*,_launch_a_Python_console_and_run 1
NVIDIA_DGX_Stations,_this_method_will_fail*,_since_the_Mellanox_NICs {'weight': 25}
NVIDIA_DGX_Stations,_this_method_will_fail*,_since_the_Mellanox_NICs 0
stopping*__under_the_new_rules,_/min_query_count/_is_no_longer_a 1
Fixing_INVALID_results {'weight': 25}
refer_to_/closed/NVIDIA_for_detailed_instructions_for_NVIDIA_GPU 2
H3C_Submission_Systems {'weight': 1}
Fujitsu_Submission_Systems {'weight': 1}
H3C_Submission_Systems 0
contains_RetinaNetNMS_PVA_kernel 1
NMSPVAPlugin___Sample_application_to_demonstrate_how_to_use_this {'weight': 14}
NMSPVAPlugin___Sample_application_to_demonstrate_how_to_use_this 0
Aarch64-Linux_or_Tegra-Linux_Specific_Paths 1
Steps_to_build_the_standalone_plugin {'weight': 14}
Steps_to_build_the_standalone_plugin 1
MACROS_in_the_NMSPVAPlugin {'weight': 14}
MACROS_in_the_NMSPVAPlugin 0
for_DLRMv2*,_the_dataset_is_quite_large._We_recommend 1
that_once_the_scratch_space_is_setup_and_all_the_data,_models,_and {'weight': 6}
Download_the_datasets 0
Downloading_the_model_files 0
the_above_steps_(/Download_the_datasets,_Downloading_the_model 1
Setting_up_the_DLRMv2_Scratch_Space {'weight': 6}
Setting_up_the_DLRMv2_Scratch_Space 0
Launching_the_environment_on_datacenter/desktop_systems 0
Launching_the_environment_on_Jetson_Orin_systems 0
measurements,_and_systems_directories_in_your_submission*_for 1
later,_you_wish_to_remove_a_system*,_simply_edit_this_file_and {'weight': 22}
later,_you_wish_to_remove_a_system*,_simply_edit_this_file_and 0
this_webpage_has_not_yet_been_finalized,_so_the 1
Instructions_for_Auditors {'weight': 22}
you_proceed_to_try_to_build_and_run_from_this_directory,_it_is 1
Running {'weight': 2}
Running 1
Loading_and_processing_traces {'weight': 2}
Power_Regulator_Settings__OS_Control_Mode 1
Fans {'weight': 1}
Fans 0
Thermal_Configuration__Optimal_Cooling 1
Maximum_Frequency {'weight': 1}
Maximum_Frequency 0
Setup_with_docker_image 1
Run_Benchmarks {'weight': 3}
option_2__pull_docker 1
convert_dataset_and_model {'weight': 23}
convert_dataset_and_model 0
Steps_to_run_RNN-T_with_three_options 0
2._End-to-end_run_inference 1
Option_2__Build_docker_container {'weight': 32}
Option_2__Build_docker_container 0
Run_Benchmarks_with_Int8 1
Docker_Instructions {'weight': 16}
Docker_Instructions 0
Build 1
Setup_Instructions_-_Docker {'weight': 25}
Setup_Instructions_-_Docker 0
Quantize_Torchscript_Model_and_Check_Accuracy 1
Run_Benchmark_(Common_for_Docker_&_Baremetal) {'weight': 25}
Run_Benchmark_(Common_for_Docker_&_Baremetal) 0
3.b_Option_3__pull_docker 1
4._Run_command_for_accuracy_and_performance {'weight': 13}
4._Run_command_for_accuracy_and_performance 0
Preprocess_Data 1
Run_the_Benchmark {'weight': 7}
Run_the_Benchmark 1
Get_Started_with_ResNet50 {'weight': 4}
Get_the_Results 6
Get_started_with_BERT {'weight': 7}
Get_started_with_DLRM2 {'weight': 4}
Get_Started_with_Retinanet {'weight': 7}
Complinace_Test {'weight': 1}
Get_started_with_DLRM {'weight': 3}
Get_Started_with_ResNet50 {'weight': 3}
Get_started_with_BERT 0
Convert_Dataset_and_Model 1
Run_the_Benchmark {'weight': 7}
Get_started_with_DLRM2 0
Login_to_Docker_Container 2
Preprocess_model_and_dataset {'weight': 7}
Run_the_Benchmark {'weight': 7}
Preprocess_model_and_dataset 0
Calibrate_and_dump_int8_model 1
Run_the_Benchmark {'weight': 4}
Get_Started_with_ResNet50 0
Get_Started_with_Retinanet 0
Get_the_results 1
Get_Started_with_RNNT {'weight': 7}
Get_Started_with_RNNT 0
Steps_to_run_GPT-J 0
9._run 1
Docker {'weight': 2}
Launching_the_environment_on_Jetson_Orin_AGX/NX 0
power_measurement*_with_VF_configuration,_you_need_to_allow 1
Launching_the_environment_on_a_MIG_(Multi-Instance_GPU)_instance {'weight': 14}
Run_performance 1
Results {'weight': 4}
Download_dataset 1
Reproduce_results {'weight': 1}
Reproduce_results 0
generate_results_for_accuracy_and_performance_separately_add 1
FP8_flow {'weight': 1}
FP8_flow 0
refer_to_/closed/NVIDIA/README.md_for_detailed_instructions_for 1
Dell_Technologies_Submission_Systems {'weight': 1}
Dell_Technologies_Submission_Systems 0
Alternative_cross_compile_option 1
Troubleshooting {'weight': 18}
Apply_Perf_Optmization_(AGX_and_NX_applicable) 0
USB-C_Power_Adapters 5
Apply_Perf/W_Optmization_(only_AGX_applicable) {'weight': 6}
Download_Data,_Model_and_Preprocess_the_data {'weight': 5}
Running_a_Benchmark {'weight': 3}
Apply_Perf/W_Optmization_for_AGX {'weight': 1}
Apply_Perf/W_Optmization_for_NX {'weight': 1}
Apply_Perf/W_Optmization_(only_AGX_applicable) 0
Download_Data,_Model_and_Preprocess_the_data 0
the_datasets_for_inferences*_described_in 1
Running_a_Benchmark {'weight': 6}
Running_a_Benchmark 0
DF_Cstates__Auto 1
DF_Common_Options {'weight': 54}
NUMA_nodes_per_socket__NPS1 1
CPU_Common_Options {'weight': 1}
SMT_Control__Disable 3
Prefetcher_Settings {'weight': 1}
Management_Firmware_Settings {'weight': 2}
Global_C-state_Control__Enabled {'weight': 16}
Prefetcher_Settings 0
L2_Up/Down_Prefetcher__Auto 1
Core_Performance_Boost__Disable {'weight': 1}
Core_Performance_Boost__Disable 1
Management_Firmware_Settings {'weight': 1}
ResNet50_(6,900_RPM) 2
Power_Consumption_Settings {'weight': 1}
Maximum_Frequency {'weight': 1}
Power_Consumption_Settings 0
ResNet50_Server__Disabled 1
Maximum_Frequency {'weight': 1}
Redirect_scrubber_control__Auto 1
Memory_Addressing {'weight': 2}
Memory_Addressing 0
NUMA_nodes_per_socket__NPS4 1
CPU_Common_Options {'weight': 2}
Redirect_scrubber_control__Disabled 1
Memory_Addressing {'weight': 51}
ACPI_SRAT_L3_Cche_As_NUMA_Domain__Disabled 1
CPU_Common_Options {'weight': 51}
Global_C-state_Control__Enabled 1
Management_Firmware_Settings {'weight': 18}
BERT-99.9_and_ResNet50_(6,900_RPM) 1
Maximum_Frequency {'weight': 1}
Download_the_dataset_and_the_model 1
Running_your_first_benchmark {'weight': 1}
enter_closed/Azure*._From_now_on,_all_of_the_commands_detailed 1
Launching_the_environment_on_datacenter/desktop_systems {'weight': 1}
Further_reading 0
that_the_same_scale_factor_is_used_for_the_Q,_K,_and_V_output 1
Quantization_in_the_Open_Division_Submissions {'weight': 15}
Quantization_in_the_Open_Division_Submissions 0
enter_closed/ConnectTechInc*._From_now_on,_all_of_the_commands 1
Launching_the_environment {'weight': 1}
enter_closed/IEI*._From_now_on,_all_of_the_commands_detailed_in 1
Launching_the_environment {'weight': 1}
Complinace_Test 0
refer_to_/closed/Intel_for_detailed_instructions_for_Intel_CPU 2
Dell_Technologies_Submission_Systems {'weight': 3}
Dell_Technologies_Open_Submission_Systems {'weight': 1}
enter_closed/Dell*._From_now_on,_all_of_the_commands_detailed_in 1
Launching_the_environment_on_datacenter/desktop_systems {'weight': 1}
Fujitsu_Submission_Systems 0
your_system_is_not_listed_above_or_in 1
Running_your_first_benchmark {'weight': 1}
enter_closed/Nutanix*._From_now_on,_all_of_the_commands_detailed 1
Launching_the_environment {'weight': 1}
Adding_a_New_or_Custom_System 0
Setup_the_Jetson_Orin_NX_System 0
Flash_the_board 1
Apply_Perf_Optmization_(AGX_and_NX_applicable) {'weight': 2}
Apply_Perf_Optmization_for_AGX/NX 0
Apply_Perf/W_Optmization_for_AGX 0
Apply_Perf/W_Optmization_for_NX 0
Orin_NX_NVME_ASPM 1
Download_Data,_Model_and_Preprocess_the_data {'weight': 1}
This_method_augments_a_sample_library_to_a_device, 1
Configuring_the_server_is_facilitated_by_this_method,_which {'weight': 1}
Configuring_the_server_is_facilitated_by_this_method,_which 0
A_pivotal_function_responsible_for_forwarding_queries_to 1
Device_Management {'weight': 1}
Device_Management 0
This_virtual_method_necessitates_subclass_overrides_for 1
Allocation_management_for_input_or_output_data,_inclusive {'weight': 1}
Allocation_management_for_input_or_output_data,_inclusive 0
This_method_readies_input_data_for_inference,_involving 1
DeviceGptJ__Specialized_Device {'weight': 1}
DeviceGptJ__Specialized_Device 0
This_function_primarily_focuses_on_processing 1
This_method_spearheads_batch-based_inference,_utilizing {'weight': 1}
This_method_spearheads_batch-based_inference,_utilizing 0
Steps_to_calibrate_GPT-J 0
Dell_Technologies_Open_Submission_Systems 0
INT8_Quantization 1
Results {'weight': 3}
Benchmarks*._Implementation_of_DLRM_benchmarks_in_./bench 1
How_to_run_dlrm_code? {'weight': 1}
How_to_run_dlrm_code? 0
Other_operations 1
Tested_software_versions {'weight': 2}
Tested_software_versions 0
Arguments 10
Result_Summarizer_-_Computing_power_metric {'weight': 2}
closure_js_binary {'weight': 2}
phantomjs_test {'weight': 2}
closure_js_deps {'weight': 2}
closure_js_template_library {'weight': 2}
closure_java_template_library {'weight': 2}
closure_py_template_library {'weight': 2}
closure_css_binary {'weight': 2}
closure_js_proto_library {'weight': 2}
closure_proto_library {'weight': 2}
Result_Summarizer_-_Computing_power_metric 0
Computing_the_power_result 1
Step_by_step_examples {'weight': 2}
Step_by_step_examples 0
Check/clean_CM_cache 1
Add_CM_interface_for_new_projects_and_papers {'weight': 1}
Add_CM_interface_for_new_projects_and_papers 0
Reusability_using_MLCommons_CM_automation_language 1
Install_Python_virtual_environment_via_CM {'weight': 1}
Install_Python_virtual_environment_via_CM 0
About 1
 {'weight': 1}
View_MLPerf_inference_v3.1_result 1
 {'weight': 1}
Major_Features_and_Improvements 3
Release_1.0.0 {'weight': 1}
Release_0.2.2 {'weight': 1}
Release_0.1.0 {'weight': 1}
Release_1.0.0 0
Release_0.2.2 0
Bug_Fixes 2
Release_0.2.1 {'weight': 1}
Release_0.2.0 {'weight': 1}
Release_0.2.1 0
Release_0.2.0 0
Release_0.1.0 0
Start_the_Sax_GPU_model_server 1
Use_Sax {'weight': 1}
Use_Sax 0
Install_Python_packages_(in_user-space) 1
Prevent_running_out_of_memory {'weight': 5}
Prevent_running_out_of_memory 0
The_dependencies_are_needed_for_ 1
Install_via_=ck= {'weight': 1}
Install_via_=ck= 0
Use_(CUDA_8_and_GCC_5)_or_(CUDA_9_and_GCC_6). 1
Detect_Python,_Keras {'weight': 1}
Detect_Python,_Keras 0
Use_Python_3. 1
TensorFlow_[=x86_64=] {'weight': 1}
TensorFlow_[=x86_64=] 0
Use_Python_3,_(CUDA_8_and_GCC_5),_cuDNN_6. 1
TensorFlow_[build_from_sources] {'weight': 1}
TensorFlow_[build_from_sources] 0
Use_Java_1.8,_Bazel_0.8,_Python_3,_(CUDA_8_and_GCC_5)_or_(CUDA_9 1
YAD2K {'weight': 1}
YAD2K 0
The_model_is_currently_cloned_into_=${INSTALL_DIR}=,_which 1
Run_YAD2K_demo {'weight': 1}
Run_YAD2K_demo 0
Preprocess_the_calibration_dataset 1
Calibrate_the_model {'weight': 1}
Calibrate_the_model 0
Download_the_COCO_training_dataset 0
Select_the_calibration_dataset 0
Detect_a_pregenerated_profile 0
Describe_how_the_=--env.CK_ENABLE_BATCH=_flag_enables_the_choice 1
=ck_custom_preprocess=,_=ck_custom_preprocess_batch= {'weight': 1}
=ck_custom_preprocess=,_=ck_custom_preprocess_batch= 0
Input_Parameters* 1
=custom_tensorRT.py= {'weight': 1}
=custom_tensorRT.py= 0
Describe_how_the_=--env.CK_ENABLE_TENSORRT=_flag_enables_the 1
=load_graph_tensorrt_custom=_ {'weight': 1}
=load_graph_tensorrt_custom=_ 0
Hint_install_prebuilt_TensorFlow_via_pip_to_check_all_suitable 1
Prevent_running_out_of_memory {'weight': 1}
This_package_is_deprecated_by_=1.15.0=,_which_includes_additional 1
Unresolved_issues {'weight': 2}
Unresolved_issues 0
Cannot_build_for_Android_(hence_removed_patches) 1
Resolved_issues {'weight': 2}
Resolved_issues 1
Notes {'weight': 1}
To_use_machine-specific_build_options_(very_important_on_Raspberry 1
Unresolved_issues {'weight': 1}
Cannot_build_for_Android 1
Resolved_issues {'weight': 1}
For_official_MLPerf_Inference_submissions_on_50,000_images, 1
Variations {'weight': 2}
Variations 0
Equivalent_to_=all.500=_for_the_"min"_dataset. 1
MLPerf_Inference_option_1 {'weight': 2}
MLPerf_Inference_option_1 0
This_option_was_used_for_MLPerf_Inference_v0.5_by_Intel_and 1
MLPerf_Inference_option_2 {'weight': 2}
MLPerf_Inference_option_2 0
Unit-tests 0
=first.1=_and_=first.5=_use_a_file_list_(with_the_first_and_the 1
Accuracy_with {'weight': 2}
Accuracy_with 0
This_is_equivalent_to_ 2
Build-thread_variations {'weight': 1}
Known_issues {'weight': 1}
Build-thread_variations 0
gcc_5.4_is_required_on_Ubuntu_16.04,_see 1
Patch {'weight': 2}
Patch 0
On_25/Apr/2019_we_informed_Google_of_a_bug_in_their_converter, 1
Manual_instructions {'weight': 2}
Manual_instructions 0
Convert 1
Semi-automated_instructions {'weight': 2}
Semi-automated_instructions 0
Need_to_introduce_an_environment_variable_for_the_model 1
Convert {'weight': 2}
Update_with_manual_and_semi-automatic_instructions. 1
Regular_NMS {'weight': 2}
Regular_NMS 0
Backend_(CPU_and_GPU_acceleration)_tags_ 1
Examples_ {'weight': 2}
Examples_ 0
ImageNet_validation_dataset_(required_for_calibration) 1
Example_ {'weight': 1}
Using_Python_3_is_recommended. 1
Dependencies {'weight': 2}
We_now_have_=ck-env_package_lib-python-cython=_but_it_does_not 1
Build_warning {'weight': 2}
Build_warning 0
Refresh_all_CK_repositories_after_any_updates_(e.g. bug_fixes)_ 4
Build {'weight': 3}
Set_up_environment_variables {'weight': 4}
Build_(Linux_or_Windows) {'weight': 2}
Latest {'weight': 1}
See_the_quotes_magic_explained 1
Run_the_default_command {'weight': 2}
Run_the_default_command 0
Set_up_environment_variables 0
This_is_equivalent_to_the_default_run_command_ 2
Gory_details {'weight': 5}
ResNet,_int8,_15_samples_per_batch {'weight': 1}
Gory_details 1
Copy_the_results_to_a_machine_for_analysis {'weight': 5}
Copy_the_results_to_a_machine_for_analysis 0
You_may_need_to_run_commands_below_with_=sudo=,_unless_you 1
Prepare_repository {'weight': 1}
Prepare_repository 0
Build_(Linux_or_Windows) 0
Latest 0
Other_Dependencies 1
Programs {'weight': 1}
Programs 0
target_space_id,_is_character_level, 1
 {'weight': 2}
Data_ 0
Putting_it_all_together 1
Hyperparameters {'weight': 2}
Hyperparameters 0
Batching 1
Building_the_Model {'weight': 2}
Building_the_Model 0
Walkthrough 0
are_all_standardized_on_=TFRecord=_files_with 1
Problems_and_Modalities {'weight': 4}
Problems_and_Modalities 0
define_training-time_hyperparameters_for_the_dataset_and 1
Models {'weight': 4}
define_the_core_tensor-to-tensor_transformation, 1
Hyperparameter_Sets {'weight': 4}
Hyperparameter_Sets 0
sets*_are_defined_and_registered_in_code_with 1
Trainer {'weight': 4}
Trainer 1
Adding_your_own_components {'weight': 4}
Adding_your_own_components 0
CK_will_use_the_latest_ArmCL_instance_compiled_with_=ck_compile=. 1
Benchmarking_ArmCL-OpenCL_examples_(from_ArmCL_v18.0x) {'weight': 2}
Benchmarking_ArmCL-OpenCL_examples_(from_ArmCL_v18.0x) 0
CK_will_only_run_the_executable_once_(=--repetitions=1=) 1
Running_ArmCL-OpenCL_examples_(before_ArmCL_v18.0x) {'weight': 2}
Running_ArmCL-OpenCL_examples_(before_ArmCL_v18.0x) 0
You_may_want_to_install_the_profiler_from_the_following_package_ 1
Printing_help_messages {'weight': 2}
Printing_help_messages 0
Extract 0
Tags 1
Use {'weight': 1}
Use_=--target_os=android23-arm64=_to_build_for_Android_API_23 2
Weights_package {'weight': 1}
TensorFlow_models {'weight': 2}
Weights_package 2
Build {'weight': 1}
Compile {'weight': 1}
If_you_have_installed_the_COCO_or_KITTI_datasets_a_while_ago,_you 1
Run_the_program {'weight': 2}
Run_the_program 0
=OID=_(*TBD*) 1
=CK_TF_GPU_MEMORY_PERCENT= {'weight': 2}
=CK_TF_GPU_MEMORY_PERCENT= 0
Run_once_(classical_CK_interface) 0
=CK_TEST_INTERVAL= 1
Results {'weight': 1}
SciPy 1
Install_via_CK {'weight': 3}
Install_via_CK 0
ImageNet_dataset 2
Benchmark {'weight': 3}
Build {'weight': 2}
module._Data_iterators_are_flexible,_easy_to_reason 1
Other_details_for_better_NMT_models {'weight': 2}
TODO(rzhao)__add_URL_for_English-Vietnamese_trained_model. 1
Speed*__(0.37s_step-time,_15.3K_wps)_on_/K40m/_&_(0.17s {'weight': 2}
TODO(rzhao)__add_URL_for_German-English_trained_model. 1
Speed*__(2.1s_step-time,_3.4K_wps)_on_/Nvidia_K40m/_&_(0.7s {'weight': 2}
TensorFlow_models 0
=CK_RECREATE_CACHE= 1
Input_preprocessing_parameters {'weight': 5}
Input_preprocessing_parameters 0
If_=CK_TMP_IMAGE_SIZE=_is_set_and_valid,_this_parameter_is_not 1
=CK_SUBTRACT_MEAN= {'weight': 2}
=CK_SUBTRACT_MEAN= 0
If_you_have_previously_installed_the_=coco=_dataset,_you_should 1
Running {'weight': 1}
For_some_reason_only_debug_version_of_the_library_can_be_used 1
Weights_package {'weight': 1}
Compile 0
Both_1.5.2._and_1.5.3_can_be_installed_but_fail_to_convert_ResNet 1
Convert_TF_to_ONNX {'weight': 1}
Convert_TF_to_ONNX 0
SSD-MobileNet-v1 2
Datasets {'weight': 1}
Inference {'weight': 1}
Using_OpenCV_gives_better_accuracy_than_using_Pillow. 1
SSD-ResNet34 {'weight': 1}
SSD-ResNet34 0
=CK_SKIP_IMAGES= 1
Models {'weight': 1}
5,000_images 1
SSD-MobileNet-v1 {'weight': 1}
It_uses_TensorFlow_Lite 1
Prerequisites {'weight': 2}
If_you_have_previously_installed_the_=coco=_datasets,_you_should 1
Compiling {'weight': 2}
The_tool_does_not_update_a_remote_repo,_so_after_execution_you 1
Run {'weight': 1}
Including_Python_modules_into_respective_package_listed_above_we 1
Validation {'weight': 1}
Validation 0
=CK_IMAGE_COUNT= 1
Detection_result_file_format {'weight': 1}
Detection_result_file_format 0
Since_the_preprocessed_COCO_dataset_takes_up_21G,_you_may_wish_to 1
Download_the_SSD_ResNet34_model {'weight': 1}
Download_the_SSD_ResNet34_model 0
Use_precalibrated_profile 1
Compile_the_Server/Offline_model_for_the_PCIe_server_cards {'weight': 1}
by_[[https_//cKnowledge.io/@gfursin][Grigori_Fursin]]_on 1
MLPerf_Inference_v1.0_-_Object_Detection_-_TFLite_(with_Coral_EdgeTPU {'weight': 1}
MLPerf_Inference_v1.0_-_Object_Detection_-_TFLite_(with_Coral_EdgeTPU 0
Install_common_CK_packages 1
Setup_for_EdgeTPU {'weight': 1}
Setup_for_EdgeTPU 0
CPU 0
Amazon_Linux_2 1
Set_up_user-space_dependencies {'weight': 1}
Set_up_user-space_dependencies 0
Download_URLs_for_a_particular_category 1
Download_images_for_a_given_category {'weight': 1}
Download_images_for_a_given_category 0
Program-specific_preprocessing 1
Images_dataset {'weight': 5}
Images_dataset 0
Neon_backend 1
224 {'weight': 2}
224 0
Currently_only_TensorFlow_packages_provide_env_variable_giving 1
Program_parameters {'weight': 3}
Program_parameters 0
Initial_checkpoint 1
4._Quality {'weight': 2}
4._Quality 0
Evaluation_frequency 1
5._Steps_to_run_the_model {'weight': 2}
5._Steps_to_run_the_model 0
On_Google_Cloud_TPU 1
6._Software_versions {'weight': 2}
6._Software_versions 0
Steps_to_run_and_time 3
3._Dataset/Environment {'weight': 6}
3._Model {'weight': 2}
4._Dataset/Environment {'weight': 2}
Preprocessed_data_download 1
4._Model {'weight': 2}
BF16_training 1
Checkpoint_Parameters {'weight': 2}
Checkpoint_Parameters 0
Checkpoint_Zarr_format 1
How_to_run {'weight': 2}
How_to_run 1
5._Quality {'weight': 2}
6._Other 0
Access_details 1
Model_conversion_from_Paxml_checkpoints {'weight': 2}
Model_conversion_from_Paxml_checkpoints 0
Supervised_finetuning 1
Reader_Training {'weight': 2}
Reader_Training 0
Files_in_./results_directory_ 1
Generate_the_TFRecords_for_Wiki_dataset {'weight': 2}
Generate_the_TFRecords_for_Wiki_dataset 0
It_is_extremely_critical_to_set_the_value_of_=random_seed=_to 1
TFRecord_Features {'weight': 2}
TFRecord_Features 0
Some_stats_of_the_generated_tfrecords_ 1
Stopping_criteria {'weight': 2}
Stopping_criteria 0
Example_evaluation_frequency 1
Running_the_model {'weight': 2}
MD5sums_of_provided_files_ 1
Extract {'weight': 2}
WikiExtractor.py_replaces_some_of_the_tags_present_in_XML_such 1
Clean_up_and_dataset_seperation {'weight': 2}
Clean_up_and_dataset_seperation 0
From_Source 1
Steps_to_download_data {'weight': 2}
3._Model 0
study_mode_currently_requires_the_C++_Minigo_engine.* 1
Vs_mode {'weight': 8}
Vs_mode 0
Kiosk_mode 1
Technical_discussion {'weight': 8}
Technical_discussion 0
Update_messages 1
Synchronizing_stdout_and_stderr {'weight': 8}
Synchronizing_stdout_and_stderr 0
Steps_to_download_and_verify_data 1
3._Model {'weight': 8}
Observations 1
Third_run,_Minigo,_model_250-...,_Jan_20th-Feb_1st_(ish) {'weight': 8}
Third_run,_Minigo,_model_250-...,_Jan_20th-Feb_1st_(ish) 0
v5_changelog_ 1
v7a,_first_week_of_May {'weight': 8}
v7a,_first_week_of_May 0
This_is_NOT_an_official_version_of_AlphaGo 1
Goals_of_the_Project {'weight': 8}
Goals_of_the_Project 0
Automated_Tests 1
Basics {'weight': 8}
Basics 0
Playing_Against_Minigo 1
Training_Minigo {'weight': 8}
Training_Minigo 0
Validating_on_a_different_set_of_data 1
Retraining_a_model {'weight': 8}
Retraining_a_model 0
this_is_a_one-way_operation._Once_you_=eject=,_you_can't_go 1
=npm_run_build=_fails_to_minify {'weight': 7}
=npm_run_build=_fails_to_minify 0
cc_gtp 1
Running_the_unit_tests {'weight': 8}
Running_the_unit_tests 0
GCS_for_simple_task_signaling 0
versions*_of_the_official_models_targeting_releases_of 1
Running_the_models {'weight': 2}
Running_the_models 0
Pre-trained_model 1
Compute_Devices {'weight': 2}
Compute_Devices 0
From_Docker 1
Steps_to_run_and_time {'weight': 2}
The_current_data_generation_pipeline_is_run_on_CPU_and_is 1
3._Dataset/Environment {'weight': 2}
Training_data_order 1
4._Model {'weight': 8}
Evaluation_results 1
Detailed_instructions {'weight': 2}
Detailed_instructions 0
Model_Definition 1
[[file_model/attention_layer.py][attention_layer.py]]__Defines_the {'weight': 2}
[[file_model/attention_layer.py][attention_layer.py]]__Defines_the 0
BLEU_computation 1
Term_definitions {'weight': 2}
Term_definitions 0
Recommended_setup 1
2._Directions {'weight': 4}
one_can_control_which_GPUs_are_used_with_the_NV_GPU_variable 1
3._Dataset/Environment {'weight': 4}
Learning_rate_schedule 1
5._Quality {'weight': 4}
4._Dataset/Environment 0
Run_and_Time 1
3._Dataset/Environment {'weight': 2}
Steps_to_launch_training 1
3._Dataset/Environment {'weight': 2}
MLCommons_Inference 0
training* 1
Mixed_Precision_(AMP)* {'weight': 2}
Mixed_Precision_(AMP)* 1
rate_decay* {'weight': 2}
rate_decay* 0
logger* 1
Quick_Start_Guide {'weight': 2}
Repository_content 1
3._Quality {'weight': 2}
Abstractions 0
Note_ 1
Finetuning_from_Detectron_weights_on_custom_datasets {'weight': 2}
Finetuning_from_Detectron_weights_on_custom_datasets 0
Steps_to_run_benchmark. 1
3._Dataset/Environment {'weight': 2}
2* 1
Training_and_test_data_separation {'weight': 4}
note_that_all_command_instructions_provided_in_this_README_are 1
Prerequisites {'weight': 2}
note_that_all_the_commands_in_the_following_sections_are 1
Downloading_the_dataset {'weight': 2}
Downloading_the_dataset 0
COCO-2014 1
Downloading_the_checkpoints {'weight': 2}
Downloading_the_checkpoints 0
Multi-node_(with_SLURM) 1
Benchmark_details {'weight': 2}
Benchmark_details 0
COCO_2014 1
The_Model {'weight': 2}
The_Model 0
CLIP 1
Quality {'weight': 2}
Reference_runs 0
that_this_repository_is_outdated__we_are_now_using_the_next 2
Fighting_the_software_and_hardware_chaos {'weight': 1}
Collective_Knowledge_workflows_for_MLPerf {'weight': 1}
Fighting_the_software_and_hardware_chaos 0
CK_components_for_AI_and_ML_are_now_collected_in 1
Author {'weight': 1}
Running_preprocessing_before_training/inference_(optional) 1
Constructing_the_Data_CSV {'weight': 1}
Constructing_the_Data_CSV 0
Customize_the_Training 0
Running_multiple_experiments_(optional) 1
Running_GaNDLF_(Training/Inference) {'weight': 1}
Running_GaNDLF_(Training/Inference) 0
Special_notes_for_Inference_for_Histology_images 1
Generate_Metrics {'weight': 1}
Generate_Metrics 0
Expected_Output(s) 0
Plot_the_final_results 0
Deploy_as_a_Metrics_Generator 1
Federating_your_model_using_OpenFL {'weight': 1}
Federating_your_model_using_OpenFL 0
Special_Case_for_Training 1
Enabling_GPUs {'weight': 1}
Enabling_GPUs 1
MLCubes {'weight': 1}
MLCubes 0
Dev_Containers_is_an_open_spec_which_is_supported_by 1
Sample_Data {'weight': 1}
Sample_Data 0
When_using_your_own_data,_it_is_vital_to_correctly 1
Segmentation {'weight': 1}
Segmentation 0
Please_consider_the 2
Classification {'weight': 1}
Regression {'weight': 1}
Classification 0
Regression 0
Install_from_Sources 1
Docker_Installation {'weight': 1}
Docker_Installation 0
We_cannot_provide_support_for_the_Windows_Insider_program_or_for 1
Building_your_own_GaNDLF_Docker_Image {'weight': 1}
Building_your_own_GaNDLF_Docker_Image 0
is_a_package_that_is_worked_on_by_the_MLCommons_community_in 1
Issues {'weight': 1}
Issues 0
the_bug*_A_clear_and_concise_description_of_what_the_bug_is. 2
Reproduce*_Steps_to_reproduce_the_behavior__1._Go_to_'...'_2._Click {'weight': 2}
Reproduce*_Steps_to_reproduce_the_behavior_ {'weight': 1}
Reproduce*_Steps_to_reproduce_the_behavior__1._Go_to_'...'_2._Click 0
If_applicable,_add_screenshots_to_help_explain_your 2
Version*_Version_information_of_the_GaNDLF_package_in_the {'weight': 1}
(please_complete_the_following_information)_*_-_OS_ {'weight': 1}
Version*_Version_information_of_the_GaNDLF_package_in_the 0
(please_complete_the_following_information)_*_-_OS_ 1
did_you_install_GaNDLF*_Please_provide_all_steps_followed_during {'weight': 1}
did_you_install_GaNDLF*_Please_provide_all_steps_followed_during 0
Weekly_Meeting 1
Disclaimer {'weight': 1}
Markdown_based_tutorials 1
Questions? {'weight': 1}
Questions? 0
Update_all_packages_and_repositories 1
3._Install_CUDNN_on_Ubuntu_22.04 {'weight': 1}
3._Install_CUDNN_on_Ubuntu_22.04 0
Workflow_to_Test_Patches_with_Zephyr_SDK 1
Release_Process {'weight': 1}
Release_Process 0
This_page_is_outdated._Please_follow 2
MLPerf_Inference_-_Image_Classification {'weight': 2}
MLPerf_Inference_-_Object_Detection {'weight': 2}
MLPerf_Inference_-_Image_Classification 0
MLPerf_Inference_-_Object_Detection 0
Flag_to_ignore_errors_in_submissions 1
Flag_to_run_the_check_for_power_submissions {'weight': 2}
Flag_to_run_the_check_for_power_submissions 1
Summary {'weight': 2}
*Current_version_*_alpha 1
Requirements {'weight': 1}
Guidelines_(alpha_version) 0
Submit_reflection_of_your_results_as_a_paper 1
Evaluation {'weight': 1}
evaluation_*_All_submissions_will_be_evaluated_in_a_validation 1
How_to_participate {'weight': 1}
How_to_participate 0
guide__*_Check_this 1
Your_Account_&_Log-in {'weight': 1}
Your_Account_&_Log-in 0
Prompt_Hacking_Journey 1
Examples_of_unsafe_images_generated_by_safe-seeming_prompts {'weight': 1}
Examples_of_unsafe_images_generated_by_safe-seeming_prompts 0
prompt_highlighting_the_harms_in_the_image_*_"Baby_lying_in_a 1
represented_in_the_images_*_Violent_or_Graphic_Imagery, {'weight': 1}
represented_in_the_images_*_Violent_or_Graphic_Imagery, 0
attribute(s)_targeted_in_the_images_*_None/Not_Applicable 1
Example_of_stereotyping {'weight': 1}
Example_of_stereotyping 0
prompt_highlighting_the_harms_in_the_image_*_"_A_female 1
represented_in_the_images_* {'weight': 1}
represented_in_the_images_* 0
attribute(s)_targeted_in_the_images_* 1
Contact_the_organizers {'weight': 1}
Contact_the_organizers 0
Benchmarks_for_Data-Centric_AI_Development*, 1
Contributing_to_the_DataPerf_Benchmark_Suite {'weight': 1}
Contributing_to_the_DataPerf_Benchmark_Suite 0
Adversarial_Nibbler 1
Participating_in_the_DataPerf_Challenges {'weight': 1}
Participating_in_the_DataPerf_Challenges 0
*Current_version_*_beta 1
Requirements {'weight': 1}
MLCube_execution 0
Execute_complete_pipeline 1
Guidelines_v0.5 {'weight': 1}
Guidelines_v0.5 0
Closed_Division__Offline_evaluation_of_a_submission 1
Baselines {'weight': 1}
Baselines 0
Started_*_Jump_to_[[#getting-started][our_introductory_colab 1
Evaluation_Metric {'weight': 1}
Evaluation_Metric 1
/M/_is_user_defined,_but_Dynabench_will_host_two_leaderboards_per {'weight': 1}
/M/_is_user_defined,_but_Dynabench_will_host_two_leaderboards_per 0
Submission 1
Files {'weight': 1}
Files 0
Optional_Files 1
Using_.wav_Files_for_Selection {'weight': 1}
Using_.wav_Files_for_Selection 1
Optional_MLCube_Workflow {'weight': 1}
Optional_MLCube_Workflow 0
Imagenet_for_resnet50 1
Build_benchmark_images {'weight': 1}
Build_benchmark_images 0
Create_TFRecord_for_ADE20K 1
Train {'weight': 1}
Train 0
Evaluate_pb 1
Evaluate_TFLite {'weight': 1}
Evaluate_TFLite 0
Run_TFLite_evaluation 1
Quantization-aware_training {'weight': 1}
Quantization-aware_training 0
Generate_data_for_post-training_quantization 1
Run_post-training_quantization {'weight': 1}
Run_post-training_quantization 1
Reference {'weight': 1}
Mobilenet_EdgeTPU_latency 1
Pretrained_models {'weight': 1}
Pretrained_models 0
Edge_TPU_checkpoints_ 1
Mobilenet_V2_Imagenet_Checkpoints {'weight': 1}
Mobilenet_V2_Imagenet_Checkpoints 1
Training {'weight': 1}
V2 1
Example {'weight': 1}
accuracy_target 1
Evaluate_accuracy_on_Android_devices {'weight': 1}
Evaluate_accuracy_on_Android_devices 0
[[file_models_and_code/checkpoints/mobilenet_edgetpu_224_1.0][mobilenet_edgetpu_224_1.0]] 1
Accuracy {'weight': 1}
Generating_non-TFLite_specific_files_(export_inference_graph.py) 1
Accuracy {'weight': 1}
of_the_repo_*_1._*Hardware_Requirements*_-_Container_images, 1
Hardware_requirements {'weight': 1}
Hardware_requirements 0
The_jobfile_should_look_like_ 1
Parse_results_and_create_all_the_plots {'weight': 1}
Parse_results_and_create_all_the_plots 0
Everyone_else_ 1
Abbreviated_building_instructions_ {'weight': 2}
Abbreviated_building_instructions_ 0
Tutorial_Videos_&_Slides 1
Performance_Mode_vs. Energy_Mode {'weight': 1}
Performance_Mode_vs. Energy_Mode 1
Hardware_Setup {'weight': 1}
Hardware_Setup 0
Only_attempt_this_if_you_are_very_comfortable_with_the 1
Energy_Mode_Hardware {'weight': 1}
Energy_Mode_Hardware 0
NOTE__Only_ONE_power_supply_is_allowed_to_supply_the_DUT 1
Software_Setup {'weight': 1}
Software_Setup 0
2__The_Runner_will_look_in_the_subfolder_defined_in_the_firmware. 1
Selecting_Energy_Mode {'weight': 1}
Selecting_Energy_Mode 0
Unlike_Performance_Mode,_you_cannot_talk_directly_to_the_DUT 1
Custom_Configuration {'weight': 1}
Custom_Configuration 0
Sometimes_a_device_is_not_detected_when_hot-plugged._The 1
Standard_debug_protocol_for_device_detection_issues {'weight': 1}
Standard_debug_protocol_for_device_detection_issues 0
Fractured_Messages_from_the_IO_Manager 1
Bill_of_Materials {'weight': 1}
Bill_of_Materials 0
Flutter_may_not_work_correctly_if_your_temp_directory_is_located 1
Tested_environment {'weight': 1}
Tested_environment 0
that_VS_Code_=preLaunchTask=_hook_will_not_run_this_command_when 1
Android {'weight': 1}
Android 0
Pull_Request_Checklist 1
How_to_become_a_contributor_and_submit_your_own_code {'weight': 1}
How_to_become_a_contributor_and_submit_your_own_code 0
Optional 1
Building_the_MLPerf_app_with_the_QTI_backend {'weight': 1}
Building_the_MLPerf_app_with_the_QTI_backend 0
Videos/*_parallax_supported. 1
[[https_//free.nkdev.info/jarallax/][Demo]] {'weight': 1}
[[https_//free.nkdev.info/jarallax/][Demo]] 0
Package_managers 1
Set_up_your_HTML {'weight': 1}
Set_up_your_HTML 0
Additional_styles 1
Call_the_plugin {'weight': 1}
Call_the_plugin 0
C._jQuery_way 1
Video_Usage_Examples {'weight': 1}
Video_Usage_Examples 1
Options {'weight': 1}
Options_For_Video 1
Events {'weight': 1}
Events 0
onScroll_event 1
Methods {'weight': 1}
Methods 0
B._jQuery_way 2
No_conflict {'weight': 1}
Real_Usage_Examples {'weight': 1}
No_conflict 0
you_can_rename_plugin._###_A._JavaScript_way 1
B._jQuery_way {'weight': 1}
Real_Usage_Examples 0
AMD_(Asynchronous_Module_Definition) 1
Node {'weight': 1}
displayInput___default=true_|_false=hide_input._*_displayPrevious__ 0
MLPerf_training_benchmark_results 1
How_to_update_this_repository_with_new_results {'weight': 1}
How_to_update_this_repository_with_new_results 0
Using_CM_script 1
Copyright {'weight': 1}
PyTorch_Execution_Graphs 1
Execution_Trace_Generator_(et_generator) {'weight': 1}
Execution_Trace_Generator_(et_generator) 0
This_only_updates_CK_repositories_on_the_host_system._To_update 1
Set_up_environment_variables {'weight': 1}
Add_the_=--no-cache=_flag_to_rebuild_the_image_from_scratch. 1
Accuracy_mode {'weight': 1}
Accuracy_mode 0
ResNet,_int8,_15_samples_per_batch 0
MobileNet,_int8 2
Performance_mode {'weight': 2}
Prepare_a_CK_repository_with_the_experimental_results {'weight': 1}
Performance_mode 0
MobileNet,_int8,_250_samples_per_batch 1
Accuracy_mode {'weight': 1}
=--volume_${CK_EXPERIMENTS_DIR}_/home/dvdt/CK_REPOS/local/experiment= 1
Accuracy_mode {'weight': 1}
Prepare_a_CK_repository_with_the_experimental_results 0
Currently,_this_downloads_the_COCO_2017_validation_dataset,_etc., 1
Locate_the_dashboard_plugin {'weight': 1}
Locate_the_dashboard_plugin 0
From_a_local_machine 1
Open_the_dashboard {'weight': 1}
Open_the_dashboard 0
Collective_Knowledge_workflows_for_MLPerf 0
MobileNet-v1 0
MobileNet-v3 0
EfficientNet 0
SMT_Control__Enable 2
Global_C-state_Control__Disabled {'weight': 33}
Global_C-state_Control__Enabled {'weight': 2}
Global_C-state_Control__Disabled 1
Management_Firmware_Settings {'weight': 33}
Log_out_and_log_back_in_for_the_necessary_group_permissions_to 1
Host_OS_independent {'weight': 152}
Host_OS_independent 0
Set_up_Collective_Knowledge_environment 1
Target_OS_dependent,_SDK_dependent {'weight': 152}
Target_OS_dependent,_SDK_dependent 0
Make_sure_to_have_copied_the_required_datasets_(e.g. ImageNet)_and 1
Test_Docker_images {'weight': 152}
Test_Docker_images 0
Edge_-_Q1_Pro 1
Further_info {'weight': 152}
Deprecated_workloads 1
Info {'weight': 152}
The_full_installation_can_take_more_than_50G._If_the_space_on_the 1
B._Initial_device_setup_under_the_=root=_user {'weight': 112}
B._Initial_device_setup_under_the_=root=_user 0
=[D1S]=_Set_user_password 1
C._Initial_device_setup_under_the_=krai=_user {'weight': 112}
C._Initial_device_setup_under_the_=krai=_user 0
=[D1]=_Run 1
D._Set_up_ImageNet_and_other_datasets {'weight': 112}
D._Set_up_ImageNet_and_other_datasets 0
=[D1]=_Extract_and_preprocess_ImageNet_on_the_device 1
E._Set_up_QAIC_SDKs {'weight': 112}
E._Set_up_QAIC_SDKs 0
=[HR]=_Compile_the_workloads_on_the_host_and_copy_to_the_device 1
F._Expected_Results_from_Set_up_QAIC_SDKs {'weight': 112}
F._Expected_Results_from_Set_up_QAIC_SDKs 0
=[D]=_Verify_with_a_quick_run 1
Appendix__Arguments {'weight': 112}
Appendix__Arguments 0
=DOCKER_DEVICE_TYPE= 1
Appendix__Info {'weight': 112}
Appendix__Info 0
Launch_a_Docker_container_on_the_client_side_(=pf002=) 1
Scenarios {'weight': 4}
Scenarios 2
Alibaba_Submission {'weight': 1}
NEUCHIPS_Submissions {'weight': 1}
BERT-99 1
Run_the_client_program_(=pf002=) {'weight': 2}
Run_the_client_program_(=pf002=) 0
BERT-99.9 1
Run_the_client_program_(=pf002=) {'weight': 2}
The_final_tarball_should_not_include_hidden_files._This_can 1
Submit_your_submission {'weight': 3}
Submit_your_submission 0
MLPerf_Quantization 0
Apply_Perf_Optmization 0
10._run 1
Docker {'weight': 18}
Get_started_with_DLRM 0
This_mode_is_supported_only_with_CK_≤_v1.17.0_or_≥_v2.6.0_ 2
ResNet50 {'weight': 1425}
"All-in-one" {'weight': 2532}
"All-in-one" 0
Note_that_unlike_[[#mobilenet_v1][MobileNet-v1]], 1
"All-in-one" {'weight': 3957}
prepare_env 1
Setup_with_docker {'weight': 1}
option_1__build_docker 1
convert_dataset_and_model {'weight': 6}
3.b_Option_2__build_docker 1
4._Run_command_for_accuracy_and_performance {'weight': 4}
NEUCHIPS_Submission 1
System_Preprocessing {'weight': 1}
System_Preprocessing 0
Running_NEUCHIPS_DLRM_benchmark 0
The_closed-power_would_need_additional_setup_for_power 1
Closed {'weight': 1}
Closed 0
Running_the_close-power_benchmark 1
How_do_I_know_the_run_is_finished? {'weight': 1}
How_do_I_know_the_run_is_finished? 0
Compilation_for_15w_AEDKs_(edge_category) 0
Compilation_for_datacenter_category_16_NSP_PCIe 1
Benchmarking {'weight': 4}
Benchmarking 1
Example_Command_related_to_this_Scenario_and_Workload {'weight': 3}
Example_Command_related_to_this_Scenario_and_Workload 0
Recipe 0
ResNet50_Offline_-_ONNXRuntime 1
BERT-Large {'weight': 1}
BERT-Large 0
Sinian 1
Benchmarks {'weight': 1}
Alibaba_Submission 0
Weights 1
Additional_Details {'weight': 1}
Additional_Details 0
Install_loadgen 1
Dataset {'weight': 1}
Optimization 2
Run_Resnet50 {'weight': 1}
Raspberry_Pi {'weight': 2}
Run_Resnet50 0
The_following_commands_rely_on_the_content_of_this_folder, 1
2._JPQD-BERT-large-99 {'weight': 1}
2._JPQD-BERT-large-99 0
and_*99*__We_dialed_JPQD_pruning_intensity_to_target 1
*BERT-base-99*__JPQD_was_configured_to_optimize_BERT-base_to_meet_99% {'weight': 9}
*BERT-base-99*__JPQD_was_configured_to_optimize_BERT-base_to_meet_99% 0
We_initialized_pretrained_MobileBERT_with_15 1
Benchmarks {'weight': 9}
Run_Benchmarks 0
NEUCHIPS_Submissions 0
Build_and_deploy_HabanaLabs_MLPERF_training_2.1_container_in_the 1
Resnet50 {'weight': 1}
Training_data_packing 0
Please_note_that_we_use_the_same_optimizers_and_hyperparameters 1
Configuration_details {'weight': 1}
Configuration_details 0
Software_Packages 1
Repository_Contents {'weight': 1}
Repository_Contents 0
Run_DLRM 0
Run_benchmark_with_SLURM_-_single-node/multi-node_training. 1
Steps_to_download_and_verify_data {'weight': 6}
information_as_self_contained*_as_possible_in_this_section.] 1
Proposed_API_Change_(s) {'weight': 2}
Proposed_API_Change_(s) 0
API_Freeze_Consequences 1
Coding_Style {'weight': 2}
Caveat_Emptor 1
Setup {'weight': 2}
Overriding_Dependency_Versions 1
Examples {'weight': 2}
Rule_Polymorphism 1
Arguments {'weight': 20}
closure_js_binary 0
Support_for_AngularJS 1
closure_js_test {'weight': 2}
closure_js_test 0
phantomjs_test 0
closure_js_deps 0
closure_js_template_library 0
closure_java_template_library 0
closure_py_template_library 0
closure_css_binary 0
closure_js_proto_library 0
closure_proto_library 0
models_are_programs,_and_need_to_be_treated_as_such_from_a 1
Running_untrusted_models {'weight': 2}
Running_untrusted_models 0
Encryption_key_for_=security@tensorflow.org= 1
Known_Vulnerabilities {'weight': 2}
Known_Vulnerabilities 0
Thanks_to_our_Contributors 22
Release_1.14.0 {'weight': 2}
Release_1.12.3 {'weight': 2}
Release_1.12.0 {'weight': 2}
Release_1.11.0 {'weight': 2}
Release_1.10.1 {'weight': 2}
Release_1.9.0 {'weight': 2}
Release_1.8.0 {'weight': 2}
Release_1.7.0 {'weight': 2}
Release_1.6.0 {'weight': 2}
Release_1.5.0 {'weight': 2}
Release_1.4.1 {'weight': 2}
Release_1.3.0 {'weight': 2}
Release_1.2.1 {'weight': 2}
Release_1.1.0 {'weight': 2}
Release_1.0.1 {'weight': 2}
Release_0.12.0 {'weight': 2}
Release_0.11.0 {'weight': 2}
Release_0.10.0 {'weight': 2}
Release_0.9.0 {'weight': 2}
Release_0.8.0 {'weight': 2}
Release_0.7.1 {'weight': 2}
Release_0.6.0 {'weight': 2}
Release_1.14.0 0
Release_1.12.3 0
Bug_Fixes_and_Other_Changes 7
Release_1.12.2 {'weight': 2}
Release_1.13.0 {'weight': 2}
Release_1.10.0 {'weight': 2}
Release_1.4.0 {'weight': 2}
Release_1.2.0 {'weight': 2}
Release_1.0.0 {'weight': 2}
Release_0.7.0 {'weight': 2}
Release_1.12.2 0
Release_1.13.0 0
Release_1.12.0 0
Release_1.11.0 0
Release_1.10.1 0
Release_1.10.0 0
Release_1.9.0 0
Release_1.8.0 0
Release_1.7.0 0
Release_1.6.0 0
Release_1.5.0 0
Release_1.4.1 0
Release_1.4.0 0
Release_1.3.0 0
Release_1.2.1 0
Release_1.2.0 0
Release_1.1.0 0
Release_1.0.1 0
Breaking_Changes_to_the_API 1
=tf.mul=,_=tf.sub=_and_=tf.neg=_are_deprecated_in_favor_of {'weight': 2}
=tf.mul=,_=tf.sub=_and_=tf.neg=_are_deprecated_in_favor_of 0
Release_0.12.0 0
Release_0.11.0 0
Release_0.10.0 0
Release_0.9.0 0
Release_0.8.0 0
Release_0.7.1 0
Release_0.7.0 0
Release_0.6.0 0
Backwards-Incompatible_Changes 1
Release_0.5.0 {'weight': 2}
Release_0.5.0 0
/Try_your_first_TensorFlow_program/ 1
Contribution_guidelines {'weight': 2}
Contribution_guidelines 0
use_[[https_//github.com/tensorflow/tensorflow/issues][GitHub 1
Continuous_build_status {'weight': 2}
Continuous_build_status 0
Community_Supported_Builds 1
Resources {'weight': 2}
Compiler_infrastructure 1
Getting_started_with_MLIR {'weight': 2}
Getting_started_with_MLIR 0
Creating_Your_own_App 1
Building_the_TensorFlow_iOS_libraries_from_source {'weight': 2}
Building_the_TensorFlow_iOS_libraries_from_source 0
If_you_wish_to_place_the_models_in_your_assets_manually, 1
Build {'weight': 2}
Install 1
Android_Studio_with_Bazel {'weight': 2}
Android_Studio_with_Bazel 0
Note_to_active_contributors 1
TensorFlow_Code_of_Conduct {'weight': 2}
TensorFlow_Code_of_Conduct 0
Function_conversion_rules 1
Nested_functions {'weight': 2}
Nested_functions 0
Modifications_are_not_detected_in_methods 1
Python_collections_in_TensorFlow_control_flow {'weight': 2}
Python_collections_in_TensorFlow_control_flow 0
Python_collections_of_fixed_structure_with_dynamic_index 1
Shape_and_dtype_consistency_in_TensorFlow_control_flow {'weight': 2}
Shape_and_dtype_consistency_in_TensorFlow_control_flow 0
Consistency_of_shape 1
Undefined_and_None_values_in_TensorFlow {'weight': 2}
Undefined_and_None_values_in_TensorFlow 0
Analogy_with_compile-time_constants_and_code_optimization 1
Compound_symbols {'weight': 2}
Compound_symbols 0
Python_values_modified_in_TensorFlow_control_flow_become_Tensors 1
=if=_statements {'weight': 2}
=if=_statements 0
Stripping_Default_valued_attributes 1
Loader {'weight': 2}
Loader 0
C++ 1
Constants {'weight': 2}
Constants 0
AOT_(Ahead-of-time)_compilation_for_CPU_with_=tfcompile= 1
Inspect_compiled_programs {'weight': 2}
Inspect_compiled_programs 0
Default_minor-to-major_ordering 1
Padding {'weight': 2}
Padding 0
array_to_match_with_the_*lower-rank*_array. 1
Formal_definition {'weight': 2}
Formal_definition 1
Broadcasting_similar-rank_arrays_with_degenerate_dimensions {'weight': 2}
Broadcasting_similar-rank_arrays_with_degenerate_dimensions 0
Implementation_details 1
Gather {'weight': 2}
Gather 0
Informal_Description_and_Examples 1
GetDimensionSize {'weight': 2}
GetDimensionSize 0
Variadic_Reduce 1
ReducePrecision {'weight': 2}
ReducePrecision 0
Linear_index_formulas_for_tiling_given_a_shape_and_a_tile 1
Tiling_as_pad-reshape-transpose {'weight': 2}
Tiling_as_pad-reshape-transpose 0
Skip_deploying_to_a_repository 1
The_overall_flow {'weight': 2}
The_overall_flow 0
Generate_wrapper_functions_for_ops 1
Support {'weight': 2}
Support 0
NOT_EDIT_THE_DOCKERFILES/_DIRECTORY_MANUALLY!*_The_files_within_are 1
Building {'weight': 2}
Building 0
Run_TensorFlow_CI_Scripts_Natively_on_your_Machine 1
TensorFlow_Continuous_Integration {'weight': 2}
TensorFlow_Continuous_Integration 0
Eight-bit_Calculations 1
Transform_Reference {'weight': 2}
Transform_Reference 0
strip_unused_nodes 1
Writing_Your_Own_Transforms {'weight': 2}
Writing_Your_Own_Transforms 0
=tf_upgrade_v2=_is_installed_automatically_as_a_script_by_the_pip 1
Report {'weight': 2}
Report 0
*NOTE* 1
ToDense {'weight': 2}
ToDense 0
Note__See_[[file_profile_model_architecture.md#caveats][Caveats]] 1
Time_and_Memory {'weight': 2}
Time_and_Memory 0
On_CPU 1
Profile_by_Python_Code {'weight': 2}
Profile_by_Python_Code 0
Option_Semantics_In_Different_View 1
Times {'weight': 2}
Times 0
Press_enter_to_show_the_default_options 1
Examples {'weight': 2}
Test_Bench 1
Speech_Model_Architectures {'weight': 2}
Speech_Model_Architectures 0
TensorFlow_Lite_LSTM_op_("fused_ops") 1
How_to_use {'weight': 2}
Simple_example_diff_for_using_original_TF_code_VS._TensorFlow_Lite 1
Why_introduce_another_set_of_LSTM_APIs? {'weight': 2}
Why_introduce_another_set_of_LSTM_APIs? 0
Ophinted_Customized_Graph 1
Simple_Tutorial {'weight': 2}
Simple_Tutorial 0
Exported_TensorFlow_Lite_Model. 1
Caveat {'weight': 2}
Caveat 0
Run_on_macOS 1
Deploy_to_Arduino {'weight': 2}
Deploy_to_Arduino 0
Build_the_library 1
Load_and_run_the_example {'weight': 2}
Load_and_run_the_example 1
Deploy_to_SparkFun_Edge {'weight': 4}
Deploy_to_SparkFun_Edge 0
If_you're_using_the 2
Deploy_to_STM32F746 {'weight': 4}
Debugging_Image_Capture {'weight': 2}
Deploy_to_STM32F746 0
Build_the_code 1
Deploy_to_Arduino {'weight': 2}
Building_the_library 1
Load_and_run_the_example {'weight': 2}
Debugging_Image_Capture 0
Additional_Apollo3_Instructions 1
Building_for_the_Eta_Compute_ECM3531_EVB_using_Make {'weight': 2}
Building_for_the_Eta_Compute_ECM3531_EVB_using_Make 0
CMSIS-NN_optimized_kernels_(---under_development---) 1
Goals {'weight': 2}
Goals 0
Test_that_the_model_produces_sensible_outcomes 1
Measure_on-device_latency {'weight': 2}
Measure_on-device_latency 0
Debug_Mode 1
Preprocessing_the_minival_dataset {'weight': 2}
Preprocessing_the_minival_dataset 0
Direct_usage 0
On_desktop_ 1
Reducing_variance_between_runs_on_Android. {'weight': 2}
Reducing_variance_between_runs_on_Android. 0
Load_and_run_a_model_in_C++ 0
Load_and_run_a_model_in_Python 0
Python_pip_Package 1
Metrics {'weight': 2}
Metrics 0
Binary_Size 1
Known_Limitations {'weight': 2}
Machine_learning_at_the_edge 1
Get_started {'weight': 2}
Get_started 0
March_6th,_2019* 1
Usability {'weight': 2}
Usability 0
AutoML_mobile_models 1
Object_detection {'weight': 2}
Object_detection 0
Pose_estimation 0
Image_segmentation 0
Smart_reply 0
Objective-C 2
Bazel_developers {'weight': 2}
Import_the_library {'weight': 2}
Bazel_developers 0
Import_the_library 0
How_do_I_inspect_a_=.tflite=_file? 1
Models_&_Operations {'weight': 2}
Models_&_Operations 0
How_do_I_test_that_a_TensorFlow_Lite_model_behaves_the_same_as_the 1
Optimization {'weight': 2}
Defining_the_kernel_in_the_TensorFlow_Lite_runtime 1
Best_Practices {'weight': 2}
Best_Practices 0
Converting_TensorFlow_models_to_convert_graphs 1
TF_Graph_Attributes {'weight': 2}
TF_Graph_Attributes 0
Models_from_other_sources 1
Re-train_a_model_(transfer_learning) {'weight': 2}
Re-train_a_model_(transfer_learning) 0
Train_a_custom_model 1
2._Convert_the_model {'weight': 2}
2._Convert_the_model 0
Ops_compatibility 1
3._Run_inference_with_the_model {'weight': 2}
3._Run_inference_with_the_model 0
Operations 1
4._Optimize_your_model {'weight': 2}
4._Optimize_your_model 0
Model_Optimization_Toolkit 1
Next_steps {'weight': 2}
Next_steps 0
Exporting_a_tf.keras_File 1
Complex_examples {'weight': 2}
Complex_examples 0
Exporting_a_quantized_GraphDef 1
Additional_instructions {'weight': 2}
Additional_instructions 0
Converting_models_prior_to_TensorFlow_1.9 1
Basic_examples {'weight': 2}
Basic_examples 0
Convert_a_tf.Keras_model 1
Quantization {'weight': 2}
Quantization 1
Tweak_the_number_of_threads {'weight': 2}
Use_"dummy-quantization"_to_try_out_quantized_inference_on_a_float 1
Specifying_input_and_output_arrays {'weight': 2}
Specifying_input_and_output_arrays 0
Specifying_subgraphs 1
Logging {'weight': 2}
Example_applications_and_guides 1
How_it_works {'weight': 2}
How_it_works 0
Location 1
Starter_model {'weight': 2}
Starter_model 0
Output 1
Customize_model {'weight': 2}
Customize_model 0
Recognize_image 1
Display_results {'weight': 2}
Display_results 0
Process_results 1
Display_results {'weight': 2}
Screenshot 1
What_is_image_classification? {'weight': 2}
What_is_image_classification? 0
Uses_and_limitations 1
Choose_a_different_model {'weight': 2}
Choose_a_different_model 0
Architecture 1
Customize_model {'weight': 2}
Sample_application 1
How_it_works {'weight': 2}
Energy_Efficiency 1
Supported_Ops {'weight': 2}
Supported_Ops 0
iOS_(ObjC++) 1
Advanced_Usage {'weight': 2}
Advanced_Usage 0
iOS 2
Tips_and_Tricks {'weight': 2}
Supported_Models_and_Ops {'weight': 2}
Tips_and_Tricks 0
Latency_and_accuracy_results 1
Choice_of_tool {'weight': 2}
Choice_of_tool 0
Step_3._Build_and_run 1
iOS_(with_XCode) {'weight': 2}
iOS_(with_XCode) 0
Step_5._Release_mode. 1
Trying_the_GPU_Delegate_on_your_own_model {'weight': 2}
Trying_the_GPU_Delegate_on_your_own_model 0
Supported_Models_and_Ops 0
Tweak_the_number_of_threads 0
Convert_to_a_C_array 1
Model_architecture_and_training {'weight': 2}
Model_architecture_and_training 0
Generate_project_files 1
Build_the_library {'weight': 2}
Portable_reference_code 1
Goals {'weight': 2}
Micro_Vision_example 1
Run_inference {'weight': 2}
Run_inference 0
Obtain_the_output 1
Next_steps {'weight': 2}
Exporting_the_concrete_function 1
Example_program {'weight': 2}
Example_program 0
End-to-end_MobileNet_conversion 1
Summary_of_changes_in_Python_API_between_1.X_and_2.0 {'weight': 2}
Summary_of_changes_in_Python_API_between_1.X_and_2.0 0
=lite.OpHint= 1
Installing_TensorFlow {'weight': 2}
Installing_TensorFlow 0
Proof_of_convergence 1
Poisson_log_loss {'weight': 2}
Poisson_log_loss 0
Start_training 1
Performance {'weight': 2}
is_an 0
The_high-level_idea_is_to_use_a_non-linear_map_to_transform 1
details_overview_*_In_this_example_we_will_use_*Random {'weight': 2}
details_overview_*_In_this_example_we_will_use_*Random 1
Classifier_*_=tf.contrib.kernel_methods.KernelLinearClassifier= {'weight': 2}
Classifier_*_=tf.contrib.kernel_methods.KernelLinearClassifier= 1
the_role_of_stddev_*_The_classification_quality_is_very_sensitive_to {'weight': 2}
the_role_of_stddev_*_The_classification_quality_is_very_sensitive_to 0
the_role_of_the_output_dimension_*_Intuitively,_the_larger_the 1
Explicit_kernel_mappings__summary_and_practical_tips {'weight': 2}
Explicit_kernel_mappings__summary_and_practical_tips 0
Determinism_when_scanning 1
Writing_to_Cloud_Bigtable {'weight': 2}
Writing_to_Cloud_Bigtable 0
Distributed_Reinforcement_Learning 1
Common_Gotchas! {'weight': 2}
Common_Gotchas! 0
Known_problems 0
-_With_OpenMPI_corrupt_data_will_be_received_resulting_in_an 1
Implementation_details {'weight': 2}
Example__TFExampleDecoder 1
Data_Provision {'weight': 2}
Data_Provision 0
Working_Example__Specifying_the_VGG16_Layers 1
Training_Models {'weight': 2}
Training_Models 0
Working_Example__Training_the_VGG16_Model 1
Fine-Tuning_Existing_Models {'weight': 2}
Fine-Tuning_Existing_Models 0
Fine-Tuning_a_Model_on_a_different_task 1
Evaluating_Models. {'weight': 2}
Evaluating_Models. 0
Evaluation_Loop 1
Authors {'weight': 2}
located_in 1
object,_keyed_by_request_index_(uint32_t),_stores_it {'weight': 2}
object,_keyed_by_request_index_(uint32_t),_stores_it 1
method_basically_does_2_things_ {'weight': 2}
method_basically_does_2_things_ 0
using_the_request_index_which_is_the_immediate 1
Additional_design_notes {'weight': 2}
Additional_design_notes 0
Block_Sparsity 1
Adding_pruning_ops_to_the_training_graph {'weight': 2}
Adding_pruning_ops_to_the_training_graph 0
Removing_pruning_ops_from_the_trained_graph 1
Example__Pruning_and_training_deep_CNNs_on_the_cifar10_dataset {'weight': 2}
Example__Pruning_and_training_deep_CNNs_on_the_cifar10_dataset 0
As_tensorflow.contrib_is_being 1
ConstrainedOptimization_(TFCO) {'weight': 2}
ConstrainedOptimization_(TFCO) 0
Proxy_Constraints 1
Components {'weight': 2}
Components 0
TensorFlow_Makefile 1
Before_you_start_(all_platforms) {'weight': 2}
Before_you_start_(all_platforms) 0
Building_the_CUDA-enabled_Android_demo_with_gradle/Android_Studio_ 1
iOS {'weight': 2}
Raspberry_Pi 1
Other_notes {'weight': 2}
Other_notes 0
Windows_Support 1
Try_it_out {'weight': 2}
Try_it_out 0
IGFS 1
Limitations {'weight': 2}
Makefile 1
AssetManagerFileSystem {'weight': 2}
AssetManagerFileSystem 0
Run_inception_model_by_building_all_from_the_source_code 1
Building_libraries {'weight': 2}
Building_libraries 0
Qualcomm_SDK_Linux_installation_fails_with_"Malformed 1
Maintainers {'weight': 2}
We_provide_Linux_build_instructions_primarily_for_the_purpose_of 1
Current_Status {'weight': 2}
Current_Status 0
Current_known_limitations 2
Building_with_CMake {'weight': 2}
CMake_GUI_build_(all_platforms) {'weight': 2}
Building_with_CMake 0
CMake_GUI_build_(all_platforms) 0
Start_a_Tensorflow_C++_project_with_CMake 1
Step-by-step_Windows_build_(command_prompt) {'weight': 2}
Step-by-step_Windows_build_(command_prompt) 0
Exporting_TF.learn_models 1
Importing_(C++_code) {'weight': 2}
Importing_(C++_code) 0
Recovering_signatures 1
Generic_Signatures_(custom_or_advanced_usage) {'weight': 2}
Generic_Signatures_(custom_or_advanced_usage) 1
Custom_Initialization {'weight': 2}
Custom_Initialization 0
Assets 1
Exporter_Usage {'weight': 2}
Exporter_Usage 0
why_we_have_that_policy*__TensorFlow_developers_respond_to 1
System_information {'weight': 2}
System_information 0
Loading_and_processing_traces 0
Installing_on_Linux 1
Usage {'weight': 2}
for_timing*_-_you_will_not_be_able_to_get_function_times_from_this! 1
Preparing_Your_Code {'weight': 2}
Preparing_Your_Code 0
Use_Final_Output_(with_names_on) 1
Install_the_tracing-framework_Tools {'weight': 2}
Install_the_tracing-framework_Tools 0
Reload_Your_Page 1
Capturing_Call_Traces {'weight': 2}
Capturing_Call_Traces 0
Chrome_Web_Store_.zip 1
Platform_Notes {'weight': 2}
Platform_Notes 0
Actions 1
App_Addons {'weight': 2}
App_Addons 0
HUD 1
node.js_apps {'weight': 2}
node.js_apps 0
Enable_the_Feature_in_WTF 1
Usage {'weight': 2}
the_JSON_format_is_not_yet_implemented!/* 1
File_Layout {'weight': 2}
File_Layout 0
JSON_in_PARTIAL_Mode 1
Chunks {'weight': 2}
Chunks 0
JSON 1
Chunk_Types {'weight': 2}
Chunk_Types 0
Chunk_Type_0x2/event_data__Event_Data 1
Chunk_Part_Types {'weight': 2}
Chunk_Part_Types 0
Zones 1
Part_Type_0x30000/string_table__String_Table {'weight': 2}
Part_Type_0x30000/string_table__String_Table 0
wtf.addon 1
Tracing {'weight': 2}
Tracing 0
Custom_Objects 1
wtf.trace.session.bufferSize {'weight': 2}
wtf.trace.session.bufferSize 0
wtf.trace.provider.xhr 1
HUD {'weight': 2}
wtf.hud.app.mode/wtf.hud.app.endpoint 1
Remote_Control {'weight': 2}
Remote_Control 0
wtf.remote.target 1
App {'weight': 2}
App 0
Linux/clang_ 1
Threading {'weight': 2}
Threading 0
Myriad2_(compile_only_-_still_a_work_in_progress)_ 1
Customizing {'weight': 2}
Customizing 0
Constructor_=Tensor<data_type,_rank>(size_array)= 1
Class_=TensorFixedSize<data_type,_Sizes<size0,_size1,_...>>= {'weight': 2}
Class_=TensorFixedSize<data_type,_Sizes<size0,_size1,_...>>= 0
Class_=TensorRef= 1
Accessing_Tensor_Elements {'weight': 2}
Accessing_Tensor_Elements 0
=<data_type>_tensor(index0,_index1...)= 1
TensorLayout {'weight': 2}
TensorLayout 0
Assigning_to_a_=TensorRef=. 1
Controlling_How_Expressions_Are_Evaluated {'weight': 2}
Controlling_How_Expressions_Are_Evaluated 0
Evaluating_On_GPU 1
API_Reference {'weight': 2}
API_Reference 0
=<Operation>= 1
Built-in_Tensor_Methods {'weight': 2}
Built-in_Tensor_Methods 0
Getting_Dimensions_From_An_Operation 1
Constructors {'weight': 2}
Constructors 0
TensorMap 1
Contents_Initialization {'weight': 2}
Contents_Initialization 0
=<Tensor-Type>_setRandom()= 1
Data_Access {'weight': 2}
Data_Access 0
=Scalar*_data()=_and_=const_Scalar*_data()_const= 1
Tensor_Operations {'weight': 2}
Tensor_Operations 0
=<Operation>_random()= 1
Unary_Element_Wise_Operations {'weight': 2}
Unary_Element_Wise_Operations 0
=<Operation>__unaryExpr(const_CustomUnaryOp&_func)= 1
Binary_Element_Wise_Operations {'weight': 2}
Binary_Element_Wise_Operations 0
=<Operation>_Logical_operators= 1
Selection_(select(const_ThenDerived&_thenTensor,_const_ElseDerived& {'weight': 2}
Selection_(select(const_ThenDerived&_thenTensor,_const_ElseDerived& 0
Reduction_along_all_dimensions 1
=<Operation>_sum(const_Dimensions&_new_dims)= {'weight': 2}
=<Operation>_sum(const_Dimensions&_new_dims)= 0
=<Operation>_reduce(const_Dimensions&_new_dims,_const_Reducer&_reducer)= 1
Trace {'weight': 2}
Trace 0
=<Operation>_trace()= 1
Scan_Operations {'weight': 2}
Scan_Operations 0
=<Operation>_cumprod(const_Index&_axis)= 1
Convolutions {'weight': 2}
Convolutions 0
=<Operation>_convolve(const_Kernel&_kernel,_const_Dimensions&_dims)= 1
Geometrical_Operations {'weight': 2}
Geometrical_Operations 0
=<Operation>__extract_image_patches(const_Index_patch_rows,_const_Index_patch_cols,_const_Index_row_stride,_const_Index_col_stride,_const_PaddingType_padding_type)= 1
ColMajor_1st_dimension__channels_(of_size_d)_2nd_dimension__rows_(of {'weight': 2}
ColMajor_1st_dimension__channels_(of_size_d)_2nd_dimension__rows_(of 0
=<Operation>_____eval()= 1
Representation_of_scalar_values {'weight': 2}
Representation_of_scalar_values 0
Run_benchmark_with_SLURM_for_NVIDIA_DGXA100_(_8_nodes_) 1
3._Model {'weight': 2}
Run_benchmark_with_SLURM_for_NVIDIA_DGXA100 1
3._Model {'weight': 1}
Run_benchmark_with_SLURM_for_NVIDIA_DGXA100_(_224_nodes_) 1
3._Model {'weight': 3}
output_metric* 1
work* {'weight': 5}
work* 1
Installation {'weight': 5}
BERT 1
Parameters {'weight': 5}
OPEN 1
Submission_Rules {'weight': 5}
Submission_Rules 0
Bare_metal_installation 1
Container {'weight': 5}
Container 0
easePoly.exponent(/e/) 1
easeQuad {'weight': 1}
easeQuad 0
easeQuadInOut 1
easeCubic {'weight': 1}
easeCubic 0
easeCubicInOut 1
easeSin {'weight': 1}
easeSin 0
easeSinInOut 1
easeExp {'weight': 1}
easeExp 0
easeExpInOut 1
easeCircle {'weight': 1}
easeCircle 0
easeCircleInOut 1
easeElastic {'weight': 1}
easeElastic 0
easeElastic.period(/p/) 1
easeBack {'weight': 1}
easeBack 0
easeBack.overshoot(/s/) 1
easeBounce {'weight': 1}
easeBounce 0
/project/.invert(/x/,_/y/) 1
geoProjection(/project/) {'weight': 1}
geoProjection(/project/) 0
or_strictly-negative*__the_domain_must_not_include_or 1
scaleLog(/domain/,_/range/) {'weight': 1}
scaleLog(/domain/,_/range/) 0
stackOrderReverse(/series/) 1
Stack_offsets {'weight': 1}
Stack_offsets 0
/symbolType/.draw(/context/,_/size/) 1
pointRadial(/angle/,_/radius/) {'weight': 1}
pointRadial(/angle/,_/radius/) 0
(or_*D3.js*)_is_a_free,_open-source_JavaScript_library_for 2
D3_is_a_low-level_toolbox {'weight': 1}
Resources {'weight': 1}
D3_is_a_low-level_toolbox 0
[[./d3-array/transform.md][Transform]] 1
[[./d3-axis.md][d3-axis]] {'weight': 1}
[[./d3-axis.md][d3-axis]] 0
[[./d3-geo/cylindrical.md][Cylindrical_projections]] 1
[[./d3-geo/stream.md][Streams]] {'weight': 1}
[[./d3-geo/stream.md][Streams]] 0
[[./d3-geo/math.md][Spherical_math]] 1
[[./d3-hierarchy.md][d3-hierarchy]] {'weight': 1}
[[./d3-hierarchy.md][d3-hierarchy]] 0
[[./d3-interpolate/zoom.md][Zoom_interpolation]] 1
[[./d3-path.md][d3-path]] {'weight': 1}
[[./d3-path.md][d3-path]] 0
[[./d3-scale/point.md][Point_scales]] 1
[[./d3-scale-chromatic.md][d3-scale-chromatic]] {'weight': 1}
[[./d3-scale-chromatic.md][d3-scale-chromatic]] 0
[[./d3-scale-chromatic/sequential.md][Sequential]] 1
[[./d3-selection.md][d3-selection]] {'weight': 1}
[[./d3-selection.md][d3-selection]] 0
[[./d3-selection/namespaces.md][Namespaces]] 1
[[./d3-shape.md][d3-shape]] {'weight': 1}
[[./d3-shape.md][d3-shape]] 0
[[./d3-shape/stack.md][Stacks]] 1
[[./d3-time.md][d3-time]] {'weight': 1}
[[./d3-time.md][d3-time]] 0
/pack/(/root/)_{#_pack} 1
/pack/.radius(/radius/) {'weight': 1}
/pack/.radius(/radius/) 0
/delaunay/.inedges 1
Delaunay.from(/points/,_/fx/,_/fy/,_/that/) {'weight': 1}
Delaunay.from(/points/,_/fx/,_/fy/,_/that/) 0
/voronoi/.xmin/voronoi/.ymin/voronoi/.xmax/voronoi/.ymax 1
/voronoi/.contains(/i/,_/x/,_/y/) {'weight': 1}
/voronoi/.contains(/i/,_/x/,_/y/) 0
(based_on_Vladimir_Agafonkin's_excellent 1
d3-array {'weight': 1}
d3-array 0
Changes_in_D3_5.0 0
[[https_//github.com/d3/d3-array/blob/master/README.md][Arrays 0
ai.onnx.ml 1
ai.onnx.ml {'weight': 1}
*ai.onnx.ml.Binarizer* 0
*ai.onnx.ml.CastMap* 0
Type_Constraints 53
*ai.onnx.ml.CategoryMapper* {'weight': 1}
*ai.onnx.ml.DictVectorizer* {'weight': 1}
*ai.onnx.ml.FeatureVectorizer* {'weight': 1}
*ai.onnx.ml.Imputer* {'weight': 1}
*ai.onnx.ml.LabelEncoder* {'weight': 1}
*ai.onnx.ml.LinearRegressor* {'weight': 1}
*ai.onnx.ml.Normalizer* {'weight': 1}
*ai.onnx.ml.OneHotEncoder* {'weight': 1}
*ai.onnx.ml.SVMClassifier* {'weight': 1}
*ai.onnx.ml.SVMRegressor* {'weight': 1}
*ai.onnx.ml.Scaler* {'weight': 1}
*ai.onnx.ml.TreeEnsembleClassifier* {'weight': 1}
*ai.onnx.ml.TreeEnsembleRegressor* {'weight': 1}
*ai.onnx.ml.ZipMap* {'weight': 1}
*ai.onnx.ml.Binarizer-1* {'weight': 1}
*ai.onnx.ml.CastMap-1* {'weight': 1}
*ai.onnx.ml.CategoryMapper-1* {'weight': 1}
*ai.onnx.ml.DictVectorizer-1* {'weight': 1}
*ai.onnx.ml.FeatureVectorizer-1* {'weight': 1}
*ai.onnx.ml.Imputer-1* {'weight': 1}
*ai.onnx.ml.LabelEncoder-1* {'weight': 1}
*ai.onnx.ml.LinearClassifier-1* {'weight': 1}
*ai.onnx.ml.LinearRegressor-1* {'weight': 1}
*ai.onnx.ml.Normalizer-1* {'weight': 1}
*ai.onnx.ml.OneHotEncoder-1* {'weight': 1}
*ai.onnx.ml.SVMClassifier-1* {'weight': 1}
*ai.onnx.ml.SVMRegressor-1* {'weight': 1}
*ai.onnx.ml.Scaler-1* {'weight': 1}
*ai.onnx.ml.TreeEnsembleClassifier-1* {'weight': 1}
*ai.onnx.ml.TreeEnsembleRegressor-1* {'weight': 1}
*ai.onnx.ml.ZipMap-1* {'weight': 1}
Version_2_of_the_'ai.onnx.ml'_operator_set {'weight': 1}
Version_3_of_the_'ai.onnx.ml'_operator_set {'weight': 1}
*ai.onnx.ml.TreeEnsembleRegressor-3* {'weight': 1}
Version_4_of_the_'ai.onnx.ml'_operator_set {'weight': 1}
*Constant* {'weight': 1}
*GlobalMaxPool* {'weight': 1}
*GridSample* {'weight': 1}
*Log* {'weight': 1}
*LpPool* {'weight': 1}
*MaxUnpool* {'weight': 1}
*Neg* {'weight': 1}
*OptionalGetElement* {'weight': 1}
*OptionalHasElement* {'weight': 1}
*RandomNormalLike* {'weight': 1}
*RandomUniform* {'weight': 1}
*RandomUniformLike* {'weight': 1}
*Range* {'weight': 1}
*SequenceConstruct* {'weight': 1}
*SequenceEmpty* {'weight': 1}
*SequenceErase* {'weight': 1}
*SequenceInsert* {'weight': 1}
*SequenceMap* {'weight': 1}
*ai.onnx.ml.CategoryMapper* 0
*ai.onnx.ml.DictVectorizer* 0
*ai.onnx.ml.FeatureVectorizer* 0
*ai.onnx.ml.Imputer* 0
*ai.onnx.ml.LabelEncoder* 0
*ai.onnx.ml.LinearClassifier* 0
*ai.onnx.ml.LinearRegressor* 0
*ai.onnx.ml.Normalizer* 0
*ai.onnx.ml.OneHotEncoder* 0
*ai.onnx.ml.SVMClassifier* 0
*ai.onnx.ml.SVMRegressor* 0
*ai.onnx.ml.Scaler* 0
*ai.onnx.ml.TreeEnsembleClassifier* 0
*ai.onnx.ml.TreeEnsembleRegressor* 0
*ai.onnx.ml.ZipMap* 0
Operator_Changelog 1
ai.onnx.ml {'weight': 1}
*ai.onnx.ml.Binarizer-1* 0
*ai.onnx.ml.CastMap-1* 0
*ai.onnx.ml.CategoryMapper-1* 0
*ai.onnx.ml.DictVectorizer-1* 0
*ai.onnx.ml.FeatureVectorizer-1* 0
*ai.onnx.ml.Imputer-1* 0
*ai.onnx.ml.LabelEncoder-1* 0
*ai.onnx.ml.LinearClassifier-1* 0
*ai.onnx.ml.LinearRegressor-1* 0
*ai.onnx.ml.Normalizer-1* 0
*ai.onnx.ml.OneHotEncoder-1* 0
*ai.onnx.ml.SVMClassifier-1* 0
*ai.onnx.ml.SVMRegressor-1* 0
*ai.onnx.ml.Scaler-1* 0
*ai.onnx.ml.TreeEnsembleClassifier-1* 0
*ai.onnx.ml.TreeEnsembleRegressor-1* 0
*ai.onnx.ml.ZipMap-1* 0
Version_2_of_the_'ai.onnx.ml'_operator_set 0
Version_3_of_the_'ai.onnx.ml'_operator_set 0
*ai.onnx.ml.TreeEnsembleRegressor-3* 0
Version_4_of_the_'ai.onnx.ml'_operator_set 0
on_model_validation* 0
on_language_in_this_and_all_related_documents*_ 1
Components {'weight': 1}
Exploring_an_ONNX_file* 1
Model_Semantics {'weight': 1}
Model_Semantics 0
As_of_the_publication_of_this_document,_no_ONNX_implementation_is 1
Operators {'weight': 1}
Operators 0
Version_and_Later* 1
External_Tensor_Data {'weight': 1}
External_Tensor_Data 1
Standard_data_types {'weight': 1}
Standard_data_types 0
Representation 1
Tensor_Element_Types {'weight': 1}
Tensor_Element_Types 0
Static_tensor_shapes 1
Attribute_Types {'weight': 1}
Attribute_Types 1
Training_Related_Information {'weight': 1}
Training_Related_Information 0
Adding_Experimental_Operators_[Deprecated_-_as_of_v1.5_experimental 1
Submit_an_Issue_with_a_proposal_explaining_the_motivation_and_plan._It {'weight': 1}
Submit_an_Issue_with_a_proposal_explaining_the_motivation_and_plan._It 0
graph*. 1
Input,_Output,_Node,_Initializer,_Attributes {'weight': 1}
Input,_Output,_Node,_Initializer,_Attributes 0
can_be_defined_as_a_set_of_operators._A_few_operators_in_this 1
Supported_Types {'weight': 1}
Supported_Types 0
Other_types 1
What_is_an_opset_version? {'weight': 1}
What_is_an_opset_version? 0
Loop 1
Extensibility {'weight': 1}
Extensibility 0
Operator_as_function 1
Tricks_learned_from_experience {'weight': 1}
Tricks_learned_from_experience 0
Build_the_markdown_documentation 0
Data_Serialization 1
Initializer,_default_value {'weight': 1}
Initializer,_default_value 0
Scan 1
Functions {'weight': 1}
Functions 0
A_function_with_attributes 1
Parsing {'weight': 1}
Parsing 0
Evaluate_a_custom_node 1
Implementation_details {'weight': 1}
LabelEncoder 1
💔No_Cover_Common_Operators {'weight': 1}
💔No_Cover_Common_Operators 0
ZipMap_(call_for_test_cases) 1
💚Covered_Experimental_Operators {'weight': 1}
💚Covered_Experimental_Operators 0
💔No_Cover_Experimental_Operators 1
Model_Test_Coverage {'weight': 2}
Model_Test_Coverage 0
Listing_and_inspecting_Models_ 1
Local_Caching {'weight': 1}
Local_Caching 0
Additional_cache_details 1
Architecture {'weight': 1}
Hosting_your_own_ONNX_Model_Hub 1
Raise_issue_if_any {'weight': 1}
Raise_issue_if_any 0
Serializing_SemVer_version_numbers_in_protobuf 1
IR_versioning {'weight': 1}
IR_versioning 0
Model_versioning 0
Accuracy_or_performance_changes 1
Released_Versions {'weight': 1}
Released_Versions 0
Checking_a_Large_ONNX_Model_>2GB 1
Running_Shape_Inference_on_an_ONNX_Model {'weight': 1}
Running_Shape_Inference_on_an_ONNX_Model 0
Shape_inference_a_Large_ONNX_Model_>2GB 1
Running_Type_Inference_on_an_ONNX_Function {'weight': 1}
Running_Type_Inference_on_an_ONNX_Function 0
ONNX_Compose 1
Tools {'weight': 1}
Tools 0
Updating_Model"s_Inputs_Outputs_Dimension_Sizes_with_Variable_Length 1
ONNX_Parser {'weight': 1}
ONNX_Parser 0
Example_to_Follow 1
Step_3__PR_Review_by_Operators_SIG {'weight': 1}
Step_3__PR_Review_by_Operators_SIG 0
Sign-off 1
Step_4__ONNX_release {'weight': 1}
Step_4__ONNX_release 1
Updating_an_existing_operator {'weight': 1}
Updating_an_existing_operator 0
Checklist 1
Removing_operator_or_function {'weight': 1}
Removing_operator_or_function 0
ai.onnx.preview.training 1
ai.onnx_(default) {'weight': 1}
ai.onnx_(default) 0
Sample_Implementation 1
*Acos* {'weight': 1}
*Acos* 0
*Acosh* 0
*Add* 0
*AffineGrid* 0
*And* 0
*ArgMax* 0
*ArgMin* 0
*Asin* 0
*Asinh* 0
*Atan* 0
*Atanh* 0
*AveragePool* 0
*BatchNormalization* 0
*Bernoulli* 0
*BitShift* 0
(i.e.,_Numpy-style)_broadcasting*__for_more_details 1
Version {'weight': 1}
Version 0
*BitwiseAnd* 0
*BitwiseNot* 0
*BitwiseOr* 0
*BitwiseXor* 0
*BlackmanWindow* 0
*Cast* 0
*CastLike* 0
*Ceil* 0
*Celu* 0
*CenterCropPad* 0
*Clip* 0
*Col2Im* 0
*Compress* 0
*Concat* 0
*ConcatFromSequence* 0
*Constant* 0
*ConstantOfShape* 0
*Conv* 0
*ConvInteger* 0
*ConvTranspose* 0
*Cos* 0
*Cosh* 0
*CumSum* 0
*DFT* 0
*DeformConv* 0
*DepthToSpace* 0
*DequantizeLinear* 0
*Det* 0
*Div* 0
*Dropout* 0
*DynamicQuantizeLinear* 0
*Einsum* 0
*Elu* 0
*Equal* 0
*Erf* 0
*Exp* 0
*Expand* 0
*EyeLike* 0
*Flatten* 0
*Floor* 0
*GRU* 0
*Gather* 0
*GatherElements* 0
*GatherND* 0
5* 1
Version {'weight': 1}
*Gelu* 0
*Gemm* 0
broadcasting*_(tensor_C_should_be_unidirectional 1
Version {'weight': 1}
*GlobalAveragePool* 0
*GlobalLpPool* 0
*GlobalMaxPool* 0
*Greater* 0
*GreaterOrEqual* 0
*GridSample* 0
*GroupNormalization* 0
*HammingWindow* 0
*HannWindow* 0
*HardSigmoid* 0
*HardSwish* 0
*Hardmax* 0
*Identity* 0
*If* 0
*ImageDecoder* 1
Portable_image_format_(PBM,_PGM,_PPM,_PXM,_PNM)_Decoded_images_follow {'weight': 1}
Portable_image_format_(PBM,_PGM,_PPM,_PXM,_PNM)_Decoded_images_follow 0
*InstanceNormalization* 0
*IsInf* 0
*IsNaN* 0
*LRN* 0
*LSTM* 0
*LayerNormalization* 0
*LeakyRelu* 0
*Less* 0
*LessOrEqual* 0
*Log* 0
*LogSoftmax* 0
*Loop* 0
*LpNormalization* 0
*LpPool* 0
*MatMul* 0
*MatMulInteger* 0
*Max* 0
*MaxPool* 0
*MaxRoiPool* 0
*MaxUnpool* 0
*Mean* 0
*MeanVarianceNormalization* 0
*MelWeightMatrix* 0
*Min* 0
*Mish* 0
*Mod* 0
*Mul* 0
*Multinomial* 0
*Neg* 0
*NegativeLogLikelihoodLoss* 0
*NonMaxSuppression* 0
*NonZero* 0
*Not* 0
*OneHot* 0
*Optional* 0
*OptionalGetElement* 0
*OptionalHasElement* 0
*Or* 0
*PRelu* 0
*Pad* 0
*Pow* 0
*QLinearConv* 0
*QLinearMatMul* 0
*QuantizeLinear* 0
*RNN* 0
*RandomNormal* 0
*RandomNormalLike* 0
*RandomUniform* 0
*RandomUniformLike* 0
*Range* 0
*Reciprocal* 0
*ReduceL1* 0
*ReduceL2* 0
*ReduceLogSum* 0
*ReduceLogSumExp* 0
*ReduceMax* 0
*ReduceMean* 0
*ReduceMin* 0
*ReduceProd* 0
*ReduceSum* 0
*ReduceSumSquare* 0
*RegexFullMatch* 0
*Relu* 0
*Reshape* 0
*Resize* 0
*ReverseSequence* 0
*RoiAlign* 0
*Round* 0
*STFT* 0
*Scan* 0
*Scatter*_(deprecated) 0
*ScatterElements* 0
*ScatterND* 0
*Selu* 0
*SequenceAt* 0
*SequenceConstruct* 0
*SequenceEmpty* 0
*SequenceErase* 0
*SequenceInsert* 0
*SequenceLength* 0
*SequenceMap* 0
*Shape* 0
*Shrink* 0
*Sigmoid* 0
*Sign* 0
*Sin* 0
*Sinh* 0
*Size* 0
*Slice* 0
*Softmax* 0
*SoftmaxCrossEntropyLoss* 0
*Softplus* 0
*Softsign* 0
*SpaceToDepth* 0
*Split* 0
*SplitToSequence* 0
*Sqrt* 0
*Squeeze* 0
*StringConcat* 0
*StringNormalizer* 0
*StringSplit* 0
*Sub* 0
*Sum* 0
*Tan* 0
*Tanh* 0
*TfIdfVectorizer* 0
*ThresholdedRelu* 0
*Tile* 0
*TopK* 0
*Transpose* 0
*Trilu* 0
*Unique* 0
*Unsqueeze* 0
*Upsample*_(deprecated) 0
*Where* 0
*Xor* 0
*ai.onnx.preview.training.Adam* 0
*ai.onnx.preview.training.Gradient* 0
*ai.onnx.preview.training.Momentum* 0
*_In_release_branch_update_the_version_number_in_file 1
Distribution*_*_Make_sure_all_the_git_submodules_are_updated_* {'weight': 1}
Distribution*_*_Make_sure_all_the_git_submodules_are_updated_* 1
onnx/onnx-operator.pb.h_*_onnx/onnx.pb.cc_*_onnx/onnx.pb.h_*_If_they {'weight': 1}
onnx/onnx-operator.pb.h_*_onnx/onnx.pb.cc_*_onnx/onnx.pb.h_*_If_they 0
Validation* 1
distribution_verification*_*_Test_the_source_distribution_by {'weight': 1}
distribution_verification*_*_Test_the_source_distribution_by 1
Upload_to_official_PyPI {'weight': 1}
Upload_to_official_PyPI 0
*_Windows/Linux_x86_64/Linux_aarch64/Mac_*_Create_a_new_API 1
Distribution*_*_Follow_the_same_process_in_TestPyPI_to_produce {'weight': 1}
Distribution*_*_Follow_the_same_process_in_TestPyPI_to_produce 1
After_PyPI_Release {'weight': 1}
After_PyPI_Release 0
*_Announce_in_slack,_for_instance,_=onnx-general=_channel._* 1
conda-forge_package_with_the_new_ONNX_version*_*_Conda_builds_of {'weight': 1}
conda-forge_package_with_the_new_ONNX_version*_*_Conda_builds_of 1
into_main_branch*_*_After_everything_above_is_done,_merge_the {'weight': 1}
into_main_branch*_*_After_everything_above_is_done,_merge_the 0
old_onnx-weekly_packages_on_PyPI*_*_Once_ONNX_has_been_released 1
opset_version_for_ai.onnx*_*_Bump_opset_version_for_ai.onnx_domain {'weight': 1}
opset_version_for_ai.onnx*_*_Bump_opset_version_for_ai.onnx_domain 0
Large_models_>2GB 1
TensorProto__data_location_and_external_data_fields {'weight': 1}
TensorProto__data_location_and_external_data_fields 0
Xor 1
💔No_Cover_Common_Operators {'weight': 1}
SequenceLength_(call_for_test_cases) 1
💚Covered_Experimental_Operators {'weight': 1}
zfnet512 1
Overall_Test_Coverage {'weight': 1}
Overall_Test_Coverage 0
Non-goals 1
Terminology {'weight': 1}
Proposal 1
Symbol_generation_and_propagation {'weight': 1}
Symbol_generation_and_propagation 0
Partial_data_computation_and_propagation 1
Special_Cases {'weight': 1}
Special_Cases 0
DCO 1
CI_Pipelines {'weight': 1}
CI_Pipelines 0
Mac 1
Verify_Installation {'weight': 1}
Verify_Installation 0
CMake_variables 1
Common_Errors {'weight': 1}
Common_Errors 1
Testing {'weight': 1}
Testing 0
Eligibility_for_voting 1
Candidacy_process {'weight': 1}
Candidacy_process 0
Voting_platform 1
Election_officers_and_Steering_Committee_emeritus_members {'weight': 1}
Election_officers_and_Steering_Committee_emeritus_members 0
Member_Companies 1
Organizational_Structure {'weight': 1}
Organizational_Structure 0
SIG_-_Special_Interest_Groups 0
Decision_making 1
WG_-_Working_Groups {'weight': 1}
WG_-_Working_Groups 1
Repository_Guidelines {'weight': 1}
Repository_Guidelines 0
Setting_the_correct_number_of_Workers_for_data_augmentation 1
Installation_instructions {'weight': 1}
Installation_instructions 0
from_nnU-Net_v1_can_be_converted_to_V2_by_running 1
Experiment_planning_and_preprocessing {'weight': 1}
Experiment_planning_and_preprocessing 0
that_not_all_U-Net_configurations_are_created_for_all_datasets._In 2
2D_U-Net {'weight': 1}
How_to_get_started? {'weight': 1}
2D_U-Net 0
that_the_3D_full_resolution_U-Net_of_the_cascade_requires_the_five 1
Using_multiple_GPUs_for_training {'weight': 1}
Using_multiple_GPUs_for_training 0
The_first_time_a_training_is_run_nnU-Net_will_extract_the 1
Automatically_determine_the_best_configuration {'weight': 1}
Automatically_determine_the_best_configuration 0
Apply_postprocessing 1
How_to_run_inference_with_pretrained_models {'weight': 1}
How_to_run_inference_with_pretrained_models 0
Verify_that_environment_parameters_are_set 1
Windows {'weight': 1}
Run_trainings 1
How_to_make_predictions_with_pretrained_weights {'weight': 1}
How_to_make_predictions_with_pretrained_weights 0
Local_settings 1
Examples {'weight': 1}
must_share_the_same_geometry_with_their_corresponding 1
Supported_file_formats {'weight': 1}
Supported_file_formats 0
How_to_update_an_existing_dataset 1
Example_dataset_conversion_scripts {'weight': 1}
Example_dataset_conversion_scripts 0
Pretraining_on_the_source_dataset 0
The_nnU-Net_default_is_to_perform_'CT'_normalization_for_CT 1
How_to_implement_custom_normalization_strategies? {'weight': 1}
How_to_implement_custom_normalization_strategies? 0
is_a_semantic_segmentation_method_that_automatically_adapts_to 1
What_can_nnU-Net_do_for_you? {'weight': 1}
What_can_nnU-Net_do_for_you? 0
How_to_get_started? 0
What_happened_to_the_old_nnU-Net? 1
Acknowledgements {'weight': 1}
Acknowledgements 0
Stats_(On_the_development_set) 1
v1.0 {'weight': 1}
Minimal_CK_installation 0
Install_or_detect_ImageNet_dataset 1
Install_TF {'weight': 1}
Install_TF 0
example_is_currently_not_compatible_with_the_latest_MedPerf 3
data_prep {'weight': 1}
prep__Data_Preparation_MLCube {'weight': 1}
surg_prep {'weight': 1}
data_prep 0
Get_the_data 1
Run_cube_on_a_local_machine_with_Docker_runner {'weight': 2}
Run_cube_on_a_local_machine_with_Docker_runner 0
prep__Data_Preparation_MLCube 0
Supported_=.json=_File_Structure_ 1
Configuration {'weight': 1}
Task_=sanity_check= 1
a_csv_file_doesn't_have_a_corresponding_folder_in_the_=frames=_folder, {'weight': 1}
a_csv_file_doesn't_have_a_corresponding_folder_in_the_=frames=_folder, 0
surg_prep 0
Task_=infer= 1
An_output_folder_is_created_(=predictions=)_*_For_each_video,_a_csv {'weight': 1}
An_output_folder_is_created_(=predictions=)_*_For_each_video,_a_csv 0
to_the_Broad_Community_* 1
What_is_a_benchmark_in_the_MedPerf_perspective? {'weight': 1}
What_is_a_benchmark_in_the_MedPerf_perspective? 0
=additional_files.tar.gz=_(Optional) 1
Preparing_an_MLCube_for_hosting {'weight': 1}
Preparing_an_MLCube_for_hosting 0
Direct_download_links_of_files_on_GitHub 1
Synapse_hosting {'weight': 1}
Synapse_hosting 0
Docker_or_Singularity 1
Install_MedPerf {'weight': 1}
Install_MedPerf 0
Submit_the_MLCube 1
3._Request_Participation {'weight': 1}
3._Request_Participation 0
How_to_proceed_after_requesting_association 1
4._Execute_the_Benchmark {'weight': 1}
4._Execute_the_Benchmark 0
Metrics_MLCube 1
5._Host_the_Demo_Dataset {'weight': 1}
5._Host_the_Demo_Dataset 0
Choose_the_Container_Runner 1
What's_Next? {'weight': 1}
What's_Next? 0
Model_MLCube*,_and_the_*Metrics_MLCube*._Each_type_has_a_specific 1
Data_Preparator_MLCube {'weight': 1}
Data_Preparator_MLCube 0
Download_the_Necessary_files 1
1._Train_a_GaNDLF_Model {'weight': 1}
1._Train_a_GaNDLF_Model 0
Prepare_your_Dockerfile 1
The_=mlcube=_folder {'weight': 1}
The_=mlcube=_folder 0
model_weights 1
Configure_your_MLCube {'weight': 1}
Configure_your_MLCube 1
Build_your_MLCube {'weight': 1}
Build_your_MLCube 0
Add_model_weights 1
Modify_=mlcube.py= {'weight': 1}
Modify_=mlcube.py= 0
Run_your_MLCube 1
Using_the_Example_with_GPUs {'weight': 1}
Using_the_Example_with_GPUs 0
FeTS_Challenge 1
Pilot_Studies {'weight': 1}
Pilot_Studies 0
institutions* 1
 {'weight': 3}
POC_2_-_Pancreas_Segmentation 0
POC_3_-_Surgical_Workflow_Phase_Recognition 0
POC_4_-_Cloud_Experiments 0
How_to_Use_MedPerf 0
Prepare_checkpoints 1
Prune_models_and_test_the_accuracy_on_GLUE/SQuAD_benchmarks {'weight': 1}
Prune_models_and_test_the_accuracy_on_GLUE/SQuAD_benchmarks 0
Longterm_there_are_no_explicit_restrictions_on_what_devices_can_be 1
References {'weight': 1}
or_*eval_data//train/*._Note_that_in_MLPerf_Tiny_we 1
Detailed_Usage {'weight': 1}
Detailed_Usage 0
Dependency 0
10*. 1
Software_packages {'weight': 1}
Software_packages 0
Push_the_datatsets_to_the_device 1
Now_you_can_launch_the_app,_select_submission_mode_and_press_GO {'weight': 1}
Now_you_can_launch_the_app,_select_submission_mode_and_press_GO 0
Calibration_Datasets 1
Quantization {'weight': 1}
-_Updated_NodeJS_from_v12_to_v16 1
[[https_//github.com/cla-assistant/github-action/tree/v2.0.1-alpha][v2.0.1-alpha]] {'weight': 1}
[[https_//github.com/cla-assistant/github-action/tree/v2.0.1-alpha][v2.0.1-alpha]] 0
Bugs_*_-_Skip_CLA_comment_if_already_commented 1
[[https_//github.com/cla-assistant/github-action/tree/v2.0.0-alpha][v2.0.0-alpha]] {'weight': 1}
[[https_//github.com/cla-assistant/github-action/tree/v2.0.0-alpha][v2.0.0-alpha]] 0
-_complete_refactoring_of_all_the_files_to_make_the_bot 1
Bugs_*_-_CLA_check_not_updated_to_success_when_all_the {'weight': 1}
Bugs_*_-_CLA_check_not_updated_to_success_when_all_the 0
Issue_Reporting_Disclaimer 1
Contribute_Code {'weight': 1}
Contribute_Code 0
Reproduce*_Steps_to_reproduce_the_behavior_ 0
Configure_Contributor_License_Agreement_within_two_minutes 0
You_do_not_need_to_create_this_file_manually._Our_workflow_will 1
5._Users_and_bots_in_allowlist {'weight': 1}
5._Users_and_bots_in_allowlist 1
Environmental_Variables__ {'weight': 1}
Environmental_Variables__ 0
Inputs_Description__ 1
License {'weight': 1}
Credits 0
License.*_You_hereby_grant,_and_agree_to_grant,_to_SAP_a 2
License.*_You_hereby_grant,_and_agree_to_grant,_to_SAP_a {'weight': 1}
Rights.*_To_the_fullest_extent_permitted_under_applicable_law, {'weight': 1}
Rights.*_To_the_fullest_extent_permitted_under_applicable_law, 0
You_represent_that,_other_than_the_Third_Party 1
To_the_fullest_extent_permitted_under_applicable_law,_your {'weight': 1}
To_the_fullest_extent_permitted_under_applicable_law,_your 1
Obligation.*_You_acknowledge_that_SAP_is_under_no_obligation_to_use {'weight': 1}
Obligation.*_You_acknowledge_that_SAP_is_under_no_obligation_to_use 0
